{"pages":[],"posts":[{"title":"在Steemit的写作计划 | My Writing Plan on Steemit","text":"初来Steemit，对系统和社区还很不了解，仅做此文以为开篇。 这是第一篇正式的文章，旨在立意与立志；或可以草草作为序言。 我同意人生的目的之一在于“觉解”（如冯友兰在《中国哲学简史》，而“觉解”的过程包括学、问、思、辨、行等，通过与宇宙与人世的交互以“证道”。相对应的，我写作的话题主要在以下一些领域：哲学、社会现实、技术、创业、学术、工作、家庭，希望从个人所处的环境来观察世界、提供见解、促进自我成长、帮助文明和世界更好地发展。 伊萨克·阿西莫夫（最伟大的科幻作家之一）说过：“学会一门学科或者学问最好的策略，就是写一本相关的书” (阿西莫夫的一生的著作超过500本)。 我同意通过写作来帮助别人或者自己解决一个重要的问题，是很有价值和意义的生活实践。以下是我开列的一些写作”书单“，写作频率可能要根据具体的情况而定了。顾炎武说：“以兴趣始，以毅力终”，希望可以有志与力，并且有外物以相之，而终能致。 《技术哲学简史》：在人类社会中，技术的出现远早于科学精神；这本集子想讨论一下技术的发展史、技术和科学的关系，技术哲学的研究和未来的发展方向等。 《黑客往事》：这里的黑客（Hacker）是指那些有创造性的人类。希望梳理在计算机科学、现代信息技术、人工智能等领域中的关键节点们，包括理论、工程实践、商业、社会、哲学等领域有重要贡献的黑客们的故事。 《观非常人，行非常事》：旨在介绍那些我们在历史中听闻过但或许没有审视过的“非常人”，主要还是以中国的历史脉络为主。如玄奘、王安石、李鸿章、梁启超等。 《未来教育学》：给家长们阅读的一些文集，希望可以讨论现代和未来教育学方面的一些变化，对“学问思辨行”的影响。以及如何真正面向历史、现在和未来，与这个世界的孩子们一起成长。 《现代创业思想》：希望介绍现代创业者，在思想和实践方面值得大多数人在工作和生活中学习的方面，结合大家了解或者不了解的一些创业者的历史来说。 《中国社会变迁》：对社会进行解剖学研究和模式识别，从系统的角度给社会建模，从宏观与细微处理解社会这个复杂网络系统的各个层面。 《智能简史》：希望从生物和机械的智能的形成与演化，人类的智能的缺陷与发展等等，描述智能在宇宙中的进化过程，以及可能的发展方向。 还有一些别的感兴趣的话题，但能把这些“书”当中的一二写好已经极为不易，希望所想所写能对读者有所裨益。 最后，很高兴到Steem来写作，希望在这里结识更多海内外的朋友。如果有值得阅读的Steem专栏，还请各位朋友推荐！至于说基于区块链的内容激励系统等区块链技术和应用，我也有一些研究和想法，希望能在Steem向更多人学习 :) As a newbie in Steemit, I know very little about the rules and tricks in the system, but I’m happy to join you here with this writing. This is my first article actually, which aims to set my writing objectives in Steemit, and it may serve as a preface for a series of articles. I agree that one of the purposes of life is to seek “enlightenment” (as mentioned by the Chinese philosopher Feng Youlan in his book [A Brief History of Chinese Philosophy] (https://book.douban.com/subject/1021273/), and the process of “enlightenment” includes learning , questioning, thinking, discerning, actioning, etc., through the interaction with the universe and the human world to realize the goal of pursuit of Taoism. Correspondingly, my writing topics are mainly in the following areas: philosophy, social reality, technology, entrepreneurship, academics, work, family. Via my writing, I hope I can observe more about the world, provide insights to those who need them, boost self-growth and learning, and help the world’s civilization to be more excellent. Isaac Asimov (one of the greatest science fiction writers) said: “The best strategy for learning a subject is to write a related book”. (He wrote 500+ books in his life.) I think it’s a good approach to solve an important problem for myself or others by writing a book. It is a valuable and meaningful life practice. The following are some of the “books” that I think I’m interested to write. Gu Yanwu (a Chinese thinker in Ming and Qing Dynasty) said: “Beginning with interest, ending with perseverance,” I hope that I have strong enough aspirations and strengths to reach my objectives with intrinsic and foreign motivations and energies. “A Brief History of Philosophy of Technology”: In human society, technology emerges much earlier than the spirit of science; this collection wants to discuss the history of technology development, the relationship between technology and science, the study of technological philosophy and future development direction, etc. “The Stories of Hackers”: Hacker here refers to those who are creative and invent a lot of great stuff to our society. I hope to sort out the key nodes in the fields of computer science, modern information technology, artificial intelligence, etc., including the stories of hackers who have made important contributions in the fields of theory, engineering, business, society, and philosophy in the computer and internet age. “Great People and Great Adventures”: To introduce those “extraordinary people” that we have heard in history but may not have learnt about them closely, which are mainly based on the historical context of China. The people include Xuan Zang (玄奘), Wang Anshi (王安石), Li Hongzhang (李鸿章), Liang Qichao (梁启超) and so on. “Education in the Future”: Some collections for parents to read, hoping to discuss some of the changes in modern and future pedagogy, and its impact on “learn, think and action”, and how to truly help the world’s children grow via modern understanding about history, present and future. “Modern Entrepreneurship Mindset”: I hope to introduce modern entrepreneurs, in terms of thinking and practice, worthy of the majority of people studying in work and life, combined with the history of some entrepreneurs who the public already know or not . “The Evolution of Chinese Society”: Anatomy and pattern recognition of society, modeling society from a system perspective, and analyzing the various aspects of society as a complex network system from macro and subtle processing. “A Brief History of Intelligence”: I hope to describe the evolutionary process of intelligence in the universe and the possible development direction from the formation and evolution of biological and mechanical intelligence, and the defects and development of human intelligence. There are some other topics of interest, but it is already extremely difficult to write one or two of these above “books”. I hope that what I want to write can be beneficial to readers. Finally, I am very happy to write blogs in the Steemit community and hope I can make a lot of friends here. For those Steemit author or column worth reading, please recommend to me kindly, my friends! As for the blockchain technology and applications such as the blockchain-based content incentive system, I also have very strong interest and some ideas, and I hope I can learn from everyone in Steemit :) This page is synchronized from the post: 在Steemit的写作计划 | My Writing Plan on Steemit document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemit-or-my-writing-plan-on-steemit/"},{"title":"The Road Not Taken","text":"The Road Not TakenBY ROBERT FROST Two roads diverged in a yellow wood,And sorry I could not travel bothAnd be one traveler, long I stoodAnd looked down one as far as I couldTo where it bent in the undergrowth; Then took the other, as just as fair,And having perhaps the better claim,Because it was grassy and wanted wear;Though as for that the passing thereHad worn them really about the same, And both that morning equally layIn leaves no step had trodden black.Oh, I kept the first for another day!Yet knowing how way leads on to way,I doubted if I should ever come back. I shall be telling this with a sighSomewhere ages and ages hence:Two roads diverged in a wood, and I—I took the one less traveled by,And that has made all the difference. This page is synchronized from the post: The Road Not Taken document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/the-road-not-taken/"},{"title":"作为科普作家的艾萨克·阿西莫夫 | Isaac Asimov and Popular Science","text":"本文介绍科幻小说和科普作品在普及科学精神中的价值，以及著名科幻作家艾萨克·阿西莫夫不为人所了解的科普作家的一面。 为什么我们热爱科学？第二次世界大战结束以后，由于科学技术的迅猛发展，自然科学课程在全世界主要国家的公民教育中受到越来越高的重视。在国内出现了“学好数理化，走遍天下都不怕”、“科学技术是第一生产力”的说法，大众对于科学的崇敬与追逐，几乎到了科学至上、“科学主义”的程度。 在熏陶科学素养方面，政府主导的学校科学教育、自然博物馆、科技博物馆等，毫无疑问具有非常重要的作用。但真正让科技变成了每个人生活的一部分，还要属科技与文化、传媒和商业领域的结合与应用。其中，大量的文化作品，例如科幻小说、少儿科普读物、科学杂志、科幻电影、科幻动画和漫画，对于科学精神、科学素养和科学方法的塑造有着不可忽视的作用。 （在中国大陆）改革开放以后，除了80年代曾经一段时间的“科幻”禁令带来的隔绝，90年代以后的年轻人接触了大量的科学和科幻文化作品，启发了年轻人对于未来世界和科学创造的极大兴趣。比如： 科幻小说：如儒勒·凡尔纳的《格兰特船长的儿女》、《海底两万里》、《神秘岛》、《80天环游地球》，H·G·威尔斯的《时间机器》、《隐身人》，艾萨克·阿西莫夫的《机器人系列》、《银河帝国系列》、《基地系列》等； 少儿科普读物：《十万个为什么系列》、《少年儿童百科全书》等； 科幻电影：《2001年太空漫游》、《星球大战》、《黑客帝国》等； 科幻动画和动漫：《铁臂阿童木》、《星际迷航》、《银河英雄传说》、《攻壳特工队》等 有趣的是，在1999年的全国语文高考中，命题作文《假如记忆可以移植》具有强烈的科幻色彩，曾经成为一时的热门话题。Big Bang（《生活大爆炸》）等科学类热门电视剧也曾经深受年轻人喜爱，剧中随处可见与上面这些科幻小说、电影等相关的桥段。至于近几年刘慈欣的《三体系列》（The Three Body Problem）的火爆程度，则几乎直逼金庸“武侠小说”的待遇，让科幻文学一跃成为主流，被无数孩子和成人认同与喜爱。 《三体》The Three Body Problem | from Wikipedia) | Creative Commons Attribution-ShareAlike License 诚然大众在批判性思维、科学素养、独立思考等方面仍然有待提高，但科学幻想故事与文化，已经成为了一代年轻人的共同的文化背景与生活回忆，其价值是毋庸置疑的。 改变世界的科幻小说对于科学精神和方法的教育，不能脱离科学相关文化的熏陶；而基于科幻作品形成的文化甚至能直接塑造现实、改写未来。 第一流的“科学幻想”（Science Fiction）作品，除了天马行空的“幻想”的部分，还有体系严密的“科学”的部分，或许在一些科学逻辑和论证上存在漏洞，但对于激发读者对未来的想象和科学的热情，甚至引领科学研究的方向，有着惊人的价值。比如艾萨克·阿西莫夫的“机器人三大定律”对于机器人的发展有着重要的启示、“机器人学（robotics）”这一单词则直接是由阿西莫夫所发明的、“心理史学（psychohistory）”则与今天的大数据技术遥相呼应、“人类殖民银河系”的情节对Elon Musk的SpaceX等项目的启发等等，可以说阿西莫夫对于当下依然热门的“人工智能”、“大数据”、“太空技术”都有着从理想、技术和文化层次的影响力。 有人认为阿西莫夫，与儒勒·凡尔纳、H·G·威尔斯可以并称为科幻历史上的三巨头。对于阿西莫夫的科幻小说作品的介绍，可以参见维基百科艾萨克·阿西莫夫词条中的详细描述。都说刘慈欣的作品以架构宏大见长，阿西莫夫那一代科幻作家想象的宏伟瑰丽，也无一不是令人惊叹，感兴趣的朋友可以重点阅读《基地系列》、《机器人系列》、《银河帝国系列》等。这里特别推荐阿西莫夫的一部短篇作品《最后一个问题》（亮点在最后，但请别直接跳到最后），它与区块链技术有着微妙的联系。 Isaac Asimov 艾萨克·阿西莫夫 | from Wikipedia | Creative Commons Attribution-ShareAlike License 阿西莫夫的科普生涯对于科普作家及其作品，公众真正熟悉和了解的并不多，特别知名的如史蒂芬·霍金的《时间简史》、《大设计》等。事实上，存在大量面向公众的学科普及类书籍和杂志等，他们在传播科学精神与科学方法方面存在极为重要的价值。面向少年儿童的《十万个为什么》即为这一类，曾经也是儿童科学教育的必备读物之一。今天面向少年儿童的读物更多了，但影响力却似乎不如从前。面向成人的科学读物，则似乎被大量的知识付费课程和在线文章所代替，也是值得思考的社会现象。 阿西莫夫一生著作接近500本，涉猎数学、物理、化学、生物学、生物化学、天文学、地球科学、历史、文学、宗教以及小说等领域，几乎遍布学科分类法的各个门类。相比之科幻小说，阿西莫夫在科学普及上的成就虽然影响力不如小说，但却更令人敬佩与叹服。 1957年，苏联发射第一颗人造地球卫星深深地触动了阿西莫夫，他深感公众的科学素养落后于当代的科技发展水平。他认为自己有责任尽力而为使这种差距尽快地缩小，于是毅然收缩早已得心应手的科幻创作，潜心撰写科普方面的书籍和文章。 在这些科普作品中，较为著名的有百万字的著作《阿西莫夫最新科学指南》和《阿西莫夫的科学与技术传记百科全书》（中译本易名为《古今科技名人辞典》，历时三年时间完成，由为古今各国最重要的1000多名科学家的小传组成）；以及一批二三十万字的科普力作，如《生命和能》、《地外文明》、《终极抉择》、《科技名词探源》、《洞察宇宙的眼睛》、《亚原子世界探秘》等；为青少年读者写的丛书《我们怎样发现了一》和《阿西莫夫少年宇宙》；还有《无穷之路》、《变！未来七十一瞥》、《新疆域》和《新疆域（续）》等科学随笔集。 科普与学术研究采取的是截然不同的方法，一个注重广度、一个注重深度。阿西莫夫原本是一位生物化学副教授，研究最需要在某一个创新点上不断深入，但他发现最广泛地涉猎知识并向大众传播科学精神更符合他的思维方式与爱好，这使得他离开研究工作，成为一名专职作家。 作为作家的阿西莫夫留下了极为珍贵的财富：关注社会公众的精神，传播科学的巨大热情，严肃认真的写作态度和脚踏实地的处事作风。重读阿西莫夫的自传、跨学科的著作以及科幻杰作，对于科普工作者而言具有极大意义。若无对生命、世界之深刻热爱，是不可能完成像阿西莫夫这样巨量的高质量作品的；唯有凭借这种大爱，才能真正将科学精神与理性思考传播给更多的需要它的人。 It’s Been a Good Life，阿西莫夫的人生正如他的自传的标题所言：作为写作者，阿西莫夫一生出版作品近500部，震古烁今；作为科幻作家，他产出了大量“神作”，无不令人叹为观止，对后世影响极大；作为科学家，他广泛传播科学知识，以利社会，令人敬佩。如阿西莫夫这样天赋非凡，又有宏大志愿与坚韧毅力的名家，足以为后世作家与科学家在精神与行动上之楷模。 本文是《观非常人，行非常事》这一系列文章中关于伟大的科幻/科普作家艾萨克·阿西莫夫的介绍的一部分。 参考资料 Wikipedia, 艾萨克·阿西莫夫 / Isaac Asimov Edward Seiler, Isaac Asimov Home Page 百度百科，艾萨克·阿西莫夫 Wikipedia, 科学普及 Issac Asimov, It’s Been a Good Life, 2002/03 (Issac Asimov’s autobiography edited by Janet Jeppson Asimov) Sponsored ( Powered by dclick )Introducing DCLICK: An Incentivized Ad platform by Proof of Click. - Steem based AdSense.Hello, Steemians. Let us introduce you a new Steem B… This posting was written viadclick the Ads platform based on Steem Blockchain. This page is synchronized from the post: 作为科普作家的艾萨克·阿西莫夫 | Isaac Asimov and Popular Science document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/-isaac-asimov-and-popular-science-1546890296506/"},{"title":"【Steem之旅】2019年Steem世界的探索 | Exploring the Steem World in 2019 |【新手学堂作业】","text":"本篇的初衷是为了完成CN区新手村的本期作业：2019年的计划。 最初了解和注册Steemit是在2018年2月，在研究基于blockchain的技术和社会学问题时顺便做的尝试。但之后一直没有留意什么时候通过注册的，所以也一直忘了尝试打开，直到最近希望做更进一步的体验和学习，才真正打开了这个账户，零碎地阅读了一些资料。直到大概一周前，开了一个写作计划，才正式开始了Steem之旅。 之前在CN区看到team-cn发的新手村文章，所以发文的同时at了team-cn，才终于被村长大人 @ericet 捞到了新手村！进村以后，受到了村民们的热情帮助与关照，发现这是一个“乐观、友谊、多元、合作”的村子，十分有趣，更加强了在这里认识更多朋友、一起探索世界的兴趣。 目前来说，Steem对我来说还是一个比较特别的世界。之前看到blockchain的价值和潜力时，曾觉得互联网的田园牧歌时代即将过去，而一个更现实和趋利的现代的Web会逐渐降临；目前看来确实也未必一定如此，但至少这是一个更真实而有趣的游戏（如 @kidsreturn 提到的）。事实上，现实的人类社会也不过是个大型多人在线角色扮演游戏（MMORPG），只不过用财力和权力替代了Steem/SBD/SP，用国家/地区/文化代替了各种标签和群组，大多数人并不认识背后的游戏创造者和规则制定者，每个人在这个游戏中扮演的角色也不尽相同，玩法也确实足够丰富。 如上所说，我的2019Steem计划如下： 完成写作计划 约40~60%：我认为写作的目的在于成长，所以我对每一篇文章本身都略有些慎重；可能已经没了年幼时随意书写和记录的心态，当然以后也很难说 :) 其实还有一些别的书单想完成（如关于语言学），但能力和精力所限，先从这一些开始写吧。目标设定方面，我一般都按照OKR的比较有野心的设定法，能完成40~60%属于正常发挥吧。深入探索Steem世界：这方面的工作会记录到【Steem之旅】这个系列中来。包括对Steem在内的生态系统的探索，对基于Steem的开源和开放数据实践的研究，对Steem经济系统、社会形态、文化影响的学习和了解等等，Steem对现实世界的潜在影响等。同时希望可以基于Steem以及其他技术和方法，做一些工作，对这个世界，提供有一些有限的帮助 在Steem认识更多朋友：Steem是一个微缩但更真实的世界（正如有时候游戏比现实世界更真实；参见计算社会学相关研究），希望在CN区以及其他组群中了解并认识更多朋友，参与一些线上和线下活动，让这里的居民的生活可以更有趣、更有意义吧。但前提是，如 @honoru 所说，一两个月后能留下来，再说其他的 :) 最后，很荣幸认识CN区新手村的大家，希望可以一起在这里快乐成长~ 世界总是充满各种可能，这里也是。 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/01/%e3%80%90steem%e4%b9%8b%e6%97%85%e3%80%912019%e5%b9%b4steem%e4%b8%96%e7%95%8c%e7%9a%84%e6%8e%a2%e7%b4%a2-exploring-the-steem-world-in-2019 This page is synchronized from the post: 【Steem之旅】2019年Steem世界的探索 | Exploring the Steem World in 2019 |【新手学堂作业】 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem2019steemexploringthesteemworldin2019-75f55ju8qg/"},{"title":"【黑客之道】#1：如何培养真正的黑客？","text":"本文为《黑客往事系列 之 黑客之道》的第一篇“如何培养真正的黑客”。《黑客往事》系列是一个文集，旨在介绍黑客相关的人物、历史、技术、文化、哲学、美学等有关现代信息技术发展的重要节点。 《黑客之道》为《黑客往事》这一系列的其中一个章节，旨在介绍黑客在“道”的层面的修养。 那么，什么是黑客之道呢？我们想要解决的究竟是什么问题呢？ 首先，第一个问题，什么是“黑客”？ 由于媒体报道的缘故，“黑客”一词存在歧义。似乎更常用的是指代入侵计算机系统，进行破坏或攻击的人。我们这里采用Eris S Raymond的在How to Become a Hacker中的定义： There is a community, a shared culture, of expert programmers and networking wizards that traces its history back through decades to the first time-sharing minicomputers and the earliest ARPAnet experiments. The members of this culture originated the term ‘hacker’. Hackers built the Internet. Hackers made the Unix operating system what it is today. Hackers make the World Wide Web work. If you are part of this culture, if you have contributed to it and other people in it know who you are and call you a hacker, you’re a hacker.The basic difference is this: hackers build things, crackers break them.Eric S Raymond, How to Become a Hacker﻿ “黑客”需要追溯到那些追求自由和实现伟大技术的创造者们，而不是那些破坏系统的人。换句话说，我们这里说的黑客是那些有好奇心、探索精神、创造力、开放共享和协作态度的技术开拓者们。Ken Thompson (sitting) and Dennis Ritchie working together at a PDP-11from Wikipedia - UNIXCC BY-SA 2.0 其次，什么是“道”，为什么要谈“道”？ 我们今天的计算机科学的高等教育是成功的吗？毫无疑问，那些创造了最早期的计算机和人工智能的发明者们，都不是现代计算机科学教育的产物，恰恰相反，他们从其他学科和人类的普遍智慧中汲取养料，独立创新，取得了非同一般的突破。然而，现在的大多计算机科学教育的理论和实践，更注重知识、技术、工程、商业的“术”的层面的理论和实践，而忽视了“道”的层面的贯通与升华（当然这已经好过一些只注重书面知识的教育模式），以至于很多行业从业者仅仅能完成最基本的编码、测试等工作，常被称作“码农”（或者“软件工程师”）。 他们对于如何实现更具有创造性、颠覆性的突破，在行为上难以有建树，更致命的是在思想上、哲学上、认识论上过于浅薄，找不到方向而不自知。有些“程序员”常常为了追求技术而技术，但并不能影响或主导技术真正发展方向，也就有悖于真正的“黑客精神”，无以望先贤的项背。所以这种差距有时不仅仅是技术上的，更是思想、观念、文化、哲学和美学上的“道”，但这些并不是书本上的计算机知识会直接传授或培养的。 不管是哪个专业背景出生的工程师，要成为真正的“黑客”，则必须具有内在的好奇心、探索精神与创造力，以及思想与文化上对技术与创造的认识、格局与见解。我们把这些蕴含了黑客的精神、情义和思想的力量，称为“黑客之道”；好比于侠之道义，而非限于武艺。这也是我们想在《黑客之道》中讲述的。 所以，想要“培养真正的黑客”，除了很多人已经有所了解的、看得见的“术”的层面，我们希望从大多数忽视的“道”的方面出发，结合在技术、方法等其他方面的学习，来最终抵达一种通融的境界。君子不器，黑客亦然。 欲成其道，必先问道。问道之人，或有疑惑、或有闲情、或有鸿志，无论动机如何，只要一个人愿意尝试成为我们所说的“黑客”，我们就希望与之一同探讨这“黑客之道”、技术之禅。这旅程由此开启。 下一篇预告：【黑客之道】#2：真正的问题解决者。 参考文献 Eric S Raymond, How to Become a Hacker﻿ Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/01/%e3%80%90%e9%bb%91%e5%ae%a2%e4%b9%8b%e9%81%93%e3%80%911%ef%bc%9a%e5%a6%82%e4%bd%95%e5%9f%b9%e5%85%bb%e7%9c%9f%e6%ad%a3%e7%9a%84%e9%bb%91%e5%ae%a2%ef%bc%9f This page is synchronized from the post: 【黑客之道】#1：如何培养真正的黑客？ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/1-1ijyo8d4ml/"},{"title":"【黑客之道】序 - #2 真正的问题解决者","text":"黑客，是一种创造者；与其他的创造者或创作者类似（如：作家、作曲家、画家、雕塑家、建筑师等），具备目的性，也即解决某一个特定的问题。例如《战争与和平》为描绘社会风貌的恢弘史诗，《命运交响曲》赞美与命运的斗争，“哀悼基督”为圣彼得大教堂而塑造，“长城”则为抵御北方游牧民族所建。 解决问题（Problem Solving），是黑客之道的核心，也是技术和艺术的核心。甚至对日常生活也是如此，掌握了解决问题的科学和艺术，就能破开人生的重重困境，人生的意义或许也能够彰显。 于是，黑客之道，是这样一种思想与智慧：如何用正确的方法，解决真正的问题。 1. 人生意义与解决问题（Problem Solving） （1）人生的意义 人生的意义是什么？这总不易回答，由于没有标准答案，人生也就变得多彩、有了极大的自由；但自由和纷繁，有时也意味着茫然与无措。关于人生意义，我们可以看到多种解释，以下为几类： 享乐：有人认为人生的意义在于这浩大的红尘之中，名利权情、孜孜以求，“黄金屋”、“颜如玉”、“千钟粟”，不一而足；自赋：有人认为人生的意义是可以自我赋予的、不受拘束的，意义可以有、也可以没有，天下无我、何来山水；证道：有人认为人生的意义乃是维护世间正法、或探求智慧与真理、或推动人类发展，此乃天道所授，时不我待、舍身证法；解脱：有人认为人生的意义在于解脱于俗尘之外，别有洞天、渡人渡己。 “儒”、“法”、“道”、“墨”对此的看法甚为不同：“儒法”重“治世”、“道”尚“自然”、“墨”主“兼爱”（略近似于“博爱”，但并不相同）。 （2）结果还是过程 就世俗而言，我们可以从结果和过程的角度，获得两个方面的人生意义： 结果论：以解决问题的角度来看，即此人的一生解决了何种问题或挑战。譬如孔子开创儒家学派以救治乱世，伽利略奠基近代科学的研究方法，贝多芬之《命运》《合唱》交响曲，这些都为人生丰富的“遗产”，解决了极其重要的问题、建立了不朽的作品。对于普通人，则也需要解决生存的诸多问题，学业、职业、爱情、婚姻、家庭、教育、事业、人生使命等等，理性应对和解决这些问题，人生也可圆满。过程论：结果论或目的论是一种理性，政治、经济、科学、技术都有明确的目的和精确的理性。但生活中，文化、交往、游戏、独处等行为，并不总以解决问题为明确的目的；哈贝马斯认为，我们的“生活世界”被货币和权力所支配，正在丧失生活的意义和自由，这是对结果论、功利论的反驳。以经历的角度来看，人在时间和空间中畅游，可以自赋结果、也可以没有结果；体验人生的旅程本身，也可以是一种人生目的。 不可分割地，我们的生命既有解决问题的部分、也有体验过程的部分。体验过程的价值因人而异，标准较为个人化、本土化、时代化；所谓体验，可以是解决问题过程中的体验，也可以是无目的之体验，但都是生命的旅行。解决问题，可以是别人的问题、也可以是自己的问题，可以是重要的问题、也可以是琐碎的问题，可以解决地彻底、也可以解决地拙劣，由此解决问题的价值便有一些差异。 （3）解决人生中的问题 人的一生的不同阶段面临不同的问题，例如学习、思考、职业、婚姻、家庭、教育等，对于这些问题缺乏有效的解决方案，那么人生之路也会遇到诸多坎坷；设计这些解决方案是人生旅途的重要组成部分。 对于黑客而言，解决问题的大小、多少、好坏，可以衡量他的创作的社会价值。有些“匠”才，精通技艺、技法和技术，但对问题的选择与解决策略缺乏思考和探究，因此无法成为“将”才，以及真正的问题解决者。 有人认为：“选择比努力更重要”。选择是决策智慧，努力是执行能力；毫无疑问，两者都是不可或缺的。在解决问题的过程中，选择表现为选取正确的、有价值、有机会的问题，努力表现为有效、高质量、快速地解决问题。选择是战略，执行是战术。 How to Solve It by George Polya from Wikipedia – How to Solve It | CC BY-SA 2.0 2. 言志：解决什么问题（What &amp; Why） “选择问题”，不论对于研究者、工程师，还是作家、创业者，都是最重要的课题之一。从小的方面看包括发现挑战或危机、找到切入点，从大的方面则是看到时代和文明的趋势、从事最重要的事业。选择问题，是决策过程，并且可以提高到战略高度来回答。 所以，“问题”的选择或识别，并不仅是说在某一个特定的工程或产品中，发现具体的问题并设计解决方案，而是从价值创造的角度而言，在宇宙、世界和社会的庞大时空中，敏锐的识别要设计哪种系统、实现哪种技术突破，这是极其具有挑战的。比如，对牛顿而言，专注于对圣经的研究，还是尝试用数学原理解决自然哲学遇到的挑战，便是重要的问题选择；对问题的嗅觉与品位（自然哲学、天文学、物理学）和解决问题的实力（数学能力、微积分、实验设计）映证了天才之为天才。 （1）选择问题，需要格局、志向与智慧，不仅仅知道是什么，也知道为什么。 当代的很多中国程序员常自称为“码农”，这有自嘲幽默的成分、也可能有被贬损的股份。很多国家向来重“农”的（“士农工商”），未必就是贬称，但值得警惕的可能是“码农”的自我定位的局限。自称为“码农”的较多是企业或组织内的工程师，他们按照产品经理的设计来实现代码，是“实现者”（implementor）而非“思想者”，这带来诸多隐患。失去了思考、设计、识别问题的能力，犹如人失去了大脑，只有手脚；久而久之，人被技术所用，而非运用技术。 黑客则不同，黑客以创造技术、解决问题为基本工作，不局限于组织和企业内的日常任务，有开阔的视野和坚实的解决问题的能力。顶级黑客解决问题和思考的维度，常常直击产业和技术发展的关键节点。《浪潮之巅》作者吴军根据物理学家朗道对物理学行业的分级，提出了工程师的分级方法如下： 第五级：能独立解决问题，完成工程工作。 第四级：能指导和带领其他人一同完成更有影响力的工作。 第三级：能独立设计和实现产品并且在市场上获得成功。 第二级：能设计和实现别人不能做出的产品，也就是说他的作用很难取代。 第一级：开创一个产业。 三~五级分别是创业者或产品负责人、领导者、内部工程师，第二级是卓越的创造者（Jeff Dean、Donald Knuth），第一级是开先河者（爱迪生、福特、贝尔）。黑客的目标通常在第一到第三级，自称为码农的工程师可能多来自第四和第五级。这是技术维度的差异，也是将才与匠才的差异。也存在第零级的黑客，有如孔子、老子、伽利略、牛顿等，借助理性、科学的精神，开创了新的轴心时代，他们创造文明。 普通人囿于谋身、自利等小问题，卓越者“执拗”于开创、忧国等大问题；虽人人平等，但真正擅于利他、勇于助人者，总是少数。Richard Stallman等开源时代的开创者们，执着于自由软件运动，与商业世界决裂，表现出的是为世界谋利益的宽阔胸怀与远大志向，其功甚伟；没有这种预见力，也就没有Linux等开源系统，也就没有今天的互联网世界。 （2）选择问题，除了深刻理解其价值，还要有坚毅的勇气、恒心与忍耐。 林语堂在《苏东坡传》中对王安石颇多贬损，梁启超在《王荆公》中对王安石敬赞之至。以文人的视角（林语堂），苏东坡豪迈自由，引致了“乌台诗案”的王安石则被描绘为奸相；以政治家的视角（梁启超），王安石舍身为国，为常人所不敢为。林、梁格局不同，所作评论便有差异；苏、王或许都是一时“王佐”，但王安石以《上仁宗皇帝言事书》直陈天下之危，而后又能辅神宗变法，这又是苏轼所未能及。虽变法成败褒贬不一，但如果没有王荆公的远见、心力与勇气，则绝无可能迎天下之难而上。 这说的是治国，对于黑客也是同理。做大量的琐碎的选择，不如坚守一个重要的选择。（投资的智慧与此类似） （3）选择问题，更需要品味，知其机要、有所不为。 这品味，包括了对时代、社会和技术的洞察，对私利的淡然，对“小聪明”的无视，以及“勿以恶小而为之”（Don’t be evil）。这品味，不仅仅是技术的，也是精神的；不仅仅是关于“剑”的，也是关乎“心”的。 有人由于经济、家庭等约束，自认为无从选择。主观或客观的约束总是存在，突破约束、克服限制，也需要分析、取舍、筛选问题的品味和解决问题的能力。 故欲成一流之工程师，必有一流之抱负、一流之见识、一流之精神、一流之思想，以道御术、以心御器，选择正确的问题而解答之；善恶高低，由此可知。 3. 问道：如何解决问题（How） 老子说：“千里之行，始于足下。” 解决问题能力是一种技术，是一个富有逻辑性的思维和实践过程。 从劳动力市场来看，公司招聘的是能解决特定问题的人；对于商品市场来看，消费者购买的是能满足个人或者组织需要的产品（固化了的解决问题能力）。劳动力和商品代表的能力是目的明确的，这从招聘广告和产品广告就能看出，但种能力在社会分工这种“分析”、“分解”的行为模式下，呈现出支离破碎的状态，他们背后的共同性和“综合”特性只有少数人掌握。这也造成了大部分人解决“小问题”、“局部问题”，少部分人解决“大问题”、“整体问题”的局面。 如何才能真正掌握解决问题的核心技术，下面简要叙述。 （1）解决问题的核心能力是思想 就较广义的黑客而言（工程师、发明家等），其解决问题的核心能力看似是技术的运用能力；而对于一般公众而言，狭义的黑客（计算机技术专家、程序员）的核心能力似乎是写代码。这两种看法都存在偏见。 或许对于“第五级工程师”（见上文）来说，只要能将产品意图翻译为程序语言就足够了。但好比我们不会说一个人擅长“写作”是他认识多少汉字、能用几种句型，而最关键的是他具有什么思想或叙事、如何表述；我们也不会认为会使用程序语言就代表能用程序解决问题了，如果“码农”不会思考，那和机器也并没有差别。 解决问题，就其本身而言，需要的是对问题的理解、分析、溯源、设计、执行、检验等过程；书写、作画、代码，可能只属于执行这一个步骤。同一个问题，不同人的处理方式可能完全不同，这在程序设计中随处可见： 理解错误必然导致白费功夫；分析不透彻、找不到根本原因，或解决方案草率、短视，容易产生dirty &amp; quick fix；设计不考虑长远变化或灵活性，容易产生较高的维护成本；缺少检验必然带来质量、安全等隐患。 就此而言，解决问题需要的是综合的逻辑思维能力、大局观与细节处理的能力，而不是某一个专门的技巧或“锤子”。将问题放置到当时的情景中考察，并结合整体的系统或生态进行判断，以及判断是否可以不解决该问题，都依赖于清晰严谨的理性。 要解决大问题，或者设计独一无二的解决方案，需要对根本问题的深度思考（如使用者的人性考察、场景的深入分析、技术发展的脉络等），需要跨学科、多模型的综合分析和思维能力，需要领导力和决策能力，需要对资源、技术、人力的组织和协调能力。 问题的维度越高或者深度越深，对思想能力和综合能力的要求也就越高。解决复杂度高的问题，多强调协作与分工，如果主导者的思想不深入、不精确，那么整盘解决方案的设计和调度必然混乱，获取成功将极具挑战。这与古人对领导者“内圣外王”或“哲人王”的政治理想传统是一致的。 随着分工细化的加剧和社会复杂化的发展，对“真正的问题解决者”掌握智慧与思想也提出了越来越高的要求。实际上，学习能力是解决问题能力的前提。“问渠那得清如许，为有源头活水来”；解决问题能力始终“清如许”，思想与技巧能够保持卓越，是因为有学习的“源头活水”作为输入。 （2）解决问题的内在结构 内在结构的含义是“一种解决方案”或“一种技术”，通常会依赖于其他技术的运用或创造，而形成新的技术或内在结构。常规的解决问题过程都是用已有的方案或技术来解决特定问题，技术对于很多人来说只是“黑盒”，很少需要“重新发明轮子”。但重视内在结构，同时也是对内部或根本方法的反省，是极为重要的，我们来看几个历史上的例子。 伽利略通过自制天文望远镜，观测到了凹凸不平的月球表面、及木星的四颗卫星、金星的盈亏现象，用事实打破了天地的界限、支持了“日心说”、并进一步提出了惯性理论，解释了潮汐现象。这是通过构建新的工具，以解决眼前问题的例子。新的工具，又继续推动了更多问题的进展。为了实现搜索引擎，Google在内部实现了GFS、MapReduce、BigTable等基础设施（infrastructure）并公开发表成果，直接推动了之后的大数据开源Hadoop技术等的出现。这是内部的基础设施成为创新的基础，从而推动技术跨越式发展的例子。Amazon的AWS的出现和商业化也是类似的例子。 解决问题的技术是层层相依的。新的技术推动更多技术的发展，同时也依赖更多过去的技术。明白这一点对于黑客有非常重要的价值，因为解决问题的过程往往也伴随着技术的进步，忽视了这种“副产品”，既有可能导致资源的浪费，更可能错过潜在的机会。 （3）问题与解法的进化路线 问题是源源不断的，来自于外部环境的不断变化（社会、时代、市场等），也来自于解决方案的驱动。一个新的解决方案，通常也并非完美的，或者有其适用环境，所以也经常会带来新的问题。比如，iPhone也开拓了一个之前平不存在的移动信息空间，使得大量的新的技术和产品可以被发明和应用，极大地刺激了新的解决方案的出现，如共享单车，同时又带来了新的问题，如隐私、安全和社会治理问题。 旧问题的解决，并非一劳永逸，不断涌现新的解决方案，以替代旧的技术方案。如，交通，从牛马、马车、火车、汽车、飞机、航天飞机，到自动驾驶，这种变化依然没有停止。对于“空间位移”这种近乎永恒的需求，依然会不断有新的解决方案被提出和实现。 技术的发展动力，高度依赖于其背后的现象，尤其是物理学本质。工业革命就是发端于科学革命，每一次系统性的物理发现，都将带来颠覆性的技术发展。（相对论和量子力学的突破，至今我们仍然没有消化完毕）化学和生物学的进展，又在21世纪带来纳米技术和基因工程的飞跃。这种被认为是“指数型”技术爆炸的趋势，使得我们的问题域和解法域的进一步扩展，而激发出越来越多的可能性。 从结构上把握问题与解法的进化路径，对于设计真正的解决方案，是极为关键的。 以上，我们探讨了解决问题（Problem Solving）的基本问题。在之后的篇章中，随着问题的深入，我们可以看到更多具体的解读与分析。 下一篇预告：【黑客之道】序 - #3：技术之美 参考文献 G. Polyia, How to Solve It高斯 (Donald C. Gause) / 温伯格 (Gerald M.Weinberg) ，《你的灯亮着吗?》 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/01/%e3%80%90%e9%bb%91%e5%ae%a2%e4%b9%8b%e9%81%93%e3%80%91%e5%ba%8f-2-%e7%9c%9f%e6%ad%a3%e7%9a%84%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e8%80%85 This page is synchronized from the post: 【黑客之道】序 - #2 真正的问题解决者 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/-2-7mfhyexllg/"},{"title":"【观非常人，行非常事】程灵素：海棠无香","text":"此文原为答 小迪 @tydebbie 不定期造句小活動: 第二十三期頒獎典禮+ 第二十四期開始 所作，略加扩展以言事。 答案里写了两组人：苗人凤、胡斐和程灵素；牛顿、欧拉和高斯。前一组，江湖人杰，襟怀坦荡；后一组，数学鼻祖，百代流芳。世上种种，人有情、事无情，“多情总被无情恼”。后补一短文，说说奇人程灵素。 一) 用我提供的詞語造句 書、膏、藥、耳朵、repair (修理) 苗人凤耳朵虽无事、但双眼已盲，唯有程灵素能以学自《药王神篇》书中的药膏来repair。苗大侠绝不疑程灵素会加害于他，程姑娘不问也知苗人凤不会畏惧七心海棠叶带来的剧痛，这种坦荡磊落、英雄相知，也只他们二人，连胡斐也不能及。——（《飞狐外传》） 二) 用任何三個英文名字造句 上联：牛顿顿首落苹果，始启流数 下联：欧拉拉车历七桥，终至图论 横批：高哉斯人（高斯） 解释：上联 – 牛顿被苹果砸中，创立微积分，提出万有引力；下联 – 欧拉解决哥德斯堡七桥问题，创立图论；横批 – 牛顿，欧拉，高斯，数学史上的三座丰碑，都是高人。 —— “小妹子对情郎——恩情深，你莫负了妹子——一段情，你见了她面时——要待她好，你不见她面时——天天要十七八遍挂在心！” 武侠小说里的女性主角，容颜即使不倾城，也至少脱俗；程灵素却是貌不惊人，肌肤枯黄，脸有菜色。金庸的女主角在“情”都较洒脱、敢爱敢恨；程灵素却至死未明言其情，唯以自己的生命救治所钟之人。这剧情看着有些“琼瑶”，但这背后的至情至性、至真至诚，却叫人动容。 她凡事给人预留退路，惩人罪恶不忘引人向善，解人身毒并且制其心毒，毒中圣手却从不以毒害人，只为救人，让人击节叹赏。她未有一事负他人，但求不负己心。所爱之人，令其爱所爱，虽我身陨，亦未曾悔。这女子心性通达、洞察万物、绝世才情，却只知利人、从不利己，令人叹服。相形之下，热血仗义的胡斐、飞扬洒脱的袁紫衣、顶天立地的苗人凤，都相形失色。 “海棠无香”：海棠并非真的无香，灵素也并非真的不“美”，不是有心人，不能得其妙而已。 This page is synchronized from the post: 【观非常人，行非常事】程灵素：海棠无香 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/6knccd/"},{"title":"【跨文化活动】地球文明的星际对话 | 宇宙政治与宇宙语言","text":"人类是一个好奇的孩子，总是希望探索无限世界/宇宙中的奥秘。为了向宇宙之外张望与呼喊，我们已经做了很多尝试，下面是较为著名的几次。 旅行者金唱片1977年，旅行者1号和2号分别发射，同时携带了旅行者金唱片（Voyager Golden Records）。 “唱片内收录了用以表述地球上各种文化及生命的声音及图像，以期宇宙中其他外星高智慧生物发现。旅行者探测器在距今40000年后，才会靠近最接近地球（1.6光年）的恒星。探测器被捕获的可能性不大，因此唱片的最终目的虽然仍是与外星人沟通，但其对人类与宇宙之间关系的象征意义更大。” —— Wikipedia – 旅行者金唱片 from )Wikipedia – 旅行者金唱片 | CC BY-SA 2.0 “委员会也也选择多种大自然的声音，包括滑浪、风、雷、鸟鸣、鲸鱼歌声、其他动物叫声等，并挑选来自不同文化及年代的音乐、地球人使用55种语言（或方言）问安的录音。这些录音以每分钟16⅔转的速度播放。”[1] 其中，中文乐曲的收录了古琴曲《流水》（由著名古琴家管平湖演奏）。 先驱者镀金铝板先于旅行者金唱片的是先驱者镀金铝片，先驱者探测器是第一个离开太阳系的人造物件。 from Wikipedia – 先驱者镀金铝板 | CC BY-SA 2.0 相比旅行者金唱片，先驱者镀金铝板的内容要简单很多，主要包括了：氢原子内自旋跃迁、一男一女画像、探测器的轮廓、太阳相对于银河系中心及14颗脉冲星的位置、太阳系，大致可以帮助阅读者了解太阳系和地球的位置，以及人类的基本形态[2]。作为人类第一次向域外发送人类和太阳系讯息，其意义是无比重大的。 阿雷西博信息阿雷西博天文台（Arecibo Observatory）位于波多黎各的阿雷西沃山谷中开光（开始观测），2016年之前是世界上最大的单面口径射电望远镜。1974年，为庆祝改造完成，阿雷西博望远镜向距离地球25,000光年的球状星团M13发送了一串由1,679个二进制数字组成的信号，称为阿雷西博信息[3]。(信息本身没有颜色，颜色是人为标注用于区分的) from Wikipedia – 阿雷西博天文台 | CC BY-SA 2.0 如果信息被地外智慧生命所接收并正确解读，会得到如上图所示的信息，从上到下依次为：用二进制表示的1-10十个数字、DNA所包含的化学元素序号、核苷酸的化学式、DNA的双螺旋形状、人的外形、太阳系的组成、望远镜的口径和波长。向球状星团M13发送信息的原因是其中的恒星分布比较密集，被地外智慧生命接收的可能性较大[3]。 未来，我们应该如何对地外交流？近年来，随着《三体》的流行、以及霍金的对外发布信息的警告，国内的舆论话题纷纷表示应停止对太阳系外发布消息。 那么，人类究竟为什么要进行地外交流呢？是否应该继续呢？应该如何来做呢？ 旅行者金唱片上，附带了卡特总统和时任联合国秘书长库尔特·瓦尔德海姆的书面信息[1]，关于发送这条讯息的原因： 我们把这个讯息投放到宇宙……在银河系的二千亿颗星里，一些……希望有很多……有住人的行星或者太空旅行者的文明。要是其中一个文明捕获旅行者探测器并明白唱片里收录的内容，那么这就是我们的讯息：我们尝试在我们的时光里活着，或许有天会在你们的时光里活着。我们期望总有一天，解决了我们正面对的难题后，可以联合一起成为一个银河系文明。这张唱片代表我们的希望、我们的决心与我们的善意在这个浩瀚的宇宙。 20世纪50~70年代，人类的太空探索事业正在蜜月期，全球化也已经进入新的阶段，抢先探索宇宙，成了强国积极思考和发展的战略。当时的探索者，理想地认为，未来的某一天，我们会和那些讯息接受者见面，共同构建一个银河系文明。 随着探索地深入，我们对于太空探索的态度也在不断发生变化。而问题的关键，首先在于来者是“敌”还是“友”、是“外患”还是“外交”，其次则在于沟通的方式和语言。 敌还是友？这是一个宇宙政治学问题。事实上，人类是否有权力代表整个地球进行宇宙政治的决策呢？与宇宙沟通是整个地球的议题，本身是泛物种的问题。 近来，国际上，目前一致同意不对地外文明的信号作回应，除非大家都觉得应该回应。第一是由于心理上对未知的恐惧，以及相关反乌托邦文学的影响；第二则是政治学对利益的考量，至少在初步接触时不应采取过于激进的方式。 宇宙文明间的接触时，与东西方文明的接触颇为相似。东西方文明的直接正面对话，直到19世纪末期才全面展开，在此之前通过陆地、海洋无数前人的文明交流，对于双方文明的发展都起到了极为重要的作用。不同宇宙文明间的接触远远比这会困难，但恐怕也将采取的类似的方式：（1）以一种“雾里看花”的方式开端，以射电望远镜、引力波观测等为基础，采取观察为主的方式，待到信息更为充分和详实时才开展正面而积极的探索态势；（2）与此同时发展地球文明科技，并拓展在太阳系的生存空间，也正是我们在开展的宇宙殖民计划。 沟通语言与方式？一种宇宙通用的语言，是宇宙语言学的一个重要议题。 数学语言、图像语言，是目前人们认为最为通用的几种方式。例如，勾股定理（毕达哥拉斯定理）是一种可能极为通用的数学发现。在上面的旅行者、先驱者的介绍中，也提及了较多基于图片的沟通。 对于跨语言的交流，有研究者认为，为了与外星人沟通，我们应该学会如何与地球上其他的智慧生物沟通，比如海豚。例如，一些用英语与海豚沟通的项目正在开展之中。 Wikipedia – Communication with extraterrestrial intelligence | CC BY-SA 2.0 参考文献 Wikipedia – 旅行者金唱片 Wikipedia – 先驱者镀金铝板 Wikipedia – 阿雷西博天文台 Wikipedia – Communication with extraterrestrial intelligence Don’t open ET communications, researchers say Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/01/%e3%80%90%e8%b7%a8%e6%96%87%e5%8c%96%e6%b4%bb%e5%8a%a8%e3%80%91%e5%9c%b0%e7%90%83%e6%96%87%e6%98%8e%e7%9a%84%e6%98%9f%e9%99%85%e5%af%b9%e8%af%9d-%e5%ae%87%e5%ae%99%e6%94%bf%e6%b2%bb%e4%b8%8e This page is synchronized from the post: 【跨文化活动】地球文明的星际对话 | 宇宙政治与宇宙语言 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/pyjwm4xp4n/"},{"title":"【黑客之道】番外 | 墨子（一）：奇人","text":"本文为《黑客之道》的番外《墨子之奇》的第一篇，我们来八一八超级黑客墨翟的生平。 当今天下是“消费社会”，轻松娱乐搞怪的故事更受人喜爱，真正的圣贤英雄的传说反而湮没无闻。墨子与那些喜闻乐见的主角一样，既有传奇的经历，又有杰出的功绩，更是人类文明的脊梁，值得后来者细细品味、俯首学习与发奋超越。 墨家始祖 中国古代有“三教九流”的说法（主要流行于明清）：“三教”指儒教、道教、佛教。“九流”指儒家、道家、阴阳家、法家、名家、墨家、纵横家、杂家、农家。对于儒释道，大多数人大致了解其思想的核心（但通常也了解得并不精深），但对于阴阳、法、名、墨、纵横、杂、农各家，人们可能只是略知皮毛了。 其中，阴阳家、法家、墨家的知名度略高，这得益于大众文化的影视文学作品等的传播。例如，黄易的《寻秦记》中出场过的就有，法家的李斯、韩非，阴阳家的邹衍和他的五行学说，墨家的“兼爱”、“非攻“，墨家钜子、“墨家剑法”。就后世的影响而言，法家随着外儒内法的传统事实上被帝国的统治者延续使用；阴阳五行学说被董仲舒等吸收，在取名、医学、风水等传统中也随处可见；墨家则似乎只隐身于创作的作品中了，近期的如电影《墨攻》、动漫《秦时明月》、游戏《轩辕剑系列》（《枫之舞》、《黑龙舞兮云飞扬》、《苍之涛》）等等。 from Wikipedia – 轩辕剑肆 黑龙舞兮云飞扬 | CC BY-SA 2.0 事实上，墨家在先秦时期影响很大，与儒家并称“显学”，有“非儒即墨”之称。汉武以后，独尊儒术，墨家的印记在文明中渐渐变的淡薄。但墨子的精神和学说，一直没有被遗忘，直到今日仍然有无穷的光彩与力量，这也是我们要八卦前辈“墨子”的原因。 墨子（生卒年不详），名翟（dí），春秋末期战国初期宋国人，宋国贵族目夷的后代，生前担任宋国大夫。墨子出生时家族已经没落，平民出身，年少时做过牧童和木工，同情“农与工肆之人”。墨子传闻中曾经师从儒者学习，学习治国之道。但墨子反对儒家礼乐的繁冗规矩与铺张浪费、以及对待命运和鬼神的态度，故而创立墨学，在各地讲学。 “春秋无义战”。当时贵族之间不断地进行残酷的掠夺战争。墨子抨击诸侯的穷奢极欲的政治、无休止的战争、同情平民的疾苦，获取了许多有识之士的支持。墨子广收门徒，逐渐形成了墨家学派和组织严密的墨者组织。 墨家学说的核心主张是“兼爱”，认为人与人并无差别，天下之所以乱，是因为人们之间缺乏无分别的爱，只要人们平等互爱、视人如己，就不会有不孝慈、盗贼、侵夺之事。因为“兼爱”，所以“非攻”：兼爱天下，放弃战争，以为攻伐是不义且不利的事。这一学说即时在现代也具有理想主义色彩，但其针对“春秋”乱世提出的解决方案，具有深切的时代背景和实际功用，故而得到了大量的支持。关于“兼爱”和“非攻”等思想，我们在后面的文章会继续聊。 墨学虽然在后世逐渐落寞，但在当时与儒家、法家、道家、名家、阴阳家等各派学说争锋、相互应证，共同促进了华夏早期智慧的发展。待到近代中国，胡适、梁启超、任继愈、冯友兰等学者，从墨学的实用主义和墨子的振世救敝精神中重新发现了救治中国的希望，墨学又逐渐引起更多人的重视。 这是墨子的第一奇：思想之巨人。 from Wikipedia – 墨子 | CC BY-SA 2.0 百科全书式的人物 墨子是对《黑客之道》所描绘的理想与实践在现实中的体现。墨子集“仁”、“智”、“勇”于一身，并“道”、“术”、“器”于一宗。 墨子强调“兼爱”，强调关注人人平等互爱，反对国家和贵族的暴力与贪婪，此为“仁”；墨子创造系统的墨家思想，创立墨家组织，取得了惊人的哲学和科学成就，有如飞鸢、城防兵器等发明，此为“智”；“墨门多勇士”，墨家弟子“皆可使赴火蹈刃，死不还踵，化之所致也”，此为“勇”。 墨子的行为以“兼爱”为核心的墨学为指导，此为有“道”；墨子传播墨学、建立墨者组织、善于逻辑、理性和科学思考、武艺高强，此为有“术”；墨子创造了大量技术和工具，直接服务于墨者的“非攻”等行为，制止楚国伐宋，此为有“器”。 按照现代的标准，墨子是战国时期著名的思想家、教育家、科学家、军事家，还要加上政治家、外交家、社会活动家、发明家，其思想成果的门类之丰富，令后世惊叹。他力行“兼爱”、“非攻”，是一个伟大的和平主义者，思想光芒闪耀至今；他在哲学上的建树，以认识论和逻辑学最为突出，远超同代的诸子百家。除了人文、哲学思想之外，墨子在自然科学领域也有惊人成果，在力的作用、杠杆原理、光线直射、光影关系、小孔成像、点线面体圆概念等众多领域都有精深造诣，创下一个个“历史第一”，今人甚至送给了他一个“科圣”称号。墨子甚至提出过“民选”天子的想法，近代中国崇尚的“民主与科学”，在墨子这里都能找到萌芽，令人惊叹。 按照现代的标准，墨子或许有资格获得诺贝尔“文学奖”、“物理学奖”、“和平奖”（考虑到墨子对“利”的阐述，可能也包括”经济学奖”），以及数学的“菲尔兹奖”等。墨子是“达芬奇”式的百科全书式的人物，且比达芬奇尚早了将近两千年。后来墨学几乎断绝，有赖于道教葛洪在《神仙传》中保存墨子53篇才流传下来；在抱朴子葛洪看来，墨子是神仙一般的人物。 这是墨子的第二奇：全能之奇才 from Wikipedia – 达芬奇 | CC BY-SA 2.0 侠之大者 鲁迅说：“墨子之徒为侠。” 有人说墨子是“任侠的宗师”，也有人说墨子是“黑社会的鼻祖”。 金庸武侠中说：“侠之大者，为国为民。” 墨子的侠，首先在于其人格与精神之伟大，其次是有”行侠仗义“的能力。 梁启超在《墨子学案》中就曾说过：“论到人格，墨子真算千古的大实行家，不惟在中国无人能比，求诸世界也是少见的。” 墨子和他的学派以伟大的自我牺牲精神，对反对侵略战争的正义事业做出了出色的贡献。一贯逍遥放任的庄子也不得不称赞“墨子真天下之好也，将求之不得也，虽枯槁不舍也，才士也夫！”(《庄子·天下》篇) 甚至连敌视他，骂他为“禽兽”的孟子也不得不承认：“摩顶放踵，利天下为之！”(《孟子·告子下》) 墨家行侠仗义依赖于（1）武力（2）组织（3）技术。墨家弟子很多，《墨子·公输》写到：“墨子之说楚王曰：‘臣之弟子禽滑厘等三百人’”，《淮南王书》“亦谓墨子服役者百八十人，皆可使赴火蹈刃，死不旋踵”。“钜子”是墨者组织的领袖，领导墨者帮助弱国抵御侵略战争（如电影《墨攻》所描绘的）。他们既掌握基本的勇武能力（如剑术），也掌握了当时最先进的防御技术和科学思想（如城防机械）。 秦汉以后，墨学不再是显学，但墨学的影响一直流传着，并未消失，它成为一种在野的、流行于社会下层的思潮。秦汉以后，社会上不断出现“游侠”、“任侠”一流人物，他们提倡扶弱济贫，见义勇为，吃苦耐劳，重信义，集体中成员之间友爱互助，这类思想和价值观一直受到人民的称赞。这类民间团体历代未曾中断，显然与墨家有较深的渊源。 这是墨子的第三奇：任侠之宗师 from Wikipedia – 剑 | CC BY-SA 2.0 科学之圣 2016年8月16日，世界首颗量子科学实验卫星发射升空，命名为“墨子号”。这是为了纪念墨子在物理学尤其是光学领域的突出成就，在他所著的《墨经》中归纳出“光学八条”。墨子进行了世界上最早的小孔成像实验，最先发现了光沿直线传播这一光学领域最重要的科学原理，奠定了光通信的基础。 墨家主要由学者和工匠组成，极其注重实践和行动。在长期的劳动实践中，墨子积累了丰富的哲学和自然科学科学知识：墨子建立中国古代第一个逻辑学体系——“三表”体系。并在力学、几何学、代数学、光学等方面，都有重大贡献，是诸子所望尘莫及。 墨子在《墨经》地阐述了经典力学中力的概念和力矩原理，提出“力”、“动”与“止”的定义。关于杠杆原理，亦提出了“重”、“权”（力）、“称头”（重臂）、“称尾”（力臂）等概念。《墨经》中提出了“端”、“尺”、“区”、“穴”等概念，大致相当于近代几何学上的点、线、面、体。墨子和他的学生做了世界上最早的小孔成像实验，在当时就知道了光的直线传播。他也提出了“粒子论”的雏形，关于“端”的论述，指出“端”是不占有空间的，是物体不可再细分的最小单位。[1] 中西方碰撞以来，墨子的科学成就受后世学者颇多赞誉。梁启超评价说：“在吾国古籍中欲求与今世所谓科学精神相悬契者，《墨经》而已，《墨经》而已矣。” 蔡元培认为：“中西方碰撞以来，墨子的科学成就受后世学者颇多赞誉。蔡元培认为：“先秦唯墨子颇治科学”。李约瑟在《中国科学技术史》中这样评价墨家的科学技术成就：“完全信赖人类理性的墨家，明确奠定了在亚洲可以成为自然科学的基本概念的东西”、“墨家思想所遵循的路线如果继续发展下去，可能已经产生欧几里德式的几何学了。” 这是墨子的第四奇：科学之先圣 from Wikipedia – 针孔相机 | CC BY-SA 2.0 黑客精神 墨便是黑。说墨者是黑客，似乎是极其自然的。墨者也确实有极强的创造性和实践精神，除了科学发现，还有大量的发明创造。墨子是掌握了真正的黑客之道的创造者。 根据百度百科 – 墨子，墨子花费了3年的时间，精心研制出一种能够飞行的木鸟（风筝、纸鸢），成为古代风筝的创始人[2]。这展现了墨子精妙的创造力。 墨子不但着力于技术的发展，更是十分注重技术的价值。墨子将那些能够阻止战争、践行兼爱的技术，作为最高的追求。 他是一个制造车辆的能手，可以在不到一日的时间内造出载重30石的车子。他所造的车子运行迅速又省力，且经久耐用，为当时的人们所赞赏。 墨子几乎谙熟了当时各种兵器、机械和工程建筑的制造技术，并有不少创造。在《墨子》一书中的“备城门”、“备水”、“备穴”、“备蛾“、“迎敌祠”、“杂守”等篇中，他详细地介绍和阐述了城门的悬门结构，城门和城内外各种防御设施的构造，弩、桔槔和各种攻守器械的制造工艺，以及水道和地道的构筑技术 [2]。 他所论及的这些器械和设施，对后世的军事活动有着很大的影响。 墨子的器械制造技术，犹在工匠的祖先鲁班（即公输班或公输般）之上。“墨子为了打消楚王攻宋之意，便和公输般在楚王面前试演云梯攻城和防御的办法。墨子解下自己的腰带来，弯作弧形，算是城，用些木片作为攻守的器械。公输般用了九种方法，进攻了九次，都被墨子击退。公输般攻城的器械用尽了，而墨子防守的办法却还有余。”（《墨子·公输》）当然，公输班也是一位值得尊敬的创造者。季羡林说：“墨子鲁班，善国双圣”。 真正的黑客，不但能够创造新的技术，并且能够应用他们来实现“义”之所在，应用技术而非被技术所控。墨子用自己思想、实践和创造实现了黑客之道、墨家的宗旨。 这是墨子的第五奇：黑客之典范 from Wikipedia – 云梯 | CC BY-SA 2.0 参考文献 Wikipedia – 墨子百度百科 – 墨子Wikipedia – 墨子（书）葛洪，《神仙传》梁启超，《墨子学案》任继愈，《墨子与墨家》墨子：最后一个悲摧的理工男 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/01/%e3%80%90%e9%bb%91%e5%ae%a2%e4%b9%8b%e9%81%93%e3%80%91%e7%95%aa%e5%a4%96-%e5%a2%a8%e5%ad%90%ef%bc%88%e4%b8%80%ef%bc%89%ef%bc%9a%e5%a5%87%e4%ba%ba This page is synchronized from the post: 【黑客之道】番外 | 墨子（一）：奇人 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/u6i5ln2fr5/"},{"title":"数英雄，论成败：评SP代理竞赛","text":"近日@team-cn参与了一场社区间的竞赛，通过投票来赢取10K SP的代理权，新手村的诸位都参与其中，献策献力，@team-cn一路高歌猛进，到了最后第1、2位的争夺阶段。战况之激烈，令人赞叹。 虽然不清楚组织者举办这场竞赛的背后意图究竟为何，但确实吸引了很多人的关注，也让参与者可以看清steem社区的成色。 图片来源：搜狐娱乐 - 四大名著经典电视剧–《三国演义》 何为胜负手？目前排在前三的社区分别是中国社区新手村、委内瑞拉社区、博客社区SteemitBloggers，从外部宣传来看，除了新手村以外的几个社区，包括排名靠后的Qurator都有1000~2000人的规模（活跃用户可能并没有那么多）。 我在新手村中，知道这里的成员数量活跃的只有100~200人左右，相形之下，纸面实力要弱小很多，但竟然能与其他人数众多的社区抗衡，必然有其强大的原因，这个原因是什么呢？ 人人皆道Steem是一个“妙笔生金”的社区，其动力在于一个“利”字，人性逐利，因之而成。但只有真正深入观察和体验才能明了，利只能为表，不能为里；人与情义，才是让社区强大与充满乐趣的根本，才可以以弱胜强，出类拔萃。 先秦时的圣贤们对此早有争论：杨朱说“拔一毛利天下而不为“，是为绝对的利己主义；孔孟则认为”仁义“才是建立治世的根本，为力量之源泉。当今雄厚资本控制世界，但只能诱导人的某些行为，却无法荡涤人的内心。 @team-cn是一个以仁爱、友情与互助建立的社区，他们并非不争利，但却看清了什么是最宝贵的东西。steemitbloggers和qurator虽然成员众多，但只以curation作为激励手段，看似大、内在却不强。votovzla相比之下，则更有凝聚力与意志力，其国势飘零，在此一乱世之中仍与此处全力以赴，也实在令人钦佩。 图片来源：百度百科 – 情义 所以为何@team-cn与votovzla能独领风骚，由此可以看到原因。至于最终的成败，则仍将是意志力与凝聚力的内力比拼。 革命尚未成功，同志任需努力比赛尚未结束，但我相信@team-cn必定能坚持到最后，绝不会懈怠。 同时，我也忽而想到，如果百年前的前辈，看到此种竞赛该做如何想。百年前的执掌天下者，曾国藩、李鸿章、袁世凯、孙中山等，无论后世舆论褒贬如何，虽政见不同、见识有高低，但我相信他们都是勠力而为天下，绝非仅为一己私利。彼时的中国同样是“山河破碎风飘絮，身世浮沉雨打萍”，比今天的委内瑞拉更为动荡，唯有将华夏的子孙凝聚成一股力量，才能争取共同的复兴。“天下为公”首先在于“心理建设”，这也是国父在《建国方略》中着重提出的。 新手村虽小，但却能协同而为一、仁爱而相亲，前人见之，也必欣慰。 图片来源：炫音音乐论坛 孙文遗言说：“革命尚未成功，同志仍需努力。” 我认为这努力今天仍将继续，中华之伟大，不独在于人们经济上的强大，更在于其绵延不绝的文化，在于其仁善合作的继承者们。如果失去文化、文明衰弱、情义不存，那么崛起的力量也必将不能长存。所以，继承这文化、文明、情义的努力，才不负前人的种种付出与牺牲。 再次感谢 @ericet, @softmetal 和 @honoru，创建了一个温暖的大家庭，人和情义才是Steem上最宝贵的隐形资产。 最后，请为@team-cn投票，“革命尚未成功，同志仍需努力”：https://dpoll.xyz/detail/@theycallmedan/which-steem-project-should-i-delegate-10k-steempower-to-for-1-year 更多信息可以参考：@team-cn https://steemit.com/@team-cn/please-vote-for-team-cn-we-bridge-the-gap This page is synchronized from the post: 数英雄，论成败：评SP代理竞赛 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/sp/"},{"title":"网络钓鱼的安全威胁，请中文区用户警惕 | Phishing Warning","text":"本文是 @steemcleaners 近日的文章Phishing Warning的中文翻译。 中文版声明近期Steem发生较多的安全威胁。由于目前骇客主要针对英文用户发起网络钓鱼（Phishing）攻击，中文的受害者预计较少。但最近Steem上网络钓鱼事件高发，大家应当引起重视，并警惕此类安全隐患。保护好自己的账户和资金安全。 如果不理解什么是网络钓鱼（Phishing），可以阅读资料： https://baike.baidu.com/item/网络钓鱼/1401858 如果有中文用户遭遇网络钓鱼、账户被盗、经济损失或其他安全入侵问题，可以报告给@steemcleaners。本文中文作者对网络安全领域有一定经验，如有朋友遇到问题，或许也可提供支持。 以下本文为正文： 近日来，网络钓鱼已在Steem上重新启动。骇客们盗取了十几个Steem账户，并用它们发布了数百条恶意评论。这些评论通常采用诱导性的语言，以诱骗用户点击其中的恶意链接。 这是网络钓鱼评论的一个例子（通过30个Steem欺骗用户点击最后的链接） 像上面这样的评论中的链接将带你离开Steemit或任何其他Steem网站的界面（如Busy, eSteem，Parkito等）。这些链接会带你访问一个看起来像合法服务的网站，而实际上是一个冒充的假网站。 这些假网站刻意设计为诱骗你输入用户名和密码（或active key）。如果你输入了这些信息，黑客就会登入你的账户，偷走你账户里所有的钱，并更改你的账户密码。然后他们会使用你的账户来发送更多的钓鱼信息以欺骗你的朋友和其他Steem用户。 Flags/Downvotes 踩@steemcleaners 团队的账户 (包括 @guard 和 @plentyofphish) 会踩骇客们发布的所有的恶意评论，尽全力把这些账户的威望踩成负数. 如果你的账户是被盗了，并恢复了你的账户，请马上联系我们（@steemcleaners）。我们会移除所有的对你的被盗账户的踩，以尽量恢复你账户的威望。之后，你需要把所有骇客通过你的账户发布的钓鱼评论都删除。 注意: 如果你的某个评论被我们大力踩了，请先不要删除这条评论，否则我们将无法移除对它的踩！请等我们把踩移除以后，再删除评论。 No Free Money 天下没有免费的午餐骇客们挖了坑等你跳进去：从来没有免费的30 Steem等你去领取；从来没有。骇客们知道Steem上的很多人渴望通过Steem赚钱，所以故意挖了这些针对性的陷阱。 Report! 报告钓鱼问题对于任何你发现的网络钓鱼问题，请第一时间通过我们的Dicord频道（ https://discord.gg/STXSV4g ）或者我们的网站（ http://steemcleaners.com/reports/new ）报告给我们。相比其他行为（如剽窃），网络钓鱼是我们最为重视和警惕的严重非法行为。哪怕你的账户曾经被我们加入了黑名单，我们仍然愿意帮助你；我们的首要目标是制止一切网络钓鱼和保证Steem生态的健康。 Recover 如何恢复被盗账户如果你的账户被盗了，请根据下面的操作恢复你的个人账户。 首先，打开你的账户的Steemd.com的个人页面。 例子:第一种情况：通过账户创建服务创建的账户 Recovery account: 本例子中为 @steemmonsters . 必须通过这个账户作为受托人账户 (Trustee Account)来重置你的密码. Last account recovery: 默认的日期应该是1970年1月1日。如果显示为另一个日期，说明这个账户之前曾在这个日期被恢复过（密码被重置过）。 在这种情况下，用户需要联系 @steemmonsters （访问他们的Discord以寻求帮助）来启动账户恢复流程。 第二种情况：通过Steemit Inc 创建的账户 Recovery account: @steem . 这是最常见的情况因为大多数账户是通过Steemit Inc创建的。 如果你的受托人账户 (Trustee Account)是@steem，通过这个链接来启动账户恢复流程: https://steemit.com/recover_account_step_1 这是用于恢复账户的表单（原文中为英文版，这里采用中文版以方便读者） 输入你的用户名 输入你的账户最后一次使用过的密码 提交表单，你会看到一个包含更多信息的表单 在第二个表单中，确保你输入的是你注册时使用的邮箱 恢复账户的申请提交后，可以不时检查你的邮件。账户恢复流程一般需要花费Steemit Inc约24~48个小时来处理。 参考指南如果你不确定如何联系你的受托人账户 (Trustee Account)，可以在这个页面查找联系方法：https://github.com/gryter/plentyofphish/blob/master/guides/account-recovery.md （来自于@plentyofphish 的GitHub代码仓库） 本文翻译自@steemcleaners的文章Phishing Warning，感谢@steemcleaners对平台内安全问题的高度重视 This page is synchronized from the post: 网络钓鱼的安全威胁，请中文区用户警惕 | Phishing Warning document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/or-phishing-warning/"},{"title":"【Steem指南】用eSteem Surfer发帖","text":"问题由于尚不明确的原因，*.steemit.com域名在部分地区的访问受限，对某些用户的使用产生了一定影响。（【2019/02/13】） 针对这一情况，有一系列解决方案，大致可以归类如下： 【用户】：用户可以采取的方案 使用其他客户端，如手机端的Partiko, Wherein和eSteem，PC端的Web界面如steemkr.com、steempress，桌面应用eSteem Surfer 使用其他dApp发布，如dtube, Artifit 采用V·-·P·-·N、S·~·S·~·R等方式浏览steemit.com / busy.org / steempeak.com等 【开发者】：需要开发者支持的方案 创建和部署新的不涉及 “*.steemit.com” 的客户端，如partiko.app的PC版，翻译steemkr.com，修改并部署busy.org等 现有的App如Busy, Steempeak等，支持steemconnect v2以外的登录方式，尝试绕过*.steemit.com被封杀的问题，如steem keychain或steemconnect v3等登录方式，并且更新steemjs的API URL 创建浏览器插件，重定向api.steemit.com到别的api server，如api.steem.house 本文仅介绍【用户】（1）中，使用eSteem Surfer这一客户端访问的方法，可以初步替代steemit.com的发帖功能。 Image Source: esteem.app 用eSteem Surfer发帖 到 https://esteem.app/#downloads 下载对应的eSteem Surfer桌面客户端（Desktop）。链接会跳转到GitHub页面 https://github.com/eSteemApp/esteem-surfer/releases，选择Windiows版本（[exe](https://github.com/esteemapp/esteem-surfer/releases/download/2.0.5/eSteem.Surfer.Setup.2.0.5.exe)）或Mac版本（[dmg](https://github.com/esteemapp/esteem-surfer/releases/download/2.0.5/esteem-surfer-2.0.5.dmg)），Linux版本（[deb](https://github.com/esteemapp/esteem-surfer/releases/download/2.0.5/esteem-surfer_2.0.5_amd64.deb), rpm）。 下载完毕，按照步骤安装。启动eSteem Surfer。 eSteem启动需要设置PIN码，即一个在本地启动使用的密码，与Steem无关。需牢记PIN码，下次启动eSteem时需要使用。 用Steem账户和post key登录eSteem Surfer。 点击顶部的设置（Settings）按钮，将Server改成https://anyx.io，即可正常使用eSteem Surfer。经测试https://anyx.io访问速度还比较快。 Image Source: eSteem Surfer截图 对eSteem Surfer的一些说明 eSteem Surfer的图片服务器在部分地区访问存在问题（已报告官方进行修复），可以先通过 https://imgbb.com/ 上传图片，获得图片链接，再用Markdown格式发布图片，如本文所做的 eSteem Surfer可以使用的根本原因在于其可以自由配置 API Server，而不受steemit.com域名影响，其余的解决方案可以借鉴这一思路以保持灵活性。 使用eSteem发帖会给esteem 10%的受益人费用，但同时会获得eSteem的点赞，点赞金额与使用者所有粉丝的SP总和成正比。 如CN区使用eSteem Surfer遇到其他问题，可以请教eSteem中文区审查员 @davidk20 提供支持。感谢拉仔！ 希望本文对大家有帮助。如果在使用eSteem Surfer时遇到问题，或对于其他解决方案有兴趣，请留言讨论。 This page is synchronized from the post: 【Steem指南】用eSteem Surfer发帖 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem-esteem-surfer/"},{"title":"【Steem指南】用requestly绕过*.steemit.com","text":"绕过*.steemit.com的策略：客户端选择API Server 在前文【Steem指南】用eSteem Surfer发帖提到过解决部分地区无法访问*.steemit.com的几种策略。其中提到过开发者可以“创建浏览器插件，重定向api.steemit.com到别的api server，如api.steem.house”。 昨天根据这一策略，我用GreaseMonkey（TamperMonkey）创建了重定向XHR和Fetch的脚本，将api.steem.com的请求重定向到别的API Server，基本可以正常浏览busy和steempeak的feed等。但在用steemconnect登录时会遇到”content-security-policy”的问题，所以登录仍然存在一些问题。 用requestly绕过*.steemit.com 今早看到 @liuzhixiang 发布的基于requestly的不翻墙使用busy.org的方法，我们测试后发现基本可以正常使用busy，并且也解决了steemconnect登录时时的”content-security-policy”问题，非常棒 对用户很有价值，非常感谢！ image source: http://www.requestly.in/ 我们体验后发现配置的步骤略有一些繁琐，所以这里对步骤做了一些简化，帮助对浏览器插件经验较少用户更快上手。 第一步：安装浏览器插件requestly@liuzhixiang 在文中使用的工具requestly（http://www.requestly.in/），相比其他很多浏览器扩展，功能更灵活全面。 安装扩展常见的两种方法如下，对于不能-翻.&amp;墙的用户可以参考方法二。 方法一：对于Chrome或者Firefox浏览器，打开requestly官网（http://www.requestly.in/），点击安装（install），根据步骤完成安装。方法二：对于无法访问Chrome Store的Chrome用户，点击这里下载crx文件。用浏览器打开扩展管理页面 chrome://extensions/，打开开发者模式（Developer mode），将下载完成的crx文件拖入当前浏览器窗口，完成安装。 第二步：上传requestly规则 安装完毕后，可以直接上传requestly规则，而不用手动配置。 从这里下载requestly规则文件；点击requestly按钮，打开requestly的本地配置页面（https://app.requestly.in/rules/），点击上传规则按钮，选择刚才下载的规则文件，完成规则上传。会看到下面列表中多出3条规则。 image source: https://app.requestly.in/rules/ 在规则中，我们使用了anyx.io作为默认的服务器，之前的测试中该服务器访问速度较其他服务器稍快。 第三步：开始使用busy 打开或刷新busy.org页面，开始使用。经测试，feed、power up等功能都可正常使用。 说明 再次感谢 @liuzhixiang 的工作，对于不能-翻.&amp;墙的用户有相当的帮助。本文仅是对原文的文档进行了简化。当前的方法也有一些不足，例如，当前的requestly规则支持busy较为稳定，对steempeak等存在问题。可以在之后改进或完善。接下来可能可以开展的工作包括：封装成extension、进一步支持steempeak、自动选择或手动配置API server节点等。 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/02/%e3%80%90steem%e6%8c%87%e5%8d%97%e3%80%91%e7%94%a8requestly%e7%bb%95%e8%bf%87-steemit-com This page is synchronized from the post: 【Steem指南】用requestly绕过*.steemit.com document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemrequestlysteemitcom-f79lfbujtt/"},{"title":"【Steem指南】浏览器插件：Steem Server选择工具；解决*.steemit.com被禁的问题","text":"Steem Server选择工具刚才，@liuzhixiang 发布了Steem Server（服务器）的选择工具（一个免翻墙使用Steem 相关应用的工具），可以使得busy，steempeak等网站在*.steemit.com被禁用的情况下，保持正常使用。目前此插件可以在Chrome浏览器中运行。经小范围测试，可以正常工作，可以进一步推送给更多用户进行尝试。经村长@ericet建议，这里写一个更简单的说明书，帮助对浏览器插件经验较少的用户安装和使用。感谢@liuzhixiang的工作和付出，此Chrome扩展的著作权为@liuzhixiang所有，本文仅对使用指南做一些简化和解释。图片来源：https://steem.com/安装步骤：第一步：下载Chrome扩展程序打开Chrome浏览器，点击这里下载CRX文件（打包了项目源文件中的dist代码）第二步：安装Chrome扩展程序在浏览器地址栏输入 chrome://extensions/，打开扩展管理页面点击右上角的开发者模式（Developer Mode）按钮，开启开发者模式（因为本扩展为beta版本，未正式发布，需要使用开发者模式）将第一步中下载的CRX文件，拖入当前窗口。会弹出安装扩展的提示，点击添加扩展（Add Extension）。启用开发者模式（截图）将CRX拖入扩展页面中间（截图）安装浏览器扩展时的提醒（截图）安装成功后，地址栏的右侧会出现一个Steem图标的工具。扩展管理窗口会出现新添加的扩展，右下角的开关应该为开启状态。安装成功，地址栏右侧显示工具的Steem图标（截图）扩展管理窗口会出现新添加的扩展，右下角的开关应为开启（截图）第三步：开始使用busy或steempeak点击Steem Server选择工具的图标，会弹出一个窗口。在窗口中点击测速按钮，可以选择当前速度最快的服务器。（速度代表连接服务器所用的时间（单位：秒）；下面截图中最快的rpc.steemviz.com连接耗时1.7s。请选择连接时间最小的服务器。）服务器测速和选择的页面（截图）下面，请使用busy和steempeak愉快的发帖吧 打开或刷新busy.org或steempeak.com，如果一切正常，可以进行登录、查看feed、发帖等操作。 busy.org的截图steempeak.com的截图说明：测试和验证功能：目前没有做完整的测试，仅测试了busy和steempeak，首页可打开、feed功能可用、发帖可用。试用者可以做进一步测试。安全性：@robertyan对扩展的代码做了阅读和审查，项目中未发现恶意代码和信息泄露风险。目前的唯一问题是浏览器插件程序对所有域名都是启用的，在打开任意网页时都会运行，之后可能可以考虑做一个范围限定、只对白名单内的网站起作用；但这样会丧失一些灵活性，有新的dApp发布时需要更改白名单，可能需要重新发布浏览器插件。此问题之后会再做一些讨论，目前的beta版仅用于测试和试用是没有安全问题的。存在的问题与改进：在文章的评论中讨论了一些问题。目前主要的问题是性能方面，自选的Steem服务器的访问速度较慢、稳定性较差，使用体验一般、网页加载缓慢，@liuzhixiang也在此文中给出了此问题的解答。再次感谢@liuzhixiang的工作，有更多问题请反馈给作者或和CN区用户讨论。希望本文的使用帮助和说明对大家有帮助  其他常见问题 （1）Windows上安装时可能出现系统禁止安装的情况，需要添加到白名单 下载文件 chrome_steem.reg 到本地 关闭Chrome浏览器 双击下载的文件chrome_steem.reg，会将Steem Server选择工具的Chrome扩展，添加到白名单中（这个程序是安全的，只做添加扩展程序这一件事） 重启Chrome浏览器，到chrome://extensions中重新启动扩展程序 为什么需要把扩展添加到白名单中 我们需要这么做，是因为当前的扩展程序还没有上传到Chrome的扩展程序应用商店。把Steem Server选择工具加入到白名单中，可以防止它被Chrome自动禁用，以便顺利安装和使用。之后等扩展上传到应用商店后，此问题应该会消失。 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/02/%e3%80%90steem%e6%8c%87%e5%8d%97%e3%80%91%e6%b5%8f%e8%a7%88%e5%99%a8%e6%8f%92%e4%bb%b6%ef%bc%9asteem-server%e9%80%89%e6%8b%a9%e5%b7%a5%e5%85%b7 This page is synchronized from the post: 【Steem指南】浏览器插件：Steem Server选择工具；解决*.steemit.com被禁的问题 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemsteemserver-fs43botbb3/"},{"title":"【未来教育学】知 与 智","text":"哪来的“认知”？近来年的中国大陆的网络语言，“认知”这个词在微信、微博等被提及的特别频繁，似乎是罗振宇这一伙人通过知识付费这一市场炒作的结果。从语言的角度，这个词语的用法有些生硬，甚至是错误的。“认知”这个词语，一般常用于心理学概念，对应于英文的cognition，用以指代大脑感知、记忆、理解、想象和处理客观世界的过程。心理学的分支“认知科学”（cognitive science），主要是对大脑的思维能力在生理、心理等范畴的探究，与人工智能在工程上也有较多交叉的研究领域。 “认知”作为一个日常用语，被滥用，似乎是为了表达“认识”、“知道”某一个概念、某一个知识、某一种方法、某一类观念的过程。其实用大家常用的“认识”、“知识”、甚至“学问”、“智慧”就能表达。用“认知”这个词，实际上是一种商业策略，通过一个似是而非的流行词汇，来达到观念传播、影响大众头脑、开发新市场的目的。但一般这种策略会应用于一个真正的新的市场或创造物，比如“汽车”、比如“电子商务”、比如“个人电脑”，但硬要把原来已经有的概念，改用一个新词，难免让人作呕。 一个个“倒卖”知识的所谓“知识运营商”，通过贩卖、推介畅销书，影响一些缺乏独立思考能力的当代青年人。这种做法虽然商业上可行，但实际上是在原来混乱无端的互联网信息大海中，又灌入了一筐又一筐新的垃圾。而那些经常鼓吹所谓“交智商税”的提法的人，既不懂什么叫智商，也搞不清什么叫智慧，反而把更多人的脑子搞乱，让年轻人们越发不知道如何学习、如何思考、如何构建智慧的头脑。 我们不否认这些知识贩子在传播知识上的一些价值，毕竟现在愿意“亲自”读书的人，比例并不高。但在于商业利益相绑定后，也难免出现一些混淆视听、鱼目混珠、真假难辨的情况。至少这里宣扬“认知”的人当中，正直、真诚、博大、“先天下之忧而忧”的人少，“说书先生”、“讲故事专家”、“精致利己者”多，经常向这些二流角色学习，学到的智慧，能够精纯吗，能够传给子孙后代吗？ 知乎？智乎？知乎作为问答社区，热度依然不减，但仔细看里面的答案，真正值得采纳、取信的，也是寥寥。问答者的平均水平，不过中国大陆高中毕业生水平。较优秀者者也存在，如一些领域的研究者、行业领袖、学者教授，但真正的智者，愿意在其中提问、答题的，能有几人。知乎的总体水平不高，“信噪比”低。 知乎的水平，与繁荣时期的天涯接近，话题的广度和自由度可能更高，但总体约等于一个青年灌水、娱乐和炫耀专业知识的平台。如果年轻人过于满足从平台中获得的“赞”和“评价”，以及通过成为知乎大V谋利、扬名，恐怕反而会限制学问的发展。实际上，公司的运营者也看到这一点，所以知乎上以机构为背景的答题者可能出于商业动机，答题质量反而更高，并且集中在“买房”、“教育”、“就业”、“投资”等话题下面。 “五色令人目盲”。垃圾遍地的网络世界里，“知乎”对于一些人已经是获取某些知识比较高效的手段，但如果仅停留于这种水平，知识获取的效率仍然低下、智慧就更无须说了。 少看点知乎，多研究点问题，可能对于大多数人真正想增长智慧的人，才是正途。 智从何来所谓“学问”，学和问是核心，学是获得养料，问是解决问题。“博学、审问、慎思、明辨、笃行”的治学法，不是教书呆子如何通过考试，而是通过“学、问、思、辨、行”，让智慧可以实践、可以影响现实世界。获得所谓“智慧”的方法，也就是这些；积跬步、至千里而已。 上面提到的“认知”（知识付费）、“知乎”这些信息来源，如果不是以落地、以行动、以问题为出发点的，毫无目的的获得所谓的“认知”，难免成为“非理性消费者”。更何况，只是听一堂课、看一篇文章就能充分掌握的“认知”，真的有行动价值吗？获得智慧本质是“投资”（至少需要投资时间与精力），有价值导向，具有目的性、具体化、系统化，需要持续克服问题与困难，从实践中获得。 掌握了“为什么学”、“学什么”、“怎么学”，“为什么问”、“问什么”、“怎么问”的问题，学问的方向，做事的方向，才更“精准”。是“兼济天下”，还是“独善其身”，是大智慧、还是小聪明，也更清楚。 本文并不能情景化、具体化地回答某一个人的如何获取的智慧的问题。但如果能诚实地回答自己的“为什么学”、“学什么”、“怎么学”，“为什么问”、“问什么”、“怎么问”的问题，在“学问”的过程中有清晰的目的性、系统性和内部结构，并能够通过行动、实践和应证，解决实际中的问题，那至少会远离“碎片化”知识、“消费型”知识的误区，而学问也就可以由此积累了。 ​from Wikipedia – Library of Alexandria | CC BY-SA 2.0​ This page is synchronized from the post: 【未来教育学】知 与 智 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/2xzfzy/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（一）","text":"#cn-stem 正式成立已经有几个月了，大家写的话题不尽相同，有的确实非常有趣、有一定的深度，如@aellly瓜叔写的“电路课”系列，@honoru米高谈游戏编程的公益项目，@julian2013的电子工程师系列，等等。但整体来说，质量不算高，灌水的文章有一些，让人眼前一亮的文章少；并不是说作者的水准不足，也有激励机制或者评价标准的问题。米高@honoru在文章《我也想寫STEM文章，但無從入手？有甚麼方法？》中提到过写STEM文章的几种建议，都是很不错的角度。我这里并不打算继续讨论如何为 @steemSTEM 或 @cn-stem 写文章的问题，而是想聊聊成年人需要什么样的STEM教育。 谁需要STEM教育？ 我们一般提到或讨论STEM教育时，大多是在谈论给未成年人的STEM或者STEAM（加上艺术/Art）教育。目前在中国大陆的小学和中学，STEM教育越来越普及，商业性质的培训机构也非常多，面向的人群是以未成年人为主。青少年时期，是培养科学素养和心智的重要阶段，未成年人的科学教育，毫无疑问是很有必要的，此文无须多言。 米高 @honoru 在STEM教育方面有十分宝贵第一手的经验，从游戏入手帮助孩子、成年人、老人学习信息科技，非常有意义。比如米高在《STEM 教學與親子教育 (上篇 - 共兩篇)》中提到：“「父母與子女一同學習」是我們的基礎架構，STEM 本身已很多元化，能引發興趣，並且啟發思維。” 米高 @honoru 的经验告诉我们，不光孩子需要STEM教育，成年人也可以接受STEM教育，不过在目标、方法和内容都可以有所不同。不同年龄和领域的成年人（大学生、不同行业工作者、管理者、研究者、退休老人）需要的STEM教育，差异很大。 下面，我想笼统的谈一谈成年人的STEM教育的“为什么”（why）和“什么”（what）的问题。这是个大问题，这里没法回答得很好，仅是抛砖引玉。 from Wikipedia – Science | CC BY-SA 2.0 成年人为什么需要STEM教育？（Why） 当前所谓的“微课程”和“在线教育”很多，质量较高的如Coursera和世界著名高校的在线课程也很丰富，但我不认为老人学会汉字输入法，或者成年人学习Python编程语言制作网站、App、人工智能应用，或者完成大学的在线课程，甚至拿到理工科的“微学位”，就是有效的STEM教育了。 原因是，STEM是个笼统的、综合的概念，至少包含了科学（Science）、技术（Technology）、工程（Engineering）、数学（Math）几个方面，但由于中国不存在“科学”的传统，近代中国以来对这几个概念的理解缺乏深入、系统、直接的理解。所以，我认为成年人亟需STEM教育，尤其是科学精神、科学思想教育。 比如，对于数学的误解，有时把数学等同于算术或者计算，把会解应用题当成掌握了数学，对整个数学体系或数学基础缺乏系统认识。 但现实最大的问题在于对“科学”的绝对崇拜和对“科学”的片面理解的冲突，这可能引起严重社会后果。举例来说，把科学等同于技术，或者笼统地称为科技；或者把科学等同于生产力的来源；或者仅认为科学为一种智力或教学活动。 其实，对于“科学”和“数学”的误解的根源是同一个，即对“科学”的源头 —— 古希腊的“理性科学” ——的不了解，以及受中国“经世致用”传统的影响。 1. 什么是科学？ 20世纪50年代，英国科学史专家李约瑟提出著名的李约瑟难题 ——“为什么中国古代科学知识曾经在世界领先，而近代科学却未能在中国产生？” 对这一问题的回答，著作很多，如李约瑟本人的《文明的滴定》，一些在国内较流行的读本，如陈嘉映的《哲学·科学·常识》、吴国盛的《什么是科学》，也给出了深入的解答。其中，北京大学哲学系吴国盛教授在《什么是科学》中的分析最值得重视，本文这一节的观点多参考此书的论证。 首先，要回答李约瑟难题，必须对“科学”给出一个明确的定义。“科学”在历史上有两种形态：“希腊科学”与“近代科学”。李约瑟的提问中认可中国古代有发达的“科学”，事实上应为“技术”或“发明”，而非“科学”。 如果深入探究，中国古代的人文环境，并不具有“近代科学”（数理实验科学）生长的基因和社会土壤的差异；为了明确的分析这一问题，我们应该询问，为什么欧洲文明可以产生“近代科学”。 西方科学溯源：希腊理性科学 “近代科学”的源头在于“希腊科学”，即由苏格拉底确定的“求知”的传统，追求确定性、内在性、非功利的知识，这也是最早的对“自由”的定义，即斯宾诺莎说的“自由是对必然的认识”；这本质上是对“永恒”和“本性”（nature）的追求。苏格拉底说，“有知即有德”，“无知己缺德”。换句话说，这是一种“求真”的科学，把追求知识本身当成最高的目标，而不是掌握力量、富国强兵的手段。由此可见，“希腊科学”本身并不是一种求力的方法，而是一种“人文”，希腊人认为只有通过“知识”（科学）才能获得“自由”。 希腊的“自由-知识”这一人文传统，与当时的游牧、航海和经商的生活环境相匹配。这有别于中国基于农耕文明而发展处的“仁-礼”的人文传统。《大学》的“八条目”——格物、致知、诚意、正心、修身、齐家、治国、平天下——中，“格物致知”被放在最初级的阶段，而不是最高理想。这与希腊科学精神中，苏格拉底为“求知”献出生命相比，是截然不同的人性理想。即便中国也有墨子这样倡导平等、并有自然探索尝试的先贤，但毕竟在历史的潮流中被边缘化了。 “仁爱”与“自由”的人性理想的差别，是中国为何没有诞生近代科学的“基因”原因，也是我们认为成年人需要科学教育的根本原因所在。中国有极为强大的“学以致用”的传统，对于希腊人追求“无用的知识”的牺牲是难以理解的；不理解“知识是无用的”、“知识是为自己”，也就无法真正理解希腊语境下“自由”的真谛。 正是在对内在性、确定性、必然性的追求，形成了欧几里得《几何原本》，即数学的公理系统与演绎法，这是中国文明的“数学”（算术）所不具备。 近代科学溯源之一：没有基督教就没有近代科学 希腊的理性传统在中世纪几乎断绝，但并未完全消失，从阿拉伯翻译回来的希腊著作，与基督教文明相结合，奠定了近代科学的基础。 基督教传统下诞生的“大学”，奠定了自治与学术讨论的基础。神学与“哲学-科学”相结合，诞生了“经院哲学”（即高度理性化的神学），并引发了“唯名论”革命，并最终催生了“人类中心主义”原则和“征服自然”原则。 这使得基督教文明下的”理性“得以保存，并且通过把人置于上帝的位置，拥有自由和创造的意志，在征服和控制自然力中显示自己的力量，从而在唯名论所设定的混乱世界中保护自己、建立秩序。正式凭借这种”求力意志“，近代科学从”求真的科学“发展成了”求力的科学“。 近代科学溯源之二：数理实验科学的基础 与希腊科学相比，现代科学有两个重要的差别：一是现代科学能够转化为技术，从而转化为生产力；二是学科的数学化，包括社会科学在内的学科，都以数学化的程度来显示自身学科的成熟度。 其内在原因，在于近代科学是求力的科学，表现为人与自然地位的改变，从认识、追随和模仿自然，转为改造、制造自然。笛卡尔的主体性哲学为其代表，培根强调对自然的干预与拷问，使得受”自由意志“控制的实验成为了解自然、控制自然的新的方法。 自然数学化的传统来自柏拉图与毕达哥拉斯，在近代则由哥白尼继承托勒密的天文学数学方法为开端（《天体运行论》），并经由伽利略、笛卡尔、牛顿的发展大功告成（《自然哲学的数学原理》）。 总结之，近代科学是两希文明（希腊和希伯来）结合的产物：希腊科学的复兴，并经受了基督教的洗礼。决定近代科学出现的根本基因是希腊理性科学，中国文明未出现这一传统的原因在于”人性理想“的差别：”仁爱“ v.s. ”自由“。 亚里士多德：from Wikipedia – Science | CC BY-SA 2.0 本文未完结，关于成年人的STEM教育的“为什么”（why）和“什么”（what）的问题，我们在后面的文章继续讨论。 参考文献 李约瑟，《文明的滴定》陈嘉映，《哲学·科学·常识》吴国盛，《什么是科学》爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》亚里士多德，《形而上学》@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e4%b8%80 This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（一） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-33j60d0hfr/"},{"title":"【观非常人，行非常事】下邳圯桥，张良进履","text":"看到村长 @ericet 写的 最让我怀念的桥 中的结构力学作品，觉得十分有趣；于是去看了瓜子@iguazi123 办的活动：哪座桥最让你念念不忘？ 本来只是想简略记一下“下邳圯桥，张良进履”的旧事作为回答，但追思贤达、抒怀有感，写得多了一点。于是略加整理以成文，如此而已。 张子房得授《太公兵法》于黄石公，乃在“下邳圯桥”。 《史记·留侯世家》叙述如此： 良尝间从容步游下邳圯上，有一老父，衣褐，至良所，直堕其履圯下，顾谓良曰：“孺子，下取履！”良鄂然，欲殴之。为其老，彊忍，下取履。父曰：“履我！”良业为取履，因长跪履之。以足受，笑而去。良殊大惊，随目之。父去里所，复还，曰：“孺子可教矣。後五日平明，与我会此。”良因怪之，跪曰：“诺。”五日平明，良往。父已先在，怒曰：“与老人期，後，何也？”去，曰：“後五日早会。”五日鸡鸣，良往。父又先在，复怒曰：“後，何也？”去，曰：“後五日复早来。”五日，良夜未半往。有顷，父亦来，喜曰：“当如是。”出一编书，曰：“读此则为王者师矣。後十年兴。十三年孺子见我济北，穀城山下黄石即我矣。”遂去，无他言，不复见。旦日视其书，乃太公兵法也。 颐和园长廊彩绘：张良进履 | from Wikipedia – 张良 | CC BY-SA 2.0 世上千千万万桥，无论如何雄伟、坚固，或终将腐朽，但文明之”桥“却更容易流传千古。为何我独重”下邳圯桥“？盖见英雄之坚忍与不凡心性与其中。 世上千千万万桥，无论如何雄伟、坚固，或终将腐朽，但文明之”桥“却更容易流传千古，桥上之人最为令人感怀。 但为何我独重”下邳圯桥“？盖见英雄之坚忍与不凡心性与其中。 在下邳圯桥之前，张良做了什么？“荆轲之事”而已： 良尝学礼淮阳。东见仓海君。得力士，为铁椎重百二十斤。秦皇帝东游，良与客狙击秦皇帝博浪沙中，误中副车。秦皇帝大怒，大索天下，求贼甚急，为张良故也。良乃更名姓，亡匿下邳。 李太白有诗作《经下邳圯桥怀张子房》 赞子房之豪壮，却未尽得其妙。 子房未虎啸，破产不为家。沧海得壮士，椎秦博浪沙。报韩虽不成，天地皆振动。潜匿游下邳，岂曰非智勇。我来圯桥上，怀古钦英风。惟见碧流水，曾无黄石公。叹息此人去，萧条徐泗空。 张良任侠之士，以推翻秦皇为毕生己任，不顾己身。如此之人，却屡翻受辱（骂“孺子”，呵斥“取履”、“履我”，数次曰“後”）于一“衣褐”老人（在当时为最下层之人）竟不怒，忍之，此非常人之所及，若项王、高祖在此，亦不能也。苏轼《留侯论》说：“卒然临之而不惊，无故加之而不怒”，正是如此。 现代人学这一故事，都常说张良“尊敬老人”云云，这是典型的儒家礼法思维，但张子房并非儒生。我以为，经历此事的张子房才是千古之非常人。豪侠之士多有壮气与傲骨，张良又曾经是楚国贵族（原为姬姓）、出身不凡，屡受辱与最下层之人，却能忍之、敬之、信之，足见其非凡之心性。正是由此，黄石公才授子房以《太公兵法》。 无论黄石公是否真有其人，《太公兵法》是否真有其书，“进履”于“下邳圯桥”乃令张良由“勇”入“智”，终成推翻秦皇之不朽奇人。千古之下，有大志却不得其门而入者，当学张子房之“忍”也。 太史公在《史记·留侯世家》最后写道： 余以为其人计魁梧奇伟，至见其图，状貌如妇人好女。盖孔子曰：“以貌取人，失之子羽。” 当如是，此真子房也。 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e8%a7%82%e9%9d%9e%e5%b8%b8%e4%ba%ba%ef%bc%8c%e8%a1%8c%e9%9d%9e%e5%b8%b8%e4%ba%8b%e3%80%91%e4%b8%8b%e9%82%b3%e5%9c%af%e6%a1%a5%ef%bc%8c%e5%bc%a0%e8%89%af%e8%bf%9b%e5%b1%a5 This page is synchronized from the post: 【观非常人，行非常事】下邳圯桥，张良进履 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/9722r6ynds/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（二）","text":"在上一篇，【未来教育学】成年人需要什么样的STEM教育？（一），我们引出了问题“成年人需要什么样的STEM教育”，并分析了需要这样做的原因之一：“科学的根源”的问题。在这一篇中，我们继续完成对成年人，尤其是中国成年人，为什么需要STEM教育？（Why）的讨论。 成年人为什么需要STEM教育？（Why） 2. “永恒”知识的缺位 在前文提到中国的文化土壤缺少“自由”的基因，这里的“自由”不同于现代对”意志自由“的政治哲学含义的理解，而是对”必然性知识“（或者叫”真理“）的至高追求。这绝不是说中国缺乏“知识”或者“学问”传统，而是说“知”从来没有被我们放在人生“最高的位置”。 知识：永恒的真理 我们今天谈教育常说要培养“德智体美劳”全面发展的人，“德”在“智”的前面；知识无疑是重要的，但最重要的是道德、品格和做人原则。中国传统中最重要的学问是“伦理学”，而不是“知识论”。中国的伦理传统与希腊的“理知”传统是两种完全不同的传统。 中国的先贤的理性是高度发达的。春秋战国时，儒家、杨朱、墨家、法家、兵家、道家等学说相争，核心出发点，或者是以天下众生的福祉为目的，或者以超然出世为出路，都有严密的逻辑与思辨。“仁-礼”的“人文”最终胜出，与强大的帝国统治制度与农耕文明基础相适应，具有高度的实用主义。但这却离希腊传统“非功利”的对必然、永恒、内在的知识的追求越来越远。 苏格拉底的“自由”的人性理想的内含在于，世界是在不断的变化之中，但那些变化表象之后有永恒、绝对不变的东西（即知识或“真理”），这才是人世间最高的追求与道德。“经世致用”的中国文明传统，有超凡的理性，但缺乏探求“永恒”/“绝对”的最高理想；“永恒/绝对”的理想，恰恰与基督教的一神教宗旨一致，使得希腊理性科学在罹难中最终没有断绝。 解决“现实”的问题，更符合中国学术的规范：《九章算术》《周髀算经》无一不是对现实问题的技术型解决方案，即“算法”；中国的技术除了近代落后与西方，在过去也一直颇为强大。无论“兼济天下”还是“独善其身”，无论“公利”或者“私利”，事实上都是对“人”的关怀。换句话说，希腊科学的“永恒”理想，是对以“人”为目的的最高理想的超越，并通过“知识”和“科学”的形式转化为切实可行的“爱智”行为，即哲学家。 亚里士多德在《形而上学》的开篇第一句便是“求知是人类的本性”。他在这本著作中区分了经验、技艺和科学（episteme，在希腊文中，“知识”和“科学”是同一个词）。他认为记忆可以积累经验，经验可以形成技艺（techne），技艺是关于普遍事物的知识，技艺高于经验。但技艺还不是最高的“知”，最高的“知”是“科学”（episteme）。因为多数技艺是为了生活之必需，只有那些既不提供快乐也不以满足日常所需为目的的“必然”的技艺，才是科学。“为知识自身而求取知识”、“只有它才仅是为了自身而存在”，因为任何知识若是成为实现目的的手段和工具，就不是纯粹的自由的永恒的“知识”。 爱因斯坦在《探索的动机 —— 在普朗克生日会上的演讲》中也表明了这一观点，爱因斯坦称颂普朗克既不是为了快乐，也不是为了功利，而是为了探求莱布尼兹(Leibnitz)非常中肯地表述过的“先定的和谐”。 刘慈欣的小说《朝闻道》（题目的意思即“朝闻道，夕死可矣”）描绘了“对宇宙终极真理的追求，是文明的最终目标和归宿”的想象，其中说到“星云文明掀开了宇宙的面纱，但他们自己没来得及向宇宙那终极的美瞥一眼就毁灭了。更为可敬的是，开始试验前他们可能已经想到了这种可能，牺牲自己，把那些包含着宇宙终极秘密的数据传给遥远未来的文明”。 对于倡导“学以致用”、强调知识的工具价值的中国文化传统，以及政治与经济驱动的社会人来说，这是迄今仍不被人所理解的。混淆“科学”、“技术”与“科技”的使用，便是这种病症的语言层面的反映。 危机：求力的“技术” 中国人是很容易理解“技术”的，过去在“天地农医兵”等领域都有发达的技术，中国未来的技术也必将强大。但缺乏对希腊“自由-知识”（或“自由-科学”）基因的深刻理解，在未来有可能会陷入新的危机，并损害自身与人类的命运。 19世纪以来，希腊理性科学和基督教文明为基因的近代科学中的物理学、化学、生物学陆续转化为相应的技术，引发了相应的产业革命，兑现了数理实验科学最早期的“求力”理想。但过于强大的力量，大规模地征服和改造自然，引发了环境和生态危机，威胁到了自然均衡与人类自身。 被作为手段与工具引入中国的“科学”，如同外来入侵物种一样，缺少天敌和制约因素，酿成了严重的危机而未被深刻意识到，尚未通过自身文化中的资源加以化解。20世纪以来（尤其是五四运动之“赛先生”以后），中国对科学主义的绝对崇拜，以及缺乏有效治理的各类环境顽疾，正是反应了中国人对科学的本质与来源缺乏根本性的理解与思考。 艾萨克·牛顿：from Wikipedia – Science | CC BY-SA 2.0 3. 耕耘科学文化的土壤 从现实社会生活的角度来看，中国现实中的技术文化已经蓬勃发展起来。尽管仍然存在大量挑战，但技术、商业与媒体相协同，已经成为中国社会主流文化的一部分，技术英雄与商业领袖被杂糅在一起，主宰了报道和舆论的重要板块。我在《黑客之道》系列中希望探讨的黑客文化、精神与方法论，本质也是对技术哲学、技术史、技术原理的描述，技术本身具有极强的生命力，也是毋庸置疑的。 《流浪地球》作为科幻文化产品的火热，展现了中国在科幻领域的新高度，也表达了成为“科技强国”的真实渴望。对于科幻作品中的“技术文化”之下的关于“人类命运”的人性选择，在电影中展现的十分充分，但此种情境越是具有感染力，我们却反而越是难以理解“自由-科学”（或“自由-知识”）这一传统，原因正是科学的“非功利”性。 在21世纪的社会中，由于“科学”文化基础的模糊，中国人在思维与思想上面临诸多挑战。这值得我们深刻反思。 逻辑谬误：必然推理的缺失 “演绎推理”的思维方式起源于希腊理性科学，演绎注重内在推理，不注重解决具体应用的问题。其中的最重要的成就是几何学，即欧几里得的《几何原本》。《几何原本》在欧洲历史上是印刷数量仅次于《圣经》的出版物。 希腊的演绎法最重要的原则是“保真性”，即随着推理和推论的进行，结论仍然能保持绝对的正确，即必然正确的推理；这正是来源于“自由-科学”传统的对必然性知识的追求。在量子力学的争论中，爱因斯坦认为“上帝不会掷骰子”，正是基于对真理演绎体系本身的坚信不疑。 中国的思想传统是极富理性与辩证的，大多数时代的贤能之士都有极强的理性、智慧与思辨，但由于没有“演绎”这一方法论，导致推理存在思维谬误：具体表现为，概念模糊、比附推理盛行（严密推理不足）等。墨家和名家也曾有对概念定义和逻辑推理的尝试，却并没有被广泛接受。 在中国的思想传统中，占据主流的是或然性推理，而非必然性推理。在或然性推理中，由命题和条件得出的结论，并不具有严格和绝对的正确性，只是在一定概率下为“真”。比附和类推，是我们常见的或然性推理的例子。比附，指把相关性当成因果性；类推，指通过类比产生推论。中医的“取类比象”应用广泛。比如，中医认为，如果肾气亏虚，就会出现头发斑白。中医治疗肾虚发白，多从补肾入手，常用四季长青的女贞、侧柏叶等来乌发。 事实上，类比推理不代表一定错误，也不一定正确，严格来说，是在一定概率下正确。例如，惠更斯将光和声进行比较，发现了两者的相同属性：直线传播、反射、折射等，又已知声有波动性，所以猜测光也有波动性。之后的科学进展证明了惠更斯的类比推理结论的正确性。但类比推理的“不必然”的性质，对思维的严格性产生了影响。 与“或然性推理”相对应的，概念模糊、事实不清也为常见思维误区。概念和事实是推理的前提。对特定概念的理解不准确或不深刻，对事实的可靠性缺乏证实，则直接导致推理过程的不正确。例如，“去中心化”这一翻译并不能准确反应这一词语背后的内涵，令一些区块链行业从业者产生困惑、理解不清。将“观念”与“事实”混淆，无法区分主观与客观，一般常见于评价或判断，如“中国为科技发达之国家”。 必然推理缺失引起的逻辑谬误，对思维、决策和判断，具有显著的负面影响；从这个角度讲，成人也需要科学精神的自我教育。 “古今中外”：思想观念的混乱 科学文化基础模糊的另一个问题是，一百多年来“西学东渐”的历史，使得现代中国在文化上存在大量挑战。简单来看，便是“古今”和“中外”两个维度的挑战，以及引起的问题：（1）今人不识古，也不知道如何充分运用古代文明遗产；（2）对西方的思想根源未充分吸收，见其表而未及里；（3）中西思想的冲突，引起思想的割裂与混乱。 一方面，“五四”以来的数次文化运动，对传统文化的整体破坏严重，使得今天很多中国人难以真正理解包括“仁-礼”体系在内“诸子”的中华文化精髓。另一方面，对引进的包括希腊罗马、基督教文明、自由主义、马克思在内的西方的精神遗产的吸收，存在消化不良、只见树木、不见森林的情况。 举“自由”为例。“科学”不仅仅是理性思维 ，也是西方最早期的“自由”观念。现代中国对“自由”的探讨，如果只停留在政治权利层面，则不能深入其本质和根源。对于中华传统，不理解“儒”、“道”、“佛”在自由上的精神，也难以将其真正转化为自我的精神资源。 实际上，对于“科学”、“自由”、“哲学”、“民主”、“技术”、“形而上学”、甚至“自然”等现代汉语词汇的概念模糊，本身就是这一文化病症的症状。这些词语都来自于晚清时期日本学者翻译的著作传入中国，并最终被吸收和采纳的，相比之下更为精到和地道的严复的翻译如“格致”（相比“科学”更能反映科学精神）、“理学”（对应“哲学”）、天演（对应“进化”）等则不幸未被采纳。对于这些日本翻译的西方词汇，我们缺乏本质的理解，则难免在思想与观念中存在诸多困惑，要发扬光大则有更多困难。 要解决这一困难，唯有不被这些语言词汇上的“末”所干扰，而是回到其精神的“本”，才能在思想上有真正的深入与发扬。 在历史上，“佛学”作为从西面传入的思想，也曾对中华的文化传统发起重大冲击，形成了本地化的“禅宗”，并最终促成了“理学”为代表的儒学的发展与复兴，使得儒学成为真正的道统，但高度统一的思想却也无形中造成了明清的思想保守。 面对当前的文化困局，寻得中西文明的“本”，尤其是理解“仁爱”和“自由”的“本”，让更多的社会公民认识到文化的基因与土壤，并以史为鉴、引导正确的发展方向，是现代社会、科学与文化进一步“天演”的重要进程。 查尔斯·达尔文：from Wikipedia – Science | CC BY-SA 2.0​ 本文未完结，在下一章，我们会讨论成年人需要哪些STEM教育的问题。 参考文献 李约瑟，《文明的滴定》陈嘉映，《哲学·科学·常识》吴国盛，《什么是科学》爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》亚里士多德，《形而上学》刘慈欣，《朝闻道》@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e4%ba%8c This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（二） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-yafmsa49dm/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（三）","text":"在上两篇文章，【未来教育学】成年人需要什么样的STEM教育？（一）和【未来教育学】成年人需要什么样的STEM教育？（二），我们引出了问题“成年人需要什么样的STEM教育”，并从（1）希腊科学与近代科学的根源、（2）中国文明缺少“求真”的传统、（3）缺少科学精神带来的现实挑战，这三个方面，解释了成年人，尤其是中国成年人，为什么需要STEM教育？的原因。 接下来我们继续回答，成年人需要什么STEM教育的问题。 成年人需要什么STEM教育？（What） 首先，从实际中看，STEM四者的关系，M（数学）和S（科学）为一组，T（技术）和E（工程）为一组，MS是TE的基础。 如同前文提到的，中国在历史上不缺少技术，并且很强大。虽然“士农工商”四者中，“士”与“农”是过去的农耕文明的基础，当过渡到今天以“工”与“商”为重要组成的商业文明时，需要做一些调整和转型，但事实已经证明技术文化与实践在中国是可以蓬勃发展起来的，这种趋势不可阻挡、却也存在风险。 （T）技术和（E）工程并不仅仅限于传授技术和工程知识或技能，也有自己的内在精神特质，@honoru 在《回應 @robertyan 的「未來教育學」》中提到了运用STEM中的E（工程，Engineering）的方法来推动团队合作（Teamwork）的培训，考察团队成员品质和领导力，也是很值得借鉴的方法。 相比之下，科学和数学教育，尤其对于成年人的教育来说，更容易被忽视，但却同样重要甚至更重要。我们在前文提到，求真的、非功利的、追求永恒的“自由-科学”（或“自由-知识”）传统是中国文化土壤中至今所未播种、生根的。对于“求力的科学”的追逐，则是当前中西方面临的一系列环境和社会问题的共同原因。所以，如何让“求真的科学”的人性理想可以真正在中国落地生根，是我们需要着力解决的问题。 1. 科学精神与科学思想 人性理想：求真还是求力 STEM教育在美国兴起的初衷，是为了将“工程”/“技术”变为一种基础教育阶段的“元科学”，以解决美国工程学位获得者较少的问题。现在学校里的STEM教育，很多也强调动手实践、解决问题和团队合作，毫无疑问，这对于提高一国一地区的整体技术水平，培养科学技术劳动力和从业者，是十分重要的。这比只强调“知识”、忽视“行动”的教育方式，已经有所提升，却离培养真正的“求真”科学精神依然遥远，离“求力”的技术精神越来越近。 首先，我们无法否认或者忽视“求力”科学和整个“求力”的社会的巨大惯性，以及“求力”理想本身的价值理性。工业革命以后，到信息革命，技术与资本相协同，获取了巨大的权力，并主导着世界继续向“技术爆炸”的方向前进，并以此作为国际政治、经济和文化竞争的核心手段。于是，政治、经济、文化、技术、科学都成为追求“更高、更快、更强”的“力量”的手段。 相对应，普通劳动者的生活则在这种对力量的追求中，变得疲惫不堪。个人对“金钱”、“权力”、“技术”甚至“知识”的追求，无不反应出这一种求力倾向。真正秉承“求真”理想之人，则被认为是住在“象牙塔”中或修炼“屠龙之术”，“自由的学术”需要服务于国家与人民，唯独不是为了“知识”本身。 其次，对于“求真”与“求力”的关系，柏拉图在《理想国》中构建的“哲人王”的思想是一种表达，即用“知识驾驭权力”、“求真高于求力”，在现实中的实施存在巨大的挑战；要将“知识”作为人世间最高的理想，不仅对于个人来说难以达到，对于国家这一政治实体更是极为艰难。 “哲学家”在面对世俗的社会问题时，并不否认“求力”的、甚至“救世”的必要性。柏拉图要求统治者同时也必须是哲学家（即把知识作为最高要求），一方面是对统治者的人格理想的体现（富有理智，不受情感和欲望控制），另一方面也是把权力限定为一种手段而非目的的保证。这实际是在价值秩序方面约束了政治权力（却不是在制度上）。 但我们不得不承认，在现实中，相信某种逾越政治的价值秩序的变得更愈发艰难。我们在近代所谈论的“自由、平等、正义”等价值，大多是在政治领域内部构建起来的；虽然这些价值不同于权利，却离政治太近，无法保证明确的优先位置。所以，无论是“自由-科学”的知识传统，还是“仁爱”的伦理传统，都不得不面对被政治所用的境遇，这在中外都一致。 在中国文化中，“自反而缩，虽千万人，吾往矣”、“以天下为己任”、“先天下之忧而忧，后天下之乐而乐”、“天下兴亡，匹夫有责”、“天下为公”是“仁爱”伦理传统、”天人合一”思想传统下的人性理想的外在体现。但一方面，这一种精神本身的“经世济民”目的与”自由-科学“是相左的，另一方面能持无私而利天下者，达到这种境界，在所有人中仍是少数，更多人处在“利己”甚至“精致利己”的阶段。所以，让人们普遍认识这种“无用之用”，在现实中使“求真”处于一个优先甚至对等的局面，在国家政治层面不存在现实中的可行性。 说到这里，“求真”理想的实现路径似乎已经极为渺茫。但我觉得，自下而上来看，仍然可以通过（1）家庭教育的“爱智”启蒙、（2）实业中的科学精神、以及（3）争取“自由的学术”（尤其是大学）来实现。 下面的三个小节将分别论述这些途径，同时也是对“探索精神”、‘’理性思维“和“科学思想”如何落地的思考。 问题意识：“爱智慧”的落地方式 家庭教育的“爱智”启蒙，这是我在上面提出的第一个方面的实际措施。科学起源于哲学，哲学（Philo Sophia）在希腊语中的含义就是“爱智慧”，也即我们反复提到的“自由-科学”传统。 这里要说的主要是针对“父母”的如何进行“爱智”启蒙教育的教育，所以对象主要还是成年人。 为什么限定在父母，即家庭教育，而不是学校教育？毫无疑问，对于学校教育我们认为它应该扮演更多启发式、探索式、项目式教学的责任，我们也看到STEM教育以及“素质教育”在这个层面的努力、并对于中国学校教育的发展方向有信心，但我们也必须承认学校教育的挑战与弊端。 最大的问题是，无论中外，学校教育回避不了“应试”这样一个选拔人才的主题，无论考试方式是书面考试还是综合素质评价，评价的标准会发生改变，但只要教育资源无法做到绝对平均，选拔/竞争这一模式将继续存在。那么，必然出现“应对考试”与“培养人才”这两个问题的取舍和争夺的问题。父母如何看待这一矛盾，并在学校学习与训练中保持孩子的“好奇心”不被破坏，至关重要。 中国受几十年“应试教育”和”工业化教育“的影响，培养了大量“解题”（在考试中）和“执行”（在企业中）的人才（和父母），但“爱智慧”的出发点却在于“发问”、“提出问题”；“问”却是很多父母仍没有真正掌握的。由于“天人合一”、“天人感应”传统的影响，中国思想传统很少把“天地万物”当成客体来看待（即“天人分离”），所以直接对天地万物进行观察和提出疑问没有那么发达。甚至于“自然”这个词语也是晚清时由日本学者翻译的；《道德经》的“人法地，地法填，天法道，道法自然”中的“自然”是“自己如此”的意思，而不是今天经常被误读的“自然界”。 而“提问”却是培养好奇心和探索精神的重要方式。大部分孩子在幼年时都有提问的习惯，但在经受学校教育后却没有将此种习惯保存下来，这是极大的损失。所以，我们应当建议和启发父母（以及祖父母）在家庭教育中培养此种“问题意识”，从幼年到少年与青年时期，鼓励孩子发问，并主动探索答案。问题可以涉及自然现象、生活所见、学习疑难、旅行见闻等，父母虽然未必能够深刻回答所有问题，但可以“知之为知之，不知为不知”，尽可能提供线索与启示，让孩子能够随着见闻的增长对问题不断给出新的回答。在这一过程中，答案是否绝对正确不是关键，如何寻找与发现答案的过程更为重要。 提出精确、有前瞻性的问题，是推动科学进步的重要能力。当孩子养成良好的“提问”习惯后，也可以进一步引导其关注本质、延伸或相关的问题，从“问题意识”出发，向“问题智慧”前进，这需要反复的实践与思考来获得。提问也会对话、讨论的形式，有时不仅父母启发孩子，孩子也会反过来启发父母，这对父母的引导和讨论能力也提出了一定要求，甚至与大学中的讨论班（seminar）有些相似。另外，对“想象力”的推崇，也是在有一定“问题”去探索的情况下才显出价值，“想象”不是幻想或胡思乱想，而是对我们所处的宇宙的思考与联想。 如果父母能够鼓励和保持孩子的“问题意识”，那么我们就离“求真”传统更近了一步；这是几个问题中最容易实施的，却也是最为基础性的，保持孩子的好奇心，就是最好的钥匙。 理性思维：精确的思维方式 我们在前文已经提过中国“必然性推理”缺失，而“或然性”推理盛行的问题。这一思维方式不但对于日常生活十分有效，对于产业发展与决策也是基础的思维能力。简单来说，依靠事实、数据、逻辑推理、专业能力做出判断，有效整合逻辑推理与人类直觉，是理性思维和科学决策的前提。 理性思维需要训练，在数学理论、科学研究、产品设计、商业运营、金融工程等过程中都大量依靠数据、流程、工具和算法做出分析，在信息时代、智能时代更是成为基本的思维能力。 由于“批判性思维”等方法中对理性思维都有深入探讨，有兴趣可以参考相关书籍，此处不深入讨论。 对于中国的成年人，尤其要注意几点（这在前文也已经提到过），大体可以从“几何学”来理解为何需要这样做：（1）对“概念”的定义要有清晰的了解，（2）基于“事实”而不是观念做判断，（3）通过必然性推理，而不是或然性推理做推论，（4）采用量化/数学化的方式作分析。同时，随着智能技术的发展，我们可以采用“智能决策”系统，借助机器与数据，协助人类思考。此外，对于不了解的问题或领域，我们则应该尽量学习和采用专业的知识与方法，像专业领域人士请教，这也是一种理性。 随着中国产业升级和管理的精细化，有更多企业需要精确和数据化的决策与管理，这对理性思维与数据智能的发展，都有极高的要求；随着数字化转型的深入，管理者和员工都应真正掌握理性思维。 “问题意识”是“求真”传统的切入点，“理性思维”则是“求真”传统的实行方式，掌握了这两点，普通人至少可以进行基于科学方法的探索。但只有真正追本溯源，保持“求真”理想的源泉，为知识而知识、为学术而学术，才能真正保留“科学精神”。 追本溯源：自由之学术 我们前面提到在“求力”的社会中，“求真的科学”难以成为优先目标。但我们可以在群体和个人中保留真正“自由的学术”，和无用的、内在性、必然性、永恒的“知识”。这是人类“心智的圣所”。 清华大学王国维先生自沉两年以后，陈寅恪先生作碑文如下： 海宁王静安先生自沉后二年，清华研究院同仁咸怀思不能已。其弟子受先生之陶冶煦育者有年，尤思有以永其念。佥曰，宜铭之贞珉，以昭示于无竟。因以刻石之词命寅恪，数辞不获已，谨举先生之志事，以普告天下后世。其词曰：士之读书治学，盖将以脱心志于俗谛之桎梏，真理因得以发扬。思想而不自由，毋宁死耳。斯古今仁圣同殉之精义，夫岂庸鄙之敢望。先生以一死见其独立自由之意志，非所论于一人之恩怨，一姓之兴亡。呜呼！树兹石于讲舍，系哀思而不忘。表哲人之奇节，诉真宰之茫茫。来世不可知也，先生之著述，或有时而不彰。先生之学说，或有时而可商。惟此独立之精神，自由之思想，历千万祀，与天壤而同久，共三光而永光。节自《清华大学王观堂先生纪念碑铭》 其中“独立之精神，自由之思想”，便为后人常提及之学术精神。清华大学原来的校训“自强不息，厚德载物；独立精神，自由思想”，后两句源于此（前两句来源易经）。细读之，便知道这里指的就是“自由-科学”的传统，也是非功利的、不受干预的学术自由、大学精神。 近代大学是基督教文明下诞生的不受教会左右的学术自由的机构，是希腊理性科学在中世纪复兴后争取到的重要制度。其根本作用就在于保证学术的自由。 中国的办学者如蔡元培对此有着较深刻的理解，采取“教授治校”，并总结北大的特色：“一研究学问。二思想自由。无论何种学派思想，概不干涉。” 但在南京国民政府成立后，政府的干预便接入介入其中，直到今天的中国仍留存较多问题。 在学术自由方面，我们已看到一些中国大学正在给予研究者更多自由和独立性，已较过去有所改善。虽然在目前的国际竞争格局与治国方略中，希望大学完全“去政治化”并不现实，但给予某些研究领域更多自由与发展空间，以及采取更灵活和优越的学术人才选拔机制，仍有实施的空间。虽然这一点上中国大学颇受西方舆论攻击，政府也不希望大学成为思想渗透的窗口，但从实际情形而言，我们可以看到学术自由好转的现象。至少我们仍可以说，有真正只为学术、只为知识、以生命捍卫真理者在这片土地上存在，这是“求真的科学”在中国的希望之所在。 最后，我认为科研工作者们，无论是在大学，还是所谓的野生或民间研究者，甚至哪怕仅是对科学抱有热情却无专业训练，应当在“科学哲学”和“科学史”上做一些探索。科学哲学回答什么是科学的本质，科学史帮助我们看清科学的源头；正本清源，未来的道路才更加明确与稳健。对于自由的学术，是如此；对于人类的未来，也是如此。这也是本文对“本”的问题着力颇多的目的之所在。 艾尔伯特·爱因斯坦：from Wikipedia – Science | CC BY-SA 2.0 本文未完结，在下一章，我们会继续讨论成年人需要哪些STEM教育的问题，我们将继续从科学读物与科学实践、以人为本的科学教育的角度，做一些探索。 参考文献 李约瑟，《文明的滴定》陈嘉映，《哲学·科学·常识》吴国盛，《什么是科学》爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》亚里士多德，《形而上学》柏拉图，《理想国》刘慈欣，《朝闻道》@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》@honoru，《回應 @robertyan 的「未來教育學」》 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e4%b8%89 This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（三） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-7xw4el63nl/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（四）","text":"在【未来教育学】成年人需要什么样的STEM教育？（一）和【未来教育学】成年人需要什么样的STEM教育？（二）中我们引出了问题“成年人需要什么样的STEM教育”，并从（1）希腊科学与近代科学的根源、（2）中国文明缺少“求真”的传统、（3）缺少科学精神带来的现实挑战，这三个方面，解释了成年人，尤其是中国成年人，为什么需要STEM教育？的原因。 从【未来教育学】成年人需要什么样的STEM教育？（三）开始，我们具体讨论成年人需要什么STEM教育的问题。在（三）中，我们对其中的核心问题“科学精神与科学思想如何落地”展开了分析。 在本文中，我们继续讨论成年人需要什么STEM教育的问题，介绍了科学读物与科学实践的关联，尤其是梳理了重要的科学读物。 成年人需要什么STEM教育？（What） 2. 科学读物与科学实践 在上一章节，我们着重讲了科学精神和科学思想如何落地的问题，这一章节，我们进一步具体化，主要讲哪些科学读物值得深入阅读（知）以及如何真正亲身进行科学实践（行）的问题。 知与行的辩证关系，前辈们讨论的很多，有说“知”是知识的、也有说“知”是良知的，对特定情形下的先后优先级也有不同的理解。对于“求真的科学”如何在中国落地的问题，核心的难点首先在于“知”、其次是“行”，“知”既是人文与精神传统的问题、也是思想与实践的问题。这似乎暗中呼应了孙中山在建设现代国家时所认为的“行易知难”；100年过去了，我们看到技术已经大行其道，“科学”却并未真正在心中扎根，这也是“行易知难”的体现。“士不可以不弘毅，任重而道远”，由此可知。 “知”的问题，我们可以从底层（本质与根源）、中层（知识与识见）、表层（世俗与流行），三个方面来探讨，粗略来说，可以对应到“科学哲学与科学史”、“科普书籍”、“科幻文学”。 “行”的问题，相对应的，我们也可以从底层（智慧的构建）、中层（知识的运用）、表层（信息的传播），三个方面来探讨，粗略来说，可以对应到“构建（理论）体系”、“建立科学决策系统”、“传播科学技术文化与方法”。 读物1：科学哲学与科学史 这一节，我们主要说说有哪些科学哲学和科学史读物值得仔细阅读。 先说说这两者的定义： 科学哲学是一个20世纪兴起的哲学分支，意义比字面上表现得要广阔得多，至少包括“关注科学的基础、方法和含义，主要研究科学的本性、科学理论的结构、科学解释、科学检验、科学观察与理论的关系、科学理论的选择等。”—— Wikipedia：科学哲学科学史，简单来说是科学的历史，包含了对科学发展规律、科学思想变迁等一系列涉及思想史、社会史等方法的研究。 科学哲学和科学史的意义之一，都在于求“本”（本质与根源）；科学精神和科学思想是其核心，我们在上一章已经重点讨论。这些“知”极其重要但也是较难深入和掌握的。 科学哲学和科学史本身包含了很多博大或者驳杂的内容，这里推荐的书目，针对非科学哲学和科学史的专业学生或学者，例如来自于别的领域的学生或从业者，所以以“入门”和“导论”相关的书籍为主。 以下的推荐书籍，部分参考了北京大学科学哲学与科学史系、清华大学科学史系的推荐书目（如吴国盛教授的推荐），均有中文译本或由中国学者写就，相对更适合中国文化背景的读者阅读；并主要选择了一些更适合高中和大学本科能力的读者的书目。 第一部分：科学哲学 这一部分包括科学哲学的普及和专著。读者可以从“普及”类书籍看起，以确认自己的兴趣；如果想要获得更深入、精准的了解，并自主进行学习和研究，则可以参考整体结构更清晰、或在特别问题上有深入分析的专著。 （1）科学哲学普及： 吴国盛：《什么是科学》，广东人民出版社，2016年陈嘉映：《哲学·科学·常识》，东方出版社，2007年奥卡沙 ：《科学哲学》（牛津通识读本），韩广中译，译林出版社，2009年 吴国盛和陈嘉映教授在中国做了较多科学哲学的普及工作，他们的著作具有代表性，可读性强、深入浅出、富有趣味，同时可以引出大量更深入的话题，作为进一步探索的出发点。其中，《什么是科学》更注重对科学源头的探究、并引出博物学的传统，《哲学·科学·常识》 的上篇是对科学史的导引式介绍，下篇则介绍了科学哲学基本问题， 如经验与实验、数学化、实证科学等。由于都是中国学者的著作，两本书都一定程度上尝试解释和回答了“李约瑟难题”。 奥卡沙的《科学哲学》的特点是一本通俗易懂的通识读本，如中文版序中所说的“通俗易懂、言简意赅、语言流畅”，以较少的篇幅介绍了科学哲学中的重要问题，如科学推理的方法及这些存在的问题、库恩的科学革命理论、对科学的批评等等。 这三本书可以帮助读者大致了解有哪些“科学哲学”领域内的常见问题，对于启发思考、激励探索有很大的帮助。 （2）科学哲学专著： 查尔默斯：《科学究竟是什么》，鲁旭东译，商务印书馆，2007年库恩：《科学革命的结构》，金吾伦等译，北京大学出版社，2003年波普尔：《科学发现的逻辑》，查汝强等译，中国美术学院出版社，2008年波普尔：《猜想与反驳》，傅季重等译，上海译文出版社，1986年吴国盛：《技术哲学讲演录》，中国人民大学，2009年 《科学究竟是什么》是一本教科书体例的科学哲学入门书，包括了实证主义、证伪主义、历史主义、后现代主义等主流学说和议题。相对来说是比较正经的书，适合专业学生或需要正式深入研究的读者阅读。 托马斯·库恩和卡尔·波普尔的著作，相对来说有一定的群众基础和社会影响力，所以这里也推荐。库恩《科学革命的结构》质疑了科学线性发展的认识，提出了基于“范式”的科学革命和发展的观点，至今有着极为深刻的影响。波普尔以他的科学“可证伪性”被很多人知晓，他的著作《科学发现的逻辑》、《猜想与反驳》的贡献主要在于科学方法论上，“可证伪性”是其中的核心概念。 吴国盛的《技术哲学讲演录》实际上是一本“技术哲学”读本，是对海德格尔、马克思等技术哲学先驱的文本的收录。放在这里的目的是为了读者可以横向比较科学哲学和技术哲学所关切问题的差异，有助于更深入的理解科学和技术的角度的不同。 第二部分：科学史 科学史可以简略分为通史、断代史、专题史等，与其他历史研究的分类法近似。通史从源头谈起，直到现代科学；断代史着重关注其中一个时代，例如科学革命；专题史关注某一个特定问题的历史沿革。 （1）通史 吴国盛：《科学的历程》，北京大学出版社，2002年麦克莱伦第三 / 哈罗德·多恩：《世界科学技术通史》，上海科技教育出版社，2012年 《科学的历程》和《世界科学技术通史》都是不错的科学史入门读物。《科学的历程》是吴国盛的成名作，影响力较大，写作方式面向一般读者，很容易入手。《世界科学技术通史》是一本通史教材，全球视角较为全面，对中国、印度、阿拉伯等的科学和技术传统都有详细介绍。 （2）断代史 柯瓦雷：《从封闭世界到无限宇宙》，张卜天译，商务印书馆，2016年库恩：《哥白尼革命》，吴国盛等译，北京大学出版社，2003年 这两本著作都把焦点放到了近代科学的兴起 —— 即以哥白尼、伽利略、开普勒、笛卡尔、牛顿等为的科学革命。 《从封闭世界到无限宇宙》作为科学思想史学派领袖柯瓦雷最负盛名、最有影响的作品，描述了这场人类历史上最为深刻的变革之一的思想演化的过程，分析独到、细节深刻，展现了错综复杂、动人心魄的理智探险是如何完成的。 《哥白尼革命》是库恩的科学思想史名著，哥白尼拉开了科学革命的序幕，阅读此书可以了解科学革命中思想巨变发生的详细过程。 （3）专题史 布鲁克：《科学与宗教》，苏贤贵译，复旦大学出版社，2000年 科学与宗教的关系，由于种种原因，在现代受到了极大的误解。布鲁克的《科学与宗教》结合科学与宗教发展的历史，深入探讨了科学与宗教的紧密关联、冲突与和谐，让这种真实关系可以得到展现。 第三部分：科学思想 许多杰出科学家同时也是科学思想家，在他们的思想著作中，经常体现了他们从事科学研究的思想过程及背后的哲学内涵。科学思想类著作本质上也探讨了许多科学哲学与科学史的问题，值得深入阅读。此类著作也不少，这里选取了其中有重要影响的一些： 爱因斯坦：《爱因斯坦文集》第1卷，许良英等译，商务印书馆海森堡：《物理学和哲学》，范岱年译，商务印书馆，1981年薛定谔：《生命是什么》，编译组译，上海人民出版社，1973年维纳：《控制论》，郝季仁译，科学出版社，1963年 以下是它们的简介： 爱因斯坦不仅是一位革命性的科学家，在科学研究方法和哲学基础方面也有重要的思想，同时对公众与科学教育也有着巨大的影响力。《爱因斯坦文集》第1卷，收录了爱因斯坦在科学的哲学问题、科学精神、物理学的变化等多方面的思想。海森堡的《物理学和哲学》以量子力学为主线，讨论了物理学的哲学影响、内在的哲学问题，以及物理学对社会的影响。薛定谔作为伟大物理学家，写就了生命科学的普及作品《生命是什么》，展现了其深邃的思想，直接启发了分子生物学的诞生和DNA的发现。维纳的《控制论》引发了20世纪末期的诸多新兴理论，例如复杂性理论、人工生命、混沌理论等，本书的文笔浅显但却蕴含了许多深刻的思想。 此外，为了真正了解科学的“本”，实际上我们也需要真正理解中华文明的“根”——“仁-礼”的传统（以及诸子思想）；反过来也是一样，要真正从现实中理解“仁-礼”，也需要了解“自由-科学”。否则我们事实上无法真正分辨现实世界中各种问题的来源，也就无法结合现实进行“追根溯源”。大学中的“自由教育”（也称为博雅教育、通识教育），也应该对这“寻本”的教育有所重视。但这一部分的推荐读物，我们在此不赘述，由大家自行研究和探索。 读物2：科普读物 上一节我们着重于“底层”的对于科学哲学与科学史的构建，这一节我们主要介绍“知识”普及相关的读物。除了对于“本质和根源”的掌握，我们还需要充沛的科学“知识和见识”，“求真”的科学传统才能够真正建立起来。 小学到大学的科学课程的教育（数学、科学、物理、化学、生物、地球科学、心理，等等），实际上便是科学普及，并结合一定的科学训练，如科学实验、解释和解决科学问题等。 但对成年人来说，随着社会经验的增长，和个人兴趣的分散，其科学普及的范围更广阔的、也更深入。例如，一般读者可以根据兴趣，了解特定领域的最新科普书籍、杂志、影视等；或者，结合社会现实，了解与生活现实密切相关的科普著作。 科普名著数量非常庞大，而且不仅仅包括数理实验科学的著作，还包括大量的博物学传统的著作。在形式上，随着电子媒介的发展，视频、音频等手段也被使用的越来越广泛。以下罗列一些较有影响力和价值的科普书籍，供读者参考。 （1）教材 对于真正要掌握科学知识，从教材入手一般更为准确和有效。一般直接选取各学科正在使用的教材便可以了。但成年人愿意深入读一本科学教材，如《物理化学》、《生物信息学》等，相对应该比较少，所以可以结合自身兴趣和现实问题入手，“自己动手、丰衣足食”。 （2）著作 M·克莱因：《数学：确定性的丧失》，李宏魁 译，湖南科学技术出版社，2003年第1版，2007年第2版伽德纳《啊哈！灵机一动》，白英彩等译，上海科学技术文献出版社，1981年霍金：《时间简史》，许明贤等译，湖南科技出版社，2001年彭罗斯：《皇帝新脑》，许明贤等译，湖南科技出版社，1995年道金斯：《自私的基因》，卢允中等译，吉林人民出版侯世达：《哥德尔、艾舍尔、巴赫》，郭维德等译，商务印书馆，1996年卡逊：《寂静的春天》，吕瑞兰等译，吉林人民出版社，1997年萨根：《魔鬼出没的世界》，李大光译，吉林人民出版社，1998年尼尔·波兹曼：《娱乐至死》《童年的消逝》《技术垄断》尤瓦尔·赫拉利：《人类简史》，林俊宏译，中信出版社，2014年 以上的大部分著作都十分经典，有较高思想性，仅做简要介绍。 如克莱因的《数学：确定性的丧失》对数学危机的论述、《啊哈！灵机一动》的数学游戏、《时间简史》和《皇帝新脑》作为畅销书更无须多言、《自私的基因》的生物社会学阐释、《哥德尔、艾舍尔、巴赫》对逻辑悖论的探讨、《寂静的春天》对环境保护的呼唤、《魔鬼出没的世界》对科学思维的普及、尼尔·波兹曼的三部曲对电视媒介的批判、《人类简史》对人类宏观历史的描述。 （3）杂志 当前好的科学杂志并不多，首推 《环球科学》（Scientific American）。此杂志讨论世界科学的最新进展、弘扬科学精神，适合成年人扩展科学眼界、增长兴趣。 读物3：科幻文学 优秀的“科学哲学和科学史”、“科普”读物的思想和知识比较纯正、比较“干货”，但在大众文化中的流通性反而没有那么高，近年来随着科幻文化的升温，对于推动大众的科学精神普及也有十分重要的意义。将科学基础与文学幻想结合，并经由影视等媒介地推波助澜，影响力不容忽视。 与其他类型的读物一样，我们推荐读者阅读有思想、好看的科幻经典，其形式可以是小说、电影、电视、动画、游戏等；这里主要讲小说和电影，但电视（如《西部世界》）、动画（如《星际迷航》、《新世纪福音战士》）、游戏（如《星际争霸》）等也非常丰富。 （1）科幻小说 近十年来《三体》的崛起确实带来了科幻小说文体在中国的火热，虽然还比不上曾经的武侠小说在大众文化中的地位，但也已经追上了很多。 优秀的科幻小说具有不错的阅读体验和超越的想象力，尽管难以做到科学思维的严谨，但却是推广科学精神、启发问题意识的有效途径；比如我们在上文提到过的刘慈欣《朝闻道》中对“求真”理想的生动描述。 科幻小说数量比“科学哲学和科学史”、“科普”读物等还要庞大，做小说推荐的也很多了。这里只推荐一些公认的经典；直接从最有影响力的科幻作家，按照科幻小说的历史顺序开始阅读，一般问题不大： 科幻文学的奠基（19世纪末期）：凡尔纳：《海底两万里》、《从地球到月球》、《机器岛》等威尔斯：《时间机器》、《世界之战》、《隐形人》等科幻文学“黄金时代”（20世纪中期）：阿西莫夫：《基地》系列、《机器人》系列等克拉克：《天堂的喷泉》、《2001——太空漫游》、《与拉玛汇合》等海因莱因：《异乡异客》、《严厉的月亮》、《银河系公民》等当代中国的潮流（21世纪初叶）：刘慈欣：《三体》系列 对于真正的科幻迷， 这些作品多半是无法满足其胃口的，必然会延伸开去，主动探索。但仅从“科学”读物的角度，这些作品却也可以让一般读者了解科学幻想世界的奇趣与想象了。 （2）科幻电影 科幻电影的意义在极强的传播性与沉浸式体验。但公认的经典科幻电影其实没有想象中那么多，更多的还是爆米花电影。这里只列出了我认为思想性较高的3部，大家应该也很熟悉： 《2001：太空漫游》（2001: A Space Odyssey），1968年《银翼杀手》（Blade Runner），1982年《黑客帝国》三部曲（The Matrix），1999年 / 2003年 《2001：太空漫游》被称为科幻电影圣经，空灵与神秘是它的特点；《银翼杀手》对复制人主题、赛博朋克具有开创性；《黑客帝国》对现实存在的质疑，具有启发性。 这里也参考了上海交通大学江晓原教授主编的《科学败给迷信》（2007年）中科幻电影下的专题，有多位专家提供的观影列表，比如其中也包含刘慈欣的推荐，读者可以自行查看。更多的科幻电影赏析，可以参考豆瓣和IMDB的排行榜。 （3）对科幻的反思 科幻文学是一种大众文化，恢弘的想象与精密的科学逻辑是它广为传播的原因。但科幻在传播科学精神、启发思考的同时，也在带来一些新的挑战与机遇。 首先，科幻文学本身并无法帮助我们澄清“求真”的科学这一传统，相反对于大众认识科学的力量和社会意义是一种加强；科幻中对技术的强调常常高于科学，科幻也是“科学主义”一定程度上在文学影视中的投射。但我们还是需要肯定它在传播科学精神、启发问题意识、让更多人仰望星空这方面的作用。 其次，科幻与“未来学”有着十分密切的联系。媒体乐于报道某项现实发明曾经在某本科幻中有过预言。科幻确实也起到了吸引更多人思考未来问题的作用。甚至于未来学家也常常把科幻小说家视为自己的同道，如克拉克、阿西莫夫、奥尔迪斯等。这是科幻的想象力向未来延伸的结果，但也需警惕它影响未来的不可控的一面。 最后，正如科学与宗教的复杂关联，科幻与鬼神和宗教也有潜在的丰富的联系。例如，对于外星人的追寻与讨论，实际上与古代的鬼神志怪之说极为接近，意味着不可知却合理的某种设想。在宗教世俗化、鬼神被驱逐的现代，外星人取代了鬼神，成为人们怀疑、期盼和忧虑的对象。 卡尔·波普尔：from Wikipedia – Science | CC BY-SA 2.0 （未完待续）下一篇我们将继续追问科学实践在“构建（理论）体系”、“建立科学决策系统”、“传播科学技术文化与方法”三个层面的落地方案。在文章的最后一部分，我们会具体探讨“以人为本的科学教育”，如何针对不同的人群展开。 参考文献 李约瑟，《文明的滴定》陈嘉映，《哲学·科学·常识》吴国盛，《什么是科学》爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》亚里士多德，《形而上学》柏拉图，《理想国》刘慈欣，《朝闻道》@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》@honoru，《回應 @robertyan 的「未來教育學」》吴国盛，科学哲学与科学史书籍推荐江晓原等，《科学败给迷信》 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e5%9b%9b This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（四） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-1chj3yjqtx/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（五）","text":"在【未来教育学】成年人需要什么样的STEM教育？（一）和【未来教育学】成年人需要什么样的STEM教育？（二）中我们引出了问题“成年人需要什么样的STEM教育”，并从（1）希腊科学与近代科学的根源、（2）中国文明缺少“求真”的传统、（3）缺少科学精神带来的现实挑战，这三个方面，解释了成年人，尤其是中国成年人，为什么需要STEM教育？的原因。 在【未来教育学】成年人需要什么样的STEM教育？（三）和【未来教育学】成年人需要什么样的STEM教育？（四），我们具体讨论成年人需要什么STEM教育的问题。在（三）中，我们对其中的核心问题“科学精神与科学思想如何落地”展开了分析；在（四）中，我们讨论了科学读物与科学实践的关联，尤其是介绍了重要的科学读物。 在本文中，我们继续讨论成年人需要什么STEM教育的问题：承接（四）中未完成的对科学读物与科学实践的探讨，本文继续分析，作为对科学素质有追求的个人，我们如何进行科学实践。 成年人需要什么STEM教育？（What） 2. 科学读物与科学实践 前面3小节（读物1~3）主要讲哪些科学读物值得深入阅读（知），接下来继续谈以及如何真正亲身进行科学实践（行）的问题。 在“知”的层面，我们把注意力放在了“输入”，即对读物的选择上，并提供了三个层次的关于科学的结构解释 —— 底层（本质与根源）、中层（知识与识见）、表层（世俗与流行）。这好比树的“根”、“茎”、“叶”，依次生长，才能最终“开花”、“结果”；但对于如何“浇水”、“施肥”的问题（读物如何被接纳、吸收的问题），没有做深入的探讨。这一方面应该结合实际，通过科学实践来巩固，另一方面应当是“以人为本”、“因地制宜”的，对不同地区的不同人群，采用不同的策略；对于后者，我们在后一章“以人为本的科学教育”会进一步论述。 “行”是“知”的延续，也是真实的、内化的“知”的体现。科学实践是主动的行动，不是被动的接收知识。当前的未成年人的STEM教育提倡参与和实践，也是基于同样的思想。参与科学实践的意义，不在于让每个人都从事学术研究，而在于让“科学哲学和科学史”、“科学普及”、“科幻文学”背后的科学精神、思想与思维，可以结合具体的情景与问题转化为行动。行动是人性的外在体现，所以，也可以说，科学实践的目的在于让“自由-科学”的成为我们精神的一部分，却又不过分“科学化”，这一过程也分为底层、中层和表层。 实践1：构建（理论）体系 首先是科学实践的底层——构建（理论）体系，这也是智慧的构建。 “构建理论体系”看似是“知”的层面的问题，但真正有效的“体系”无一不是联系历史、结合现实世界、以及通过行动获得的认识构建的。我们前文罗列的科学读物是前人智慧的结晶与养料，不等于个人的“智慧体系”，唯有通过持续地观察、思考、提问、写作与行动，才能成就通达的“智慧”。所以，我们认为这是科学实践的基础。 （1）为什么需要“构建理论体系”？ 那么为什么要“构建理论体系”呢？其本质是对“自由-科学”传统的一种呼应；追求“理论体系”，是追求智慧、追求自由的具体方式，也就是苏格拉底说的“有知即有德”“无知即缺德”，对“真”的追求，“与真理为友”。 “体系”的传统来同样自于希腊理性科学，即欧几里得的公理化系统和演绎法，以“非功利”和“内在推演”为特征。中国古代的学问有很高的通融性和综合性，但在理论构建方面严格性和完整性不足，即便在今天的学术发展环境中，在本土产生的完整理论体系依然极少，其文化原因就是前文提到的中国没有“自由-科学”传统。 构建理论体系也有其功利效用，也无须否认。依据理论体系，面临问题时，作为个体或组织可以从基本的定义、公理、条件出发，推理得出正确的结论、或做出合理的决策等。用Elon Musk的话说，First Principles（中文媒体将其翻译为“第一性原理”）是帮助实现创新、认识事物真实情况的推理方法。First Principles意指类似于欧几里得几何学的“必然性推理”或演绎法。 （2）“构建理论体系”的方法 不同于收集“技术”与“技巧”的思维构建模式，“体系”的构建从基本的概念定义、历史起源、相互关联、辩证关系等出发，在理论层面构建结构牢固、逻辑自冾、没有内在矛盾的“体系”或“知识图谱”（knowledge graph）。体系建构在方向上可以包括深度建构和广度建构，如某专题的学术研究与实验，某学科的通识性了解，等等。 “理论体系”也是对“学问”的更具体的描述：通过“博学、审问、慎思、明辨、笃行”，追溯各理论领域的基本概念定义、公里通则、模型方法，并以此为基础扩展知识领域，以无知为耻，以学习、思考、提问为日常，以实验为方法，以数据为依据，以技术为助力，以写作为表达，以行动为依归，则理论体系可以日渐壮大。 这是我们提倡的科学实践的底层：理论体系 / 智慧的构建。 实践2：建立科学决策系统 接下来继续谈科学实践的中层——科学决策系统，这是对知识的运用。 （1）为什么要“建立科学决策系统”？ “决策”是日常随处可以的功利性行为。我们可以认为构建理论体系的目的，是为了决策或其他外在目的，也可以是为了“知识”本身。认为“体系”高于“决策”的，是求真的理想；认为“决策”高于“体系”的，是求力的理想。但无论哪一种，“理论体系”都可以对“决策系统”提供实在的帮助。这是所谓的“能做出选择，是自由；能做好决策，是智慧。” 这里以“决策”为切入点，也在于其普遍性与重要性。现代社会在教育、生产、消费各个层面都存在大量或重要、或频繁的决策，但决策盲从、短视、过于功利，是常见的误区，所谓的“科学决策系统”首要在于以科学思维方法进行价值判断与取舍。 （2）如何“建立科学决策系统”？ “决策科学”是一门需要结合自然科学和社会科学的综合性学科，对于跨学科的知识有较高要求，要求“理论体系”在广度达到一定水准。 决策不仅仅依赖于数理逻辑与“理论体系”，对于决策的目的、环境、信息、权威，都有显著的依赖；实践中，也可以运用决策支持系统（商业智能）、运筹学、机器学习、知识图谱、智能投顾等技术，借助机器的能力提高决策效率与准确度，降低决策成本。但最重要的依然是决策者的知识积累、模型运用、模式识别、领域直觉、事实分析、信息收集的能力。 正如巴菲特说到投资中“理性”与“智商”的比较： “成功的投资生涯不需要天才般的智商、非比寻常的经济眼光，或是内幕消息，需要的只是在做出投资决策时的正确思考框架，以及避免情绪失控保持理性思考的定力。我的成功并非源于高的智商，我认为最重要的是理性。我总是把智商和才能比作发动机的动力，但是输出功率，也就是工作的效率则取决于理性。” 比如，以购买不动产为例，我们可以通过数据分析了解哪些板块价值增幅高、保值性强、交通便利、设施齐全等等，但同样有较多信息需要通过房屋现场观察、社区人员素质的了解、对市场趋势的判断等进行综合分析，以及对本地区的金融史、宏观经济理论等的了解，如此才能做出较为合理的预测与购买决策。只看“价格”或“追涨杀跌”由于在决策上是极为片面的做法，存在较高的被割韭菜的风险。 对个人和组织而言，在最为关切的核心选择上，建立人机结合的决策模型，有重要的现实意义，包括战略目标、金融投资、选址（房产、商业地产）、人才培养（个人教育、员工招募与培训）等。在以上问题中，现有的基于数据和智能技术的决策支持系统还无法完全取代个人和专业智囊的判断，以支持、咨询、顾问、智囊、信息提供的形式为主，所以个人的自主独立的科学决策思维与直觉，仍是最主要的驱动力，这是对科学精神与思维方法（求知欲、数理逻辑、模型构建等）在日常中最有效的训练方法之一，并提供反馈、促进理论体系的完善。 这是我们提倡的科学实践的中层：科学决策系统 / 知识的运用。 实践3：传播科学文化与方法 最后我们谈科学实践的表层——传播科学文化与方法，这是信息的传播。 与前面两部分类似，我们还是从“我”出发进行讨论：即一个有一定教育水平的成年人可以如何参与“传播科学文化与方法”。 （1）为什么要传播科学文化与方法？ 实际上，无论是“构建理论体系”、“建立科学决策系统”，还是“传播科学文化与方法”，都不是必须的义务，只是个体可以追求的一种基于科学精神的实践。 那为什么仍然有必要进行科学传播呢？类比来说，如果我对商业或创业有很强的使命感，我可以极尽努力去学习所有的商业智慧、并创建一家有社会价值的企业，但同时也可以将我的商业思维和方法分享出去，帮助更多潜在的创业者通过商业能力帮助更多人；当然也可以认为这是我的机密，不愿意宣传。 开放和分享精神的价值首先在于利他、在于唤醒和帮助一些人，但同时对于分享者本身也有促进交流、获取建议、建立合作等实际的功利性的意义。无法否认的是，传播总是从浓度高的地方向浓度低的地方推进，越是具有科学思想与科学精神的人或者组织，进行开放和共享的意义也越大、动机也越强。 （2）科学传播的困难 面向社会进行科学传播，看似轻松愉快，其实挑战最多。 一方面，我们面临“科学崇拜”的局面，大众对科学顶礼膜拜、不容置疑；另一方面，大众对科学却误解颇深（“科”“技”不分、功利化、过分强调科学字面的“分科”的意思），在交流中面对许多潜意识层面的阻碍。这对希望推广真正的科学精神、澄清误解的传播者，和受社会文化影响颇深接受者都提出了很多挑战。 这带来的问题在于，公众的科学素养还不够高，为了解决这一问题常常下猛药，结果却是用了太多“技术文化”的思路来传播“科学”，结果便是南辕北辙，并在长期带来更多问题。 （3）科学传播的现实路径 传播科学文化与方法应当关注内容的“生产”、“传播”、“利用”等环节。 【媒介：深度与广度】 关于传播的内容，我们在“科学读物”这一节中做过一些不完整的总结，但没有深入讨论各种媒介的差异。在传播的媒介形式中，书籍、杂志、电视、互联网媒体、电影（尤其是科幻电影），是最为主要的。 现在的大众传媒的主要平台是电视和互联网，书本的阅读量和阅读率在各国都有显著下降，所以对科学知识普及型内容，也多以电视节目、互联网媒体较为流行，成为科学传播与大众互动的重点之一。如央视经常被吐槽的《走近科学》（被戏称为“走近伪科学”）、松鼠科学会、果壳网、知乎、微信公众号、抖音等。 以互联网为主体的科学传播，借助博客、公众号、播客、论坛等形式，增加了一定的互动性，使得原来单向的从科学界向大众传播的方式，变化为双向的互动与进展；这对于内容的传播者有很好的学习、激励、启发和促进的效果。例如，对于科学传播而言，目前互联网平台微信公众号（或Facebook）、抖音（或Youtube）、知乎（或Quora）等有更高的活跃度与更强的互动性。 近期火热的以《流浪地球》为代表的科幻电影，则是以电影为载体传播科学文化在中国的显著进展；其作用不在深层次的知识与思想普及，而在于问题意识、探索精神、仰望星空等方面的启发。但电视电影由于生产成本和专业程度相对较高，制作者相对较少。 另外，线下的课堂或者互动性的环境，也有很重要的帮助，但必须承认成人的参与度并不够高，如大学讲座、博物馆/科技馆/文化馆、商业机构或其他非营利机构组织的科学教育，这些方式对主导者的专业水准和组织能力有一定的要求。 总得来说，对于较为系统化、有深度的思想和科学传播，书籍依然有不可替代的作用，博客在互联网环境中属于有一定深度的传播媒介，面对面的线下环境需要考虑如何吸引更多成人参与的问题。对于强调受众广度的科学传播，互联网平台如微信公众号、抖音、知乎，以及电视电影是目前采用的主要渠道。 【内容：傲慢、偏见与无知】 我认为科学内容的生产，最大的挑战在于傲慢、偏见与无知。 “傲慢”是以“科学主义”为主要理念，高举“科学技术是第一生产力”、“实践是检验真理的唯一标准”等口号，把自己想象成“科学真理”教的传教士，以“科学家”或“专业人士”的权威，居高临下地传播知识，而不反思受众的需要。这是包裹的“科学”外衣的野蛮。 “偏见”是指以科学方法论为中心，反对对科学的批判和质疑。凡是不通过科学方法来评判的，都是“伪科学”；凡是“科学知识”，就一定是正确的知识。所谓的“求真、质疑、实证的科学精神”，则是用科学去质疑一切，却唯独不能质疑科学本身。唯“数理逻辑”至尊，“博物学传统”一文不名，等等。这是以“科学”为迷信。 “无知”则在于将反科学、无依据的理论进行大肆包装与传播，宣扬“气功”、“养生”等理论，又走向了“知识无用论”和“歪理邪说”的另一个极端。 凭借“傲慢与偏见”，以科学传播为名，却缺少对科学的反思，一定程度上反而阻碍了科学本身的进步与发展。“无知”则通常与有意的骗局相伴，为了达到传播的目的，故意捏造了吸引人的错误信息。 从正面来说，内容生产者应确保自身的公正包容的科学立场与正确的学术思想，切入的角度可以是科学精神、科学方法、科学史、科学与自然/社会/人文、科学前沿进展和基本科学知识等等。总的来说，具备反思能力的科学传播者，才能产出有意义的内容。 【受众：以人为本】 科学传播的受众应该是全体国民，而不仅仅是传统科普所针对的“青少年”/“未成年人”。科学传播的实行者也不再仅仅是科学家和教师，而是大众传媒与智识分子。 与“青少年”相比，成人的环境要复杂的多，传播者需要深入考察学习者的环境、挑战与需要，将传播的内容（无论是科学的文化、社会属性，还是具体的科学知识）与具体的接受者、使用者相匹配。当然，这样做也必定面对诸多挑战。 既然“科学”是一种人文，那么如同其他文化一样，是从生活的点滴，从观察、思考、交流、行为的各个层面体现出的。一个物理奥赛金牌获得者，未必需要在乘坐飞机师计算重力加速度的变化；一个精通数学知识的工程师，未必需要在工作中使用微积分；但科学精神与科学思维却可以在不同层面得到具体的应用。 所以，有深度、有人文情怀的科学传播，应当不停留在STEM（科学、技术、工程、知识）的表层，而是去深入挖掘其背后的人性价值与人性理想。不仅仅让受众感觉到科学的奇妙（近似于一种现代魔法），掌握科学的基本知识、了解科学的历史与社会影响、利用科学解释自然，更应当令学习者张开心灵，感受到科学背后“求真”、“自由”的人性之美，让人成为更完善的人。 “以人为本”是一个复杂的问题，我们会在本文的最后一部分，按照不同的人群具体分析这一问题。 这是我们提倡的科学实践的表层：传播科学文化与方法 / 信息的传播。 大型强子对撞机 | from Wikipedia – Science | CC BY-SA 2.0 （未完待续）在文章的最后一部分，我们会具体探讨“以人为本的科学教育”，如何针对不同的人群展开。 参考文献 李约瑟，《文明的滴定》陈嘉映，《哲学·科学·常识》吴国盛，《什么是科学》爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》亚里士多德，《形而上学》柏拉图，《理想国》刘慈欣，《朝闻道》@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》@honoru，《回應 @robertyan 的「未來教育學」》吴国盛，科学哲学与科学史书籍推荐吴国盛，原来“科普”、“科技传播”、“科学传播”是不一样的江晓原等，《科学败给迷信》 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e4%ba%94 This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（五） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-l5zrunwits/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（六）","text":"在【未来教育学】成年人需要什么样的STEM教育？（一）和【未来教育学】成年人需要什么样的STEM教育？（二）中我们引出了问题“成年人需要什么样的STEM教育”，并从（1）希腊科学与近代科学的根源、（2）中国文明缺少“求真”的传统、（3）缺少科学精神带来的现实挑战，这三个方面，解释了成年人，尤其是中国成年人，为什么需要STEM教育？的原因。 在【未来教育学】成年人需要什么样的STEM教育？（三）、【未来教育学】成年人需要什么样的STEM教育？（四）和【未来教育学】成年人需要什么样的STEM教育？（五）中，我们具体讨论成年人需要什么STEM教育的问题。在（三）中，我们对其中的核心问题“科学精神与科学思想如何落地”展开了分析；在（四）和（五）中，我们讨论了科学读物与科学实践的关联，并详细介绍了推荐的读物和可采取的实践。 在本文中，我们继续讨论成年人需要什么STEM教育的问题：以人为本的科学教育是如何针对不同人群展开。 成年人需要什么STEM教育？（What） 对于成年人需要什么STEM教育，我们在前面打过一个比方。“科学精神和科学思想”在于“播种”人性理想，科学读物和科学实践的三个层面分别对应科学之树的“根”、“茎”、“叶”，同时需要结合“亲身实践”与“以人为本”的教育，进行“浇水”、“施肥”，从自然与社会中汲取“阳光”、“雨露”，这棵科学之树，才能茁壮成长，造福世人。 接下来，我们继续谈如何“以人为本”地“浇水”、“施肥”。 3. 以人为本的科学教育 这是“成人需要什么STEM教育”的最后一章。 严格来说，前面两章的所写内容有一些拘谨，有些死板、太过干货，说教的味道重；但任何一项学习都需要有系统的基础，由根基打起，促进心灵与认知，并根据个人的兴趣与特质具体化、形象化、个性化（所谓“因材施教”）。有了前面的基础，我们继续讨论“因材施教”，才不会失之偏颇。 “科学”和“教育”：人性的舒展 话说回来，我极不喜欢“教育”这个词，“教”是师者传道授业解惑，“育”是培育保护，这都有违教育的本真。教育的本质在“学”（即自学、主动学习），而不是“教”；这在《论语》里体现得很明确：“学”出现了56次，“教”出现了7次。根据百度百科–教育词条，对词源的介绍：西方“educate”一词是内发之意。强调教育是一种顺其自然的活动，旨在把自然人所固有的或潜在的素质，自内而外引发出来，以成为现实的发展状态。“教育”的目的，应该是提供“土壤”、“阳光”、“雨露”，并引导树木向这自由、强健、伟大的未来，自主发展与探索；“树”也确实都是自己“长”出来的。（相比起来，“学校”一词尚能突出“学”的内涵。） “科学”的词源，我们在前文“什么是科学”一节中也曾重点解释。如果我们用严复对Science翻译的“格致”（即“格物致知”），就能更好地理解我们这里“科学教育”的内涵，即自主的、内在的对于“真”和”知“的探求。 不幸的是，这两个词的现代汉语，中国在晚清都采纳了日本学者翻译西方著作时所用的“科学”、“教育”的译法，竟遗祸至今。（此中国有识之士，当警醒慎思之问题；每思至此，莫不痛心于日本民族之狭隘、“康梁”之不察、严复之不成。） 所以，无论是“科学”还是“教育”，本意都应一种自发的、由内而外的人性舒展，但现在的“科学”和“教育”却都带有权威的意味。大众对于“科学”和“教育”的理解的极大扭曲，通过语言在潜意识层面的影响，加剧了现实中“求真”精神的稀缺。 所以，我们这里谈“科学教育”，尤其是针对成年人的科学教育，关键在于“启发”，希望谈的是如何启发人们以理性之心寻求真理，并走向实践。这帮助我们，回归科学和教育的本来面目。 STEM的一种观察：内在的人性理想 在进一步深入之前，我想再谈一下 @honoru 米高和夫人创办的iCare World的启示。米高 @honoru 在《STEM 教學與親子教育 (上篇 - 共兩篇)》中提到这一事业之核心在于： “要大家製作「親子遊戲」及「親子動畫」。再慢慢從中加插「積極正面的價值觀」”、“將「品格教育」結合「STEM」內容，成為我們活動核心 - 培訓「有品格的遊戲開發者 及 動畫師」” 我没有亲身参与iCare World的活动，仅从米高的描述来看，他们通过工程活动（游戏制作（如Unity 3D）、动画制作、App制作等）或使用工具的教育（使用IT技术/资讯技术等)，同时借助游戏化（Gamification）、社会化（如亲子活动）等方法，作为实际的活动内容，来启发或显现人性内在的美好（亲情、友情、协作、互助、责任、担当等等）。 工程和产品内在自然包含着一种人性的理想（“自由”、“平等”、“互利”、“协作”) 和为了人而设计的理念。借由非功利的工程和学习，将其内在的人性品质自然显现出来，这是iCare World可以成立的内在逻辑。这是一种充满温情和善意的公益教育模式，值得我们深入思考与学习。 从我的观察来看，iCare World主要针对的是STEM中的Engineering和Technology，较少涉及Science和Math。其原因在于： 一方面，工程和技术背后有着具体的技能、需要动手实践，这种技能本身足够有趣、有用，能满足参与者（如父母和孩子）的学习兴趣，而科学和数学在学校和课堂里已经被讲的足够多了，公益机构参与的意义没有那么显著；另一方面，相比“科学”，工程和技术对人与人之间协同、交流、互助的依赖性更高，这与中国的“仁爱”传统有着紧密的联系，有利于“品格”的塑造。 在iCare World的设计中，“非功利”也是十分重要的角色。如果这其中的工程和学习的活动，被添加了“功利”的色彩，例如参加考试、参与被官方认可的竞赛，其效果也必然受到一定影响。现代资本主义背景下的工厂与学校，都在一定程度上具有外在定义人的行为、扼制人的内在动力的倾向，这都某种程度上会阻碍“兴趣”的萌发与生长。 这里将 @honoru 米高的文章用来做佐证的原因，在于我在这一章谈到的“科学教育”的方案，事实上也建立在一种相同的逻辑之上：卸掉现代学校制度、商业教育机构、以及功利的社会心态加在“科学教育”之上的重重功利性负担，让它回归自己内在的对人性的期待。 学校教育的误区：批量生产 v.s. 娱乐至死 随着“大众教育”的普及，现代的成年人很多都经历过学校教育。学校教育被认为是教育的核心和主要模式，但这在历史上并非一直如此。“教育的普及”无疑是现代人类重要的成就，各国对教育的极度重视也是历史上不曾有过的，但同时也出现了两个极端的问题。 类型一是工业化教育，这与现代的工业化生产密切相关，将人明确分工，对人才提出明确的技能要求，随着这一压力推向学校，人也像产品一样被高效率地批量生产出来，以满足社会生产力发展的需要；另一方面，家长和孩子为了参与激烈的社会竞争，把满足应试要求、获得学历作为学习的核心目标，进一步压缩了“求知”的内在动力和好奇心。这是一种极端的填鸭式、功利式的教育倾向，“功利化”、“把人当成机器”是这种模式的主要问题。这是一种奥威尔式的《1984》的模式。 类型二是娱乐化教育，与电视、互联网等的普及有密切联系，随着媒体行业、娱乐业、游戏产业的发展，教育也被商品化，教育被要求必须是好玩、有趣、零门槛的。学生像看电视、听故事和玩游戏一般学习，教育者极尽所能地满足学生对趣味性的要求，却从不要求学习者深入思考。这也是波兹曼在《娱乐至死》中所揭露的问题，从商业到教育，“消费主义”盛行，以“消费者”的心态对待所有人，包括学生，其结果是扼杀内在的“学习主动性”和“思考能力”。学生看似课程轻松愉快，其实深度的思考能力已经在无形中破坏，很多商业的“兴趣班”也存在这类现象。这是赫胥黎式的《美丽新世界》的模式。 残酷的是，中国的教育过去曾经由于效法苏联模式，走了工业化教育的路线；当下，随着资本主义文化的侵蚀，又有娱乐化教育的危险。而无论这两种中的哪一类，都没有真正给学生以自由：前者抹杀了选择的自由、而后者腐蚀了思考的自由；前者的诡异很多人都能觉察到，而后者的伤害却更为隐蔽，“温水煮青蛙”。在这种学校教育环境下生长的青少年，扼杀了兴趣、消灭了志向，在成年之后就更难成为面对世界性挑战的英才。由学校标准化教育机制带来的全球化的教育危机，是当下值得重视的问题。 教育的目的在于“树木”的自主生长，“阳光”、“雨露”、“蓝天”、“白云”、“狂风”、“暴雨”是时代的自然与社会环境，粗暴的“剪枝”与“揠苗助长”固然不可取，谄媚、利诱的富营养化“浇水”、“施肥”同样令人窒息。 并非说学校教育已经没有出路了，但今天“成人”甚至“父母”在“科学精神”、“教育思维”等方面的种种问题，却是在其幼小时就种下了“因”的。要真正回答“成人需要什么STEM教育”的问题，必须同时从学校教育（K-12）去找解决之道；有鉴于“学校教育”问题铺陈开去较为庞大，这一章我们还是先从“成人教育”入手。 成人教育：成人需要什么教育？ 成人离开了“学校”这个小“社会”，却进入了社会与自然这个大“学校”。 近期有被叫做“知识付费”的商业模式非常火热，其本质是针对成人的知识产品，是对书籍、博客、电视、音频、视频的延伸和重新包装。但我不认为这是我们需要的“成人教育”，更无须说这种“知识付费”很多是打着“知识”旗号的娱乐化、碎片化的“教育”，把读博客、看说书、听故事当成学习。因为“教育”的本质在于“学”，而不在于“教”；知识付费模式成立的部分原因，就在于很多成年人不懂得如何自主学习、如何在实践中增长智慧。 成人教育的关键不在与“谁来教”、“教什么”，而在于怎么启发对“为什么学”、“学什么”、“怎么学”的思考与行动。 我们在前文论证了，成人需要真正了解科学的“本源”和“本质”（“自由-科学”（“自由-知识”）的传统）、了解科学精神和科学思想，掌握科学思维与科学方法、进行科学实践。具体来说，可以分为四个方面： 培养好奇心、理性思维与求真理想 体系化地追求（无用的）知识、构建理论体系运用于生活与工作实践、建立科学决策系统传播科学文化与方法 第1部分，解决“为什么学”的问题，启发“学问思辨行”的启动；第2~4部分，解决“学什么”和“怎么学”的问题。难点首先在于第1部分。 关于“启发”，我们希望启发的是真正的“人性”与“智慧”，而不是通过娱乐化的糖衣或“贿赂”让“不愿者上钩”。现实落地时，却一定程度上需要使用佛家的“方便法”（譬如禅宗对佛学的简化，较少约束，令更多人可以参与）、“因材施教”，让对方更容易接受观念；但即便初衷美好、向现实做了妥协，又需要控制“实施”不走向理想的反面，如“自由、平等、博爱”是如此，如“民主、科学”是如此，如“共产主义”也是如此。 下文将人以群分，针对“老人、职场人士、父母、青年学生、学者 / 智识分子”分别讨论如何“因材施教”、启发内在的“自由-科学”精神。 柏拉图的学院（Academy）| Source: Wikipedia – Education | CC BY-SA 2.0 （未完待续）在全文的最后一部分，我们讨论不同人群的“为什么学”、“学什么”和“怎么学”的问题。 参考文献 李约瑟，《文明的滴定》​陈嘉映，《哲学·科学·常识》​吴国盛，《什么是科学》​爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》​亚里士多德，《形而上学》​柏拉图，《理想国》​刘慈欣，《朝闻道》​@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》​@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》​@honoru，《回應 @robertyan 的「未來教育學」》​吴国盛，科学哲学与科学史书籍推荐​吴国盛，原来“科普”、“科技传播”、“科学传播”是不一样的​江晓原等，《科学败给迷信》​郑也夫，《吾国教育病理》​波兹曼，《娱乐至死》​ Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e5%85%ad This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（六） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-hxs3qrgf9g/"},{"title":"【未来教育学】成年人需要什么样的STEM教育？（七）","text":"在【未来教育学】成年人需要什么样的STEM教育？（一）和【未来教育学】成年人需要什么样的STEM教育？（二）中我们引出了问题“成年人需要什么样的STEM教育”，并从（1）希腊科学与近代科学的根源、（2）中国文明缺少“求真”的传统、（3）缺少科学精神带来的现实挑战，这三个方面，解释了成年人，尤其是中国成年人，为什么需要STEM教育？的原因。 在【未来教育学】成年人需要什么样的STEM教育？（三）、【未来教育学】成年人需要什么样的STEM教育？（四）、【未来教育学】成年人需要什么样的STEM教育？（五）和【未来教育学】成年人需要什么样的STEM教育？（六）中，我们具体讨论成年人需要什么STEM教育的问题。在（三）中，我们对其中的核心问题“科学精神与科学思想如何落地”展开了分析；在（四）和（五）中，我们讨论了科学读物与科学实践的关联，并详细介绍了推荐的读物和可采取的实践；在（六）中我们讨论了“以人为本的科学教育”的基本理念。 在本文中，我们继续讨论成年人需要什么STEM教育的问题：以人为本的科学教育应该如何针对不同的人群，采用合适的策略开展，回答“为什么学”、“学什么”和“怎么学”的问题。这是全文的最后一部分。 成年人需要什么STEM教育？（What） 3. 以人为本的科学教育 上文谈了“以人为本”的科学教育的内涵，这里继续谈如何人以群分地因材施教。 #1 老人 （1）为什么学：终极关怀 为了走向科学的本质，我们从老人谈起。对“老人”的定义未必有严格的生理上的年龄界限，但我们可以认为老人都面对一个共同的问题：“终极关怀”。 “终极关怀”，意指“源于人之存在的有限性，源于人之企盼生命存在的无限性，它是人类超越有限、追求无限以达到永恒的一种精神渴望”。“终极关怀”大体可以归于“神”、“真”和“义”：“神”即“宗教”赋予人的意义，“真”即对世界的真理的探求，“义”即“以天下为己任”、“为万世开太平”。当代中国人归于“神”（佛、道、耶）的有之，但并非文化主流；归于“义”，由于“仁爱”传统的影响，追寻者不少、实现却颇有困难；归于“真”，同样由于传统的关系，追随者太少、实现也不容易。大部分人趋利享乐，其中能谈得上终极关怀的，不是很多。 老年人面向人生的终点，对于“终极关怀”的思考相对更多。“神”、“真”和“义”未必有高下之别，但无疑的，“求真”在面对人生的终点 的问题上，可以是其中一种合理的选择。在离开世界前，真正认识了这个世界的永恒与丰富，是对人生意义的追寻方式之一。“自由-科学”为实现“真”提供了体系，因此“好奇心、理性思维与求真理想”可以在老人身上萌发，这至少可以回答老人的“为什么学”的问题。 如西塞罗在《论老年》中所言：老年依然可以参与政治生活及其他很多事物，老年虽然体力衰退、感官快乐减少，却更有理智；…… 这种快乐（写作、演讲等）完全是一种求知的乐趣，对于理智、受过良好教育的人来说，这种快乐是随着他们年龄的增长而增强的。（《论老年》中还有许多其他对老年的的深刻论述，值得思考。） “家有一老，如有一宝”，老人的生活、事业和社会智慧，是有实际的启发作用和战略指导意义的；给年轻人的经验与鞭策，是有的放矢的。所以，除了“求真”的意义，老年人的智慧对于自己和影响范围内的实际生活，也有实用的（功利性的）帮助。 然而，如何正确地传达这种对“求真”的“终极关怀”的理解，并非易事；本文此处只能指出大略的方向。对于更多具体性的商业化、产品化的媒体宣传与市场推广的实现过程，值得我们在更多文章或社会实践（老年大学、社会企业、公益组织等）中进一步具体讨论。 （2）学什么和怎么学：“快乐之学” 前文我们批判了“娱乐化教育”，但我们不反对“快乐之学”。我们反对的是人为设计的、以取悦学习者、通过游戏来“贿赂”和“利诱”学习者的“娱乐化”教育，但不反对自发自主的快乐之学，于老人便更是如此。 “快乐之学”应当以自发的、内在的兴趣（好奇心）的出发点，同时辅之以科学精神的“理性思维”方法，以真理为依归、以传播智慧为乐。 今天的老年大学，开设的课程，如养生、健身、语言、书画、摄影、音乐、戏曲等，与兴趣班接近，加之社交的功能，受到许多老人的喜爱。但这其中“理性”、“真理”、“智慧”的生存空间并不大，“娱乐”多于“真理”。 以兴趣驱动的求真之学，未必需要以老年大学为依托，独自便可以开展；但也可以存在较松散的俱乐部、社团或大学，交流与互相学习。如金庸之求学于剑桥与北大，可为一例。“快乐之学”未必需要有严肃的学术规范，但凭热烈的求知之心，可以行到什么程度便是程度，已是甚好；当然能维持高水准、与当世的前沿学术有所交流甚至引领潮流，也未必不可。 “兴趣”是较个人的事情，文、理、工、农、医、商、教育、艺术、法政等等，皆可入手，但方法上总难以离开读书或文献、观察和解释自然和社会、思考推理、分析实验、社会实践、与他人交流等等，在这些方面，很多仍然是老人的智慧与体力可以实行的。（我们在上一节提到的科学教育的四个方面、与前一章推荐的科学读物，也可以作为参考。） 在老年，能以“真”为乐，“活到老、学到老”，又何尝不是一种幸事呢？ #2 职场人士 （1）为什么学：“科学决策” 我们在“科学实践——实践2：建立科学决策系统”这一节中解释过科学决策系统的重要性。我们在这里用“学会决策”作为一种“方便法”来吸引“职场人士”的关注，也是基于他们对于决策的强烈需要与决策能力不足这一矛盾的观察。 决策的主题可以包括投资、教育、房产、战略等多个维度，越是重大的决策，越是容易摸不着头脑。在“知识付费”的热潮里，各种传播科普知识、技能、方法论、致富之道、教育宝典的课程很多，但无论哪一种都无法取代个人在面对决策时的思考、提供的可转化为行动的指导极少。究其原因，一方面是决策和技能类似，需要在实践中学习（learning by doing），另一方面重要的复杂的决策都受到多方面因素的影响，缺乏对整体世界的观察和理解，是无法独立思考、完成高质量决策的。 决策依赖于对数理逻辑、“理论体系”、和复杂世界观测的综合把握，如果缺乏对“无用之学”的兴趣，加之现代世界分工的严密与专业化，往往令人陷入自我限定的狭小世界中，于是难以真正做出有效决策。当然，决策未必与商业有关，也可能关乎健康、关乎公益、关乎情感、关乎人类命运与前途。 从另一个方面来讲，我们引用很多职场人士崇拜的乔布斯笃信的一句话：“如果你把每一天都当成生命里的最后一天，你将在这一天发现，原来一切皆在掌握之中。” （来自史蒂夫·乔布斯在斯坦福大学毕业典礼的演讲）如果职场人士愿意认同“真”是一种“终极关怀”的话，并且他真的理解了乔布斯的话的内涵，那么“真”至少也可以是他每天生活的一部分。这也是为什么我们先从“老人”开始谈起的原因，从终点向前看，我们或许能看得更清晰。 （2）学什么和怎么学：“无用之学” 曾经有人向欧几里得学习几何学，学习几日后问老师所学的知识有什么用，欧几里得闻言大怒，“竟想跟我说有用之学，我从来都只教无用之学”，遂将学生逐出。希腊理性科学的传统，以“无用之学”为理想，“知识”的目的就是它本身。以“利”（金钱、权力）和“力”（技术、方法）为追求的职场人士恐怕很难理解这一点。 但要真正的学会给难题做决策，就不能仅仅学习以满足工作需要为目的的“专业技能”、或者赚钱的“方法论”，必须跳出“井底”，对世界的本质和本源进行观察，了解世界和历史的运行规律，跨越时空与先贤对话。要构建对于客观世界的观察和自己的“理论体系”（参见“科学实践——实践2：建立科学决策系统”一节），需要掌握历史、文化、自然科学等无用之学（而非仅仅是更流行的编程、金融、心理等），并结合职场人士在专业领域的专业知识与技能，在更高维度做出正确的决策，比如新能源企业的战略与产业结构变化的匹配、比如苹果公司对个人电脑的开创性设计。 所以，即便为了在现实中“求力”，职场人士也应该了解“自由-科学”的含义，多了解一些“无用之学”。 #3 父母 （1）为什么学：生命教育和灵魂教育 中年人白天是“职场人士”，到了晚上或者周末就要扮演“父母”的角色。作为父母的角色，也容易被“实用主义”的现实裹挟。比如，让孩子参加大量兴趣班、培训班、补习班，以“抢跑”为荣，一切唯“分数”、“升学”论，但同时将教育的责任推给学校和培训班，自身的思考和陪伴却远远不够。最值得警惕的是，缺乏对“生命教育”和“灵魂教育”的思考。 这里对“生命教育”和“灵魂教育”做如下考察： 生命教育：指帮助孩子实现生命的价值，表现为对生命的尊重、有意义地度过一生。“自由-科学”传统的本意是对内在的“本性”的尊重，使人可以获得真正的“自由”；即我们在“老人”这一部分已经叙述过的“终极关怀”，从这个角度，父母有必要了解科学的真正的含义。 灵魂教育：柏拉图在《理想国》中将灵魂分为理智、意志和欲望（也称知、情、意）；理智统御“意志”和“欲望”，转化为智慧和勇气。灵魂教育的意义在于，令人获得真正的智慧、勇敢的气魄、充沛的情感，同时懂得节制欲望，既是德育、也是智育和美育。孩子智慧的获取，离不开好奇心、理性思维与求真理想，而脱离智慧的勇敢与情感，则是盲目和可怕的。 因此，为了让孩子在生命与灵魂上有更深入的理解，父母也应当关心科学精神（当然还需理解情感、仁爱等），而不仅仅是表面的数学和科学的应试功能。 （2）学什么和怎么学：“身教”大于言传 为了让孩子掌握真正的“自由-科学”的精神，最根本的做法在于家长的“身教”。让家长自身成为一个有问题意识、会主动学习、能独立思考、关心世界、善于思辨与推理分析之人，掌握健全的知识体系，养成理性科学的决策能力，并向更多人传播科学文化，若能如此，孩子必能习以为常、切身了解到“科学”和“教育”对人性的意味之所在。 如果父母仍然无从着手，可以回退到上一节的“无用之学”以及老人的“快乐之学”去寻找答案，先从改变自己开始，改善孩子生长的家庭环境土壤。这实际上也是对现代学校教育制度的一种补充和改善。 #4 青年学生 （1）为什么学：“自由”与“仁爱” 接下来我们谈“青年”，尤其是大学生。大学教育的意义不在于掌握谋生的“专业技能”，而在于为成为未来的世界领袖奠定基石。这基石在于对生命的思考、对未来的选择、对品格的锤炼、对能力的锻造。 青年不妨回到我们在前文提到的老人的立场，或者乔布斯的“把每天当做生命的最后一天”的视角，去了解自己的终极关怀，回归人性的理想，并养成宽厚、仁人、超然的品格，获得自由的“学习”与“思考”能力，鞭策自己找到真正的志向，这是成为“一流”人物的前提。“自由”是这样的一种志向，它通往“真”；“仁爱”也是这样的一种志向，它通往“善”（也就是“仁”和“义”）。 但无论“志向”还是“品格”、或“学习”与“思考”能力，都不是通过被动灌输知识可以获得的，无一不是通过在现实中的实践与磨练，通过日复一日的提问与思考，逐渐养成。如果青年不满足仅做一个没有独立人格的“螺丝钉”，就应该去尝试回到“自由”与“仁爱”的源头，建立宽广的知识视野，养成宽广的胸怀，获得真正的自由，成为“仁爱”之人。 （2）学什么和怎么学：“自由教育” 这种方案其实在大学已经存在了，只是有待改进，这就是“自由教育”（liberal education，也叫博雅教育或通识教育）。自由教育起源于柏拉图和亚里士多德时期，有“自由七艺”的传统，强调的是传授所谓的“无用的知识”，如古典文学、古代历史、哲学传统等等。与之相对的是“专业教育”（professional education），以传授实用的知识为主。 “自由教育”倡导与伟大心灵的交谈，可谓是西方的“国学”。今天中国大陆的许多所谓“国学”班却走向了培养“礼”和“顺从”的误区，却没有促成学生与包括“仁爱”在内的诸子的传统的对话与思辨。中国的“自由教育”，应当一方面，通过真正教授“国学”（中国的和西方的），帮助学生作为一个中国人反思自己“从何而来”，找到自身在历史和世界中的位置；另一方面，使得学生以此为基础，保持开放的心态，广泛地阅读、思考和交流。 作为结果，经历过“自由教育”的学生，应该学会如何读书、如何思考和如何写作，尤其是非功利的、以思想的成长为目的的读书、思考与写作。郑也夫教授在“我们怎样读书、怎样思考”中对此给出了更多的建议，可以作为参考。 #5 学者 / 智识分子 （1）为什么学：“为天地立心，为生民立命，为往圣继绝学，为万世开太平” 青年可以成长为职场人士和父母，可以渐渐老去成为老人；或许她/他也会成为政治家、军事家、科学家、思想家，或者成为真正的英雄。 文化是人类的生物优势。从近代来看，历史的真正推动者大多是文化、科学、技术和制度领域精英。对于“历史是由人民大众决定”，这是在民主浪潮下的粉饰之言。我们无需否认大众的价值，但真正的历史是由少数人萌芽，而最终慢慢演变成大众的，科学革命是如此、儒学兴起也是如此。人类的真正的智慧在开始时总是少数，在不断变化的环境的自然选择之中，才导致变异的文化逐渐占据主流；“时势造英雄，英雄也造时势”。所以，我们应当重视“精英史观”与“英雄史观”，这与现代的平等、民主观念并不矛盾。 作为真正有志于成为英雄的“学术研究者”（学者）或者自认为智慧和见识在人类中属于卓越者（智识分子），更应对此有高度的自觉。张横渠的“为天地立心，为生民立命，为往圣继绝学，为万世开太平”，是对这精神的最好阐释。从现代的意义上来看，“为天地立心”既包含了“人”/“仁”的内涵，也可以容纳“求真”的精神，这也表明了“自由”与“仁爱”统一的一面；同时，为了实现“横渠四句”的理想，非有大无畏的“求知”精神与仁人之心不可，此乃“智仁勇”的相统一。文明之脊梁者，莫不如是。 （2）学什么和怎么学：解决真正的问题 今天的学者与智识分子，在功利的浪潮之中，有许多困于功利、损坏风气，或者面临生活艰辛的滋扰。即便几年来学者的经济条件已有所改善，但要养足胸中“求真”的浩然之气，却仍然不易。学者与智识分子应当努力成为时代的智者。 人类的历史是不断由挑战与进步推动的。智者的意义，在于识别出当前时代中的重要问题，并有勇气、智慧与耐心去克服他们。“地心说”与“日心说”是这样的挑战，哥白尼、伽利略、笛卡尔、牛顿等构建了数理实验科学的基础，完成了近代科学革命；儒学的衰弱是这样的挑战，周敦颐、张横渠、程颢、程颐等“为天地立心，为生民立命，为往圣继绝学，为万世开太平”，推动了儒学再兴。 成长中的学者与智识分子，应当保有此种使命感。至于诺贝尔奖，也不过是外在的荣耀；真正的解决问题者，历史自能评判之。 以上几者的关联 最后，补充一下以上几者的关系，令读者可知其内在逻辑： “老年”是“成人”的终点，我们以“向死而生”的视角，思考“求真”的意义。“青年”是“成人”的起点，所以我们更多是谈论如何在早期打好“求真”的基础，使一生受益。“职场”和“父母”是脱离青年与进入老年之间的生活（也叫“中年”）的两面，是“求真”有现实意义、但也面临危机的时刻。“学者 / 智者”是一种精英史观的视角，这世界需要有人担当的“智慧”的责任，令文化的基因（习俗、制度、技术、科学等）在时间与空间中继承、变异、演化、发展。 联合国 科学-政策-商业 论坛：from Wikipedia – Science | CC BY-SA 2.0 总结 在本文《成年人需要什么样的STEM教育？》中，我们着重分析了两个问题： 成年人为什么需要STEM教育：从历史根源、文化差异、现实挑战三个方面，分析了科学教育的必要性。成年人需要什么STEM教育：用植树做比方，“科学精神与科学思想”在于“播种”求真的人性理想，“科学读物与科学实践”分析了在显示的“知与行”的层面“根、茎、叶”的构造、“以人为本的科学教育”则讨论了如何“栽培、浇水、施肥”的问题。 写在最后 对于“成年人需要什么样的STEM教育？”的问题，我们暂时告一段落。对这个问题本身的回答也远远没有完成，只是刚刚起步；在这个领域我并非有深入思考的专才，所谈也必多有疏漏。 但我们认为，在这个时代追问“自由-科学”的传统，却命中了这个世界的核心，“一石激起千层浪”。在“五四运动”100年之际，再次回顾“科学”的问题，似乎也有着特殊的意义。以此为出发点，我们可以延伸出更多的问题，值得当代中国文明深刻反思，并指引我们“鞠躬尽瘁”，向着下一个“轴心时代”前行。 同时，必须承认，追寻苏格拉底的“求真”理想，在当今天下，是一条艰难的道路。在灵魂的“理智、意志与欲望”之间，我们会选择走向哪一个方面，我们仍难以笃定地预料。但我愿意相信，“求真”的理想自有其存在的本质的意义，正如陈寅恪先生在《清华大学王观堂先生纪念碑铭》中所说：“来世不可知也，先生之著述，或有时而不彰。先生之学说，或有时而可商。惟此独立之精神，自由之思想，历千万祀，与天壤而同久，共三光而永光。” 最后，试枚举与此文相关的话题。我们在未来可以进一步论述： “逾越政治的价值秩序”是否可能建立：在今天政治获得了自主性并尝试指挥一切的社会中，是否有可能建立“求真”的价值理想（或与“求真”同等地位的价值秩序），同时使得政治回归到手段而不是目的？社会科学的教育问题：我们常把“科学”默认为自然科学，对于近代发展起来的社会科学，未来应怎样融入不同人群的教育？除了STEM，我们还需要什么？技术和商业精神的反思：今天的技术与商业文化，已经蓬勃发展起来，但如何避免其有害的一面、补足其不足的方面，是使“求力”的社会不至于崩溃、或者陷入赫胥黎的“美丽新世界”所需要思考的。日译汉语的文化与社会影响：“科学”、“自由”、“社会”等词都是晚清的日本学者用汉语翻译的，有些翻译今天看来不见得很好，这些词语的理解和运用对我们思维的潜意识和社会面貌存在哪些影响？“自由”与“仁爱”的传统如何共处与交融，是我们面对的时代命题，结合当下的文化、经济、技术的发展，在未来的几十年到两百年间，人类是否会迎来一个新的轴心时代？思想混乱、信仰缺失的社会文化局面，如何突围？科学基础问题：今天的科学大厦的基础是牢固的吗？归纳法的自身缺陷如何克服？夸大一点说，能否在未来建立一种真正广泛连通自然科学与社会科学的紧密而完善的科学基础？是所谓的数理逻辑+大数据吗？？除了“科学”，还有哪些时代的核心词汇是现代中国人含混不清的？“自由”、“平等”、“民主”、“法治”、“封建”、“哲学”、“形而上学”？似乎都是，而且还有很多。澄清概念、反思根源，这也是今天哲学的意义所在。面对人类文明成果的急剧增长，教育学如何应对这一问题？知识的快速增长发生在所有的科学领域，而互联网时代的信息爆炸与娱乐倾向又进一步压缩了人们的注意力，加剧了这一问题。如何帮助未来的人类在具有好奇心的同时，不被好奇心吞噬，是个巨大的挑战。 参考文献 李约瑟，《文明的滴定》陈嘉映，《哲学·科学·常识》吴国盛，《什么是科学》爱因斯坦，《探索的动机 —— 在普朗克生日会上的演讲》亚里士多德，《形而上学》柏拉图，《理想国》刘慈欣，《朝闻道》@honoru，《我也想寫STEM文章，但無從入手？有甚麼方法？》@honoru，《STEM 教學與親子教育 (上篇 - 共兩篇)》@honoru，《回應 @robertyan 的「未來教育學」》吴国盛，科学哲学与科学史书籍推荐吴国盛，原来“科普”、“科技传播”、“科学传播”是不一样的江晓原等，《科学败给迷信》郑也夫，《吾国教育病理》波兹曼，《娱乐至死》西塞罗，《论老年》郑也夫，“我们怎样读书、怎样思考”马一浮，“横渠先生四句教发微”史蒂夫·乔布斯，在斯坦福大学毕业典礼的演讲 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e3%80%90%e6%9c%aa%e6%9d%a5%e6%95%99%e8%82%b2%e5%ad%a6%e3%80%91%e6%88%90%e5%b9%b4%e4%ba%ba%e9%9c%80%e8%a6%81%e4%bb%80%e4%b9%88%e6%a0%b7%e7%9a%84stem%e6%95%99%e8%82%b2%ef%bc%9f%ef%bc%88%e4%b8%83 This page is synchronized from the post: 【未来教育学】成年人需要什么样的STEM教育？（七） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/stem-w711lx53tn/"},{"title":"标签的本质 | The Nature of Tags（一）","text":"引子：了解Steem，从标签开始 1. 标签与新人 对于初来steem的新人来说，标签（tags）是必须理解、但却不能完全理解的概念。 我们一旦开始发第一篇文章，就必须选择合适的标签。新手大概有几种常见的情况： 有的用户会发布自己擅长的内容，根据自己以往的经验，输入文章内容相关联的标签；或者看到steemit的热门标签，从奖励高或者特定的热门标签中选择自己了解的，来发布相关的内容，比如introduceyourself、life、photography、travel、film、food等；或者中文用户看到cn标签，发现里面全是中文内容、很有意思，于是用来发布中文文章；kr、jp、fr等标签也类似。 第一类是内容导向，根据内容生成标签；第二类是目的导向，根据功利或兴趣选择标签；第三类是语言或地区导向，根据习惯语言或者居住地选择标签。这些都很符合直觉，第一类可以保证标签是与内容相匹配的，第二类可以将帖子与奖励和兴趣相匹配，第三类将帖子与非英语语言和国别相匹配。虽然其中存在一些重叠，但只有充分结合这三者，才能真正掌握标签的使用。 对于标签的使用，可谓“易学难精”，添加一个标签的操作看似容易，但要选择合适自己的帖子内容的标签，需要对标签的内涵、意义与价值有更深入的理解。很多人初来steem，都是被其功利性的外衣（加密货币）所吸引，所以将大量的学习精力放在了解其加密货币特征上，这并没有错，但不全面，甚至可能一无所获。究其原因，是由于新人往往不了解steem的社交内涵；而不了解标签的意义，是不了解steem的社交含义的外在表现。 2. 标签与势力 我以为steem的三大支柱（the three pillars of steem）是： 包含区块链技术在内的分布式web和数据基础设施；以标签为代表特征的社交网络系统；steem独有的货币设计与经济系统； 以此为基础，可以创建客户端、工具、博客、视频、音乐、问答、游戏等等各类应用，或形成各类社区、组织、甚至盈利性公司。凡是达成一定规模的，其明显标志之一便在于其本身的标签、或其支持的标签被大量的使用。最主要的有： 客户端：比如#partiko、#esteem、#busy，都有意鼓励自身标签的使用dApp：比如#utopian-io、#dtube、#drugwars，一旦应用流行起来其标签便被大量使用组织：比如#cn、#team-cn、#votovzla、#steemitbloggers，虽然不一定有软件可以使用，却借用其他工具实现了对群体的聚拢，形成合力。 有趣的是，这三类基于steem的构建，分别对应到steem的三大支柱： 客户端和工具等，主要是基于技术的构建，提供或强化了技术基础设施，网页、移动或桌面客户端。上面几个案例#partiko、#esteem、#busy，包括#steempress、#steemplus等工具在内，都是如此。dApp从表面看似乎是提供了新的内容发布方式，但其相比于其他同类产品的差异性和创新性常常在于经济激励。比如dtube对发布视频的激励、utopian对开源代码的激励。社区组织看似什么都没做，但实际上是实现了对人群的构建，形成了强有力的社区。#cn本身并不天然具有群体的凝聚力，但基于#cn社区，利用微信、QQ等群体管理工具实现的半开放组织，却增加了社交的紧密度。 这三种构建方式，由于其得到社区的广泛支持，经常能够得到大量代理，并给代理者、支持者和使用者提供实在的回报，从而进一步巩固了其在社区中的价值。围绕其的多方利益相关者及其行为，渐渐的形成社区中的一股股势力。 需要特别提一下的是容易被忽视的组织：之前@theycallmedan的SP竞赛中，#team-cn、#votovzla、#steemitbloggers这三股力量在平时看来并不那么流行，但在需要依靠凝聚力和号召力的竞赛中却同时脱颖而出，原因在于他们的服务对象主要在内部（尤其是#team-cn和#votovzla），有时不具有显性的对外扩张动机，甚至也不在意推广本身标签的使用。比如，@team-cn的目的在于让CN社区更有生命力，所以是#cn标签的活跃度（而不是#team-cn）与@team-cn的努力正相关。 热门标签，要么来自于以上这三种势力，要么是主题或兴趣相关的频道（life、photography、travel、film、food、introduceyourself），要么是语言类频道（cn、kr、jp、spanish、deutch）。所以，通常来说，热门的标签，或者是背后的势力强大，或者是已经有了很多爱好者，这两者往往相互促进。 主题或兴趣相关频道涉及较为开放和宽泛，背后的支持力量不明确，所以虽然人气很高，但在势力的力量上有时反而不如上面三种。语言类频道，本身既是语言，也可能是组织；比如CN，本身是文章内容使用的语言（中文），也可以是使用该语言的人的组织（华人社区）。语言频道的强弱与其背后的组织势力的兴衰也存在密切的联系，比如@oflyhigh在#cn 标签不见了中提到，曾经的CN区由于@abit和@ned的支持而强大，也由于支持的消退而势微。 更有意思的是，有些势力根本不使用标签，或者即使有标签也并不鼓励使用。比如steemit inc.就不需要自己的标签，因为它至少过去承担政府的角色，希望对整个平台的运行负责；它今天开始放权，组织议会，就更加不需要被人提及。又比如steemcleaners扮演的执法角色，反对作品抄袭，也主要不在于标签的使用，而在于暗中的支持。或许也有一些黑社会组织或地痞流氓，他们横行霸道，也未必需要标签。 对于新人来说，常常不了解以上这几类势力和他们相关的标签的存在。好比一个初入武侠世界，以为天大地大，不知天高地厚，没有打算依赖任何门派和师承的新手，或者误打误撞跑到别的门派的地盘上去发拜帖，却完全不懂规矩，于是横冲直撞、处处碰壁、鼻青脸肿、一无所成。当然，自带身家和绝学的人民币玩家，可能可以一出道就呼风唤雨，但独行侠也往往不是一帆风顺的。 3. 为什么谈标签？ 其实看了上面的描述，大体也能理解我们在本文谈标签的原因所在。但这里还是具体给些解释。 （1）新人需要掌握标签的“道”和“术” 现在新人学习steem，常常从操作和技巧开始，这并没有什么问题。但要更进一步，融入社区，则要对steem的本质有更清晰的领悟。 关于标签的用途和使用方法在《Steem指南》的1.6.4、2.8、7.1等章节中都有所介绍。另外下面几篇文章（应该还有更多），也介绍了标签的概念和使用技巧，可以作为大家的参考和学习。 @woolfe19861008， 《Steem 指南》 中级篇 | 善用标签上：标签的基本概念介绍@woolfe19861008， 《Steem 指南》 中级篇 | 善用标签下：新手初到Steemit常用的一些标签@cherryzz，寻宝活动–tag标签(第一周10个标签）@ericet，如果我是一条小鱼（下）新手指南 感谢以上文章的作者贡献的智慧。但我认为这些介绍一定程度上都停留于技巧的层面，对于背后的原理和社会本质缺乏透视性观察；这是本文不从“术”着手、而从“道”着眼的原因所在。 理解steem的三大支柱，就能通过演绎法，从底向上去了解steem的运行规则；如果仅仅是停留于技巧，那么仅仅是看到steem的表面，而忽视了其核心。介绍steem的技术和经济，想必已经有很多文章，但关于社交的问题，我觉得通过标签来“格物致知”是最能了解其本质的。 读懂标签，就是读懂steem内的江湖与人心、读懂社区的运行规则、读懂技术的变迁，对于steem社交原理与变化的内涵，至少能读懂一大半。对于steem上的各种现象和怪现象，也能够通晓一二。 这里顺带简要谈一下《Steem指南》的问题。我们需要《Steem指南》的本质原因在于Steem内在的复杂性与多样性，需要提供一种学习方式帮助新人有效、快速地理解与融入社区（实际上世界上其他的社交网络也都不简单，只是作为普通用户不解其中味而已）。《Steem指南》着实帮助了大量的新人深入了解Steem，但随着时间的发展其内容缺乏有效更新与互动反馈，生命力在逐渐衰弱。另一方面，我们看到，@team-cn 新手村依旧能切实帮助到新人，并形成了很强的互动性。这原因在于新人既需要一本武林秘籍，同时也需要一个可以信赖的门派（学校）。而一旦武林秘籍和门派（学校）的关联度降低的时候，在路边捡到静态的、乃至过时的剑法和心法也未必能被新人真正掌握了。所以，从这个意义上来说，新人不仅仅需要一份攻略，更需要一个学校（事实上是学习、社交、娱乐和活动的场所）。 最近，在得到@dapeng大鹏的认可后，@elizacheng @ericet @julian2013 @m18207319997 @minloulou @olymim @robertyan 对《Steem指南》的现有版本做了审核，大致确定了对其进行修改的范围，并将在近期邀请大家参与修订和编辑工作。毫无疑问，此次对《Steem指南》的修订和维护工作是站在CN社区内创作者们，以及@dapeng、@maiyude等编辑的巨人之肩膀上完成的，其未来的生命力也取决于CN区本身的生命力。同时，这一使命（mission）将促进《Steem指南》#steem-guies和新手村@team-cn的工作的融合（即攻略和学校的融合，是书写文字与多元交流的结合）。对于更具体的内容，我们会在之后发布相应的计划与参与方式。欢迎关注并参与《Steem指南》的修订工作和长期发展！ 此外，需要说明的是，本文对标签（tags）问题的讨论，并非是对《Steem指南》的投稿。但正如上文提到的，从标签出发，是深入了解在Steem中如何写作、社交，了解社区活动和dApp的一个切入点，也是重新审视《Steem指南》的一个视角，对于新人而言，是有所裨益的。 帮助新人从“道”上理解标签（tags）、掌握steem，这是本文的目的之一。 （2）CN区再次崛起的逻辑@oflyhigh在#cn 标签不见了中提到#cn标签曾经火热的历史原因，即见证人@abit和创始人@ned的支持。他们对CN区的支持其部分原因是在于对华人在区块链世界中的贡献的认可，也是对华人广阔用户基数的期望，抑或包含对同文同种的同胞的支持。但这种支持在逻辑上并非完美的，代理可以撤销、见证人可以隐退，如果CN区仅仅依赖这些不确定的强力而食其利，毫无疑问随时具有倾颓的可能。 相比之下#kr社区（韩国、南朝鲜、南高丽）表现出了强大的动力，尤其是出自#kr社区的大量dApp，推动了steem社区（至少表面）的繁荣。但我尚不清楚KR社区的历史及其火热的内在逻辑，这有待于我们在后面的分析中进一步挖掘，但毫无疑问KR社区的历史经验值得CN社区的主导者们深入学习，见贤思齐、见不肖而内自省。 基于上面的一些事实，我猜想标签的起落有其内在的逻辑：初期客户端、应用类的标签较少，以文化、语言、地区为主的标签最容易形成，并具有同语言圈、文化圈和地区内的扩张性，而随着新的社会构建与势力的形成，旧的文化/语言/地区社区的影响力必然受到一定影响。除非文化/语言/地区社区能够成为支持新的势力构建的基石，并不断孵化新的自带造血功能的标签/势力，否则其衰退或将不可避免，KR区的崛起、CN区的衰退可能可以作为一组例证。当然，CN区依然出现了大量有价值的应用，如#partiko、#wherein等，但相比起来，对全社区的辐射作用似乎不足，内敛胜于扩张。 如果上面的逻辑不错，CN区希望再次崛起或许依赖于更多、更有价值的由CN区生长出的标签，这包括cn-或-cn类标签（通常为CN区活动、或全局标签的本地化），以及不带有cn的更通用的标签的出现。 为了实现这一点，我们或许需要一个植根于CN区的标签孵化器和投资机构（Tags Incubator），借助CN区和外部力量，整合社区内外的智力、财力和社会资源，孵化更多有助于Steem、甚至有利于全人类的创新应用、工具、组织和活动。这里可能涉及到资源的质量与数量、条件的成熟度，以及“蛋”和“鸡”的关系，等等。另外，由于网络政策的影响，CN区用户的增长遇到一定困难，但即便如此，海外华人5000万以上的体量，也未必不可有所作为；而且，又何须只盯着华人用户呢？ 关于这一问题，我们或许无法在后面的论述中做太深入的分析，但希望根据标签热度的历史性变迁规律做一些仔细的考察，如KR与CN区的横向比较。但即使我们无法提供真正的解决方案，只是引起这个话题本身，也达到此文的目的了。 最后，我们或许也可以一问，如果CN区真的衰落了，我们是否还有必要让它重新崛起呢？为什么#cn必须成为热门呢？其实也未必。但感情上、信念上，我们依然希望CN标签（以及它所代表的含义）不会就此消退，甚至可以逐渐壮大。这就是这个话题会引起很多人兴趣的原因吧。:) 从标签（tags）的角度观察社区势力的起落、引发对CN区发展的可能性的思考，这是本文的目的之二。 （3）对“标签”的思想探险 上面这两个为新人、为社区的思考角度，都是功利性的（即便是利他的或者公益的，也是“利”）的思维。这第三方面的原因，即对于标签这一对象本身的考察和研究，才是本文的“求真”主旨。“求力”的智慧固然令人向往，“求真”的理想却更令人沉醉。 为了理解这一点，我们需要跳出steem来谈标签。 首先，“标签”在生活中无处不在。 “物以类聚，人以群分” ，近代以来，我们是习惯于将物与人做分类或者划分的，比如生物学的分类系统的“域、界、门、纲、目、科、属、种”，比如图书的分类系统（杜威十进制图书分类法、中国图书馆图书分类法等），比如将人群分成幼年、少年、青年、中年、老年，比如人体血型的A型、B型、O型、AB型，比如将数字分类的奇数、偶数、质数、合数，比如将语言分为en、cn、kr、fr，比如将网络分为中心化、去中心化、分布式，等等。“类”和“群”是一种特殊的标签，比如steem中的首标签或者主标签，一般也被用作类别（category）。 社会中也经常使用大量的身份标签，比如制服、比如角色。制服对于显示权威性、合法性和专业性有显著帮助，比如警服、比如医生的白大褂。父亲的角色、老师的角色，在他人看来也有一种隐含的意味，比如父亲的坚强、老师的慈爱，这些也是隐性的标签。比如聪明、美女、土豪，也都是我们给身边的人打上的标签。比如 @julian2013 机机是满腹经纶，比如 @ericet 村长是百科全书，比如 @softmetal和@pgr是好兄弟。 标签无处不在，我们却没有真正理解，这不断激发着我们的好奇心。 其次，“标签”是一个复杂的研究对象。 标签通常是对一个“类别”或“群体”的对象进行特征描述。按照区块链世界的话术来说，一旦被群体性使用就形成了某种“共识”，比如科学家团体对科学的崇拜、比如军人对尚武的认同、比如商人对利润的追求。“共识”又将影响信任，比如我们原因信任医生们的医术，又比如我们不那么信任罪犯会继续行善，这种信任也确实并非总是正确，毕竟群体的“标签”有时作用于个人会有差别。所以标签有很深入的外延，对标签的研究常常需要对“信任”、“认知过程”、“元数据”等多种社会、信息和生理机制有所了解。 另一方面，既然物、人、信息、行为等等都可以被打上标签，就不可避免得进化出了各自的复杂的标签系统。要了解标签的形成、问题和发展，又必须深入到各个领域的语境之中，所以分析其共性便存在各种挑战。分类学、图书馆学（情报学）、博物学、语言学、认知科学、社会心理学、人类学、数据科学等学科都各自存在对标签的研究，足见其在理论与现实中的影响深远与研究方式的复杂性。 将复杂对象提取出某种本性，也是驱使我们探索的重要动力。 最后，掌握“标签”的本质，是认识自然、理解社会、了解文化的重要环节。 我们的大脑中存在一个“内置的标签系统”，它既是生物进化的结果、也是社会关系的产物，通过它，我们可以更加深入和广发的理解自然、学习文化、理解世人。标签与语言也有着极为密切的关系。 所以通过向内和向外观察世界中的标签系统，能帮助我们对宇宙和自身有更切实的了解，并借助标签系统对人类的知识、文化、技术和社会进行更有效的创新。正如我们提到的可以对Steem标签进行“格物致知”一样，于宇宙也能如此。 使用标签系统来作为理解世界的一个视角和切入点，也有必要的意义和价值。 理解标签的本质（the nature of tags），以及它在自然、社会、知识、技术和文化中的意义，这是本文的目的之三，也是最根本的目的。 source: Wikipedia – Tag (metadata) | CC BY-SA 2.0 什么是标签？| What 为了引出本文的核心内容的讨论，我们在引言部分以steem为着眼点已经做了很多铺陈，下文我们从起源、自然、社会、信息、技术和文化等各个角度来观察标签的演变与本质。 1. 被忽视的分类学：标签从何而来？ 标签的特点在于对关于周边世界的信息的组织，“组织”（organize）近乎于人的本能。由博物学发展来的分类学，是对人类这一“组织”能力的集中体现，我们由此谈起。 （1）博物学传统中的分类学 我们在【未来教育学】成年人需要什么样的STEM教育？[（一）、（二）、（三）、（四）、（五）、（六）、（七）] 这一系列中，谈到了起源于希腊的理性科学传统。亚里士多德认为自然哲学（natural philosophy，也就是知识、科学）是最重要的知识形态；但同时，亚里士多德也做了大量博物学（即natural history，现在也建议翻译为“自然志”或“自然史”，以下用博物学指代natural history）研究，例如《动物的器官》、《动物的运动》、《动物的生成》等。亚里士多德认为博物学/自然志是一种比自然哲学低一级的知识形态，把博物学/自然志认为是自然哲学的准备阶段。博物学/自然志是自然哲学-数理实验科学传统之外的另一种科学传统，指的是对自然的观察、记录、分类和分析等，但随着现代数理实验科学的发达、以及功利主义的盛行，博物学传统在全世界都遇到了极大挑战。 自然志（博物学）：追求自然秩序 与自然哲学对永恒不变的追求相比，博物学采取首先收集和鉴别“事实”，然后对其进行描述和命名，最后进行分类编目；其目的是尽可能详尽地描述和了解现象本身，更注重现象和事实的个别性、独特性、不可还原性，而不追究事物背后的原因。博物学的重要特点是追求“自然秩序”，其内容包括动物、植物、天文、地理、气象、水文、矿物等。分类学则是在博物学的这一科学传统的发展中的必然结果。 18世纪的瑞典的伟大博物学家林奈被称为“分类学之父”，其贡献主要是建立了以植物的性器官为分类依据的植物分类法，将植物划分为24纲、16目、1000多属、10000多种；以及建立了拉丁语双命名法，结束了生物命名问题上的混乱局面，被称为“亚当第二”（《圣经》说上帝造物，亚当命名）。《自然系统》和《植物种志》是林奈在分类学上的伟大成就。 我们打开常见的植物志或者动物志书籍，多半都能被其中生动的图片和描述所吸引。作为一种信息描述方法的“标签”在“自然志”和“博物学”的书籍文字中并不常见，但对于生物性状特征的提取（如体型、分布、毛色等），本身也是一种标签化、特征化的过程，这在对生物迁徙、进化、起源的推理过程中非常必要。而分类，是在各种特征标签的基础上，形成的一种层级化、结构化、占主要地位的标签，是对大量特征标签的抽象，具有唯一性。从这种意义上，我们可以认为“标签”是“分类”的基础，例如林奈根据植物雄蕊和雌蕊的数目和相对位置设计的纲（class）、目（order）的分类法。 分类学与标签：信息组织技术 分类学（taxonomy）是一种从顶向下、系统的、中心化的对世界进行划分的方法，是具有明确的上下层级的树状结构，其本身是对自然秩序的有序观念的一种表现。由博物学发展出的进化论的核心论点（1）所有生物拥有共同的起源（2）现存生物多样性是自然选择的结果，也反应了同样的思想内容。这与西方的“唯一”的“真”的科学传统相一致。分类学是为博物学建立体系的有效方式，其传承者大多是百科全书式的通才。我们或许可以这么认为，哲学家的使命是发问，而博物学家（naturalist）的使命是分类。 与生物分类类似，近代的图书馆系统也采取了类似的分类学方法（图书馆学），如杜威十进制图书分类法、四部分类法（经史子集）、中国图书馆图书分类法等，这既有计算机出现之前人类检索信息方式的影响，也有物理空间放置书籍和文献的原因。今天的图书馆仍然采用严格的分类方法摆放图书，但索引书籍的方法却有了极大改变，信息检索意义上的“标签”的价值得到了真正体现。我们在书籍查询时，有效利用标签和搜索，能快速过滤、发现和定位书籍，并发现相关联的书籍。 从其本质上来说，分类学是一种理解和组织万物信息的“技术”：一方面，它本身是一种求知的行为，有人类内在的寻求秩序、形成组织的动机；另一方面，它的产生也在于解决当时的某领域内的“信息过载”问题，以分类学为骨架，构建生物界和书籍文献的谱系，也为人类在自然探索和知识发现方面的协作提供了基础。作为一种技术，标签既是分类学的基础，也是分类学的补充。 source:Wikipedia – Taxonomy_(biology) | CC BY-SA 2.0 （2）“远古”与“现代”的大众分类法 分类法（taxonomy）是对“自然的秩序”的探寻的伟大成果与集大成者。事实上，近代博物学/自然志（natural history）的进展很大程度上取决于印刷术的发明和大翻译运动、地理大发现与商业的繁荣、以及医学教育对药用植物志的重视，其中印刷术的普及（即文字传播成本的降低）或许是主因。 但在柏拉图和亚里士多德的时代或之前，书写文字的普及程度并不高，体现为主流文化主要依赖口头交流和记忆，此一时代的信息组织与分类方式会有什么不同呢？ 口语文化与大众分类法 沃尔特·翁在《口语文化与书面文化——语词的技术化》里，探讨了口语文化到书面文化的变迁，以及书面文化向现代次生口语文化转变的过程。其中提到口语文化与书面文化相比，具有几个重要的特点（以下列举其中5个，共有9个。《口语文化与书面文化——语词的技术化》，3.3节）： 附加的而不是附属的：口语文化倾向于线性追加条目，比如“然后……然后……”，而不是建立树状结构。相反，书面文化往往把上下位关系引进话语。聚合的而不是分析的：善用套话和格言警句，把重要的信息聚合在一起。冗余的或“丰裕”的：经常重复以理清思路并帮助人理解。移情和参与式的，而不是与认识对象疏离的：听众的参与是集体参与，有吟唱、呐喊、欢呼等呼应情景式而不是抽象的：交流很大程度上取决于情境，一般不会用抽象的词汇和概念，而是用具体的物体名称 可以看到，在书面文字被大量普及之前，人们的表达和思维方式是偏向于更灵活、松散、自由的模式，这与标签的个人化、描述化的特点接近。甚至我们可以认可语音与文字也是借由标签-分类的逻辑创建出来： 自底向上的自由的标记（加标签），如对某一对象核心特征用语音或象形表示；有意识的分类：比如对同一类标签，建立类别，比如同一词源和词根的词语、相同部首的汉字等将语音和文字归纳成体系，形成系统的音、形、义相协同的语言。 从这个角度来看，语音和文字构成的语言，是最早的成体系的分类法，而对事物进行识别，形成语音或文字这种标记/标签，是实现语言体系的起始步骤。这种内嵌于人类语言的分类法，和我们的文化缠绕在一起，几乎成为人类的第二天性。由于语言的这种自底向上形成的历史特征（在今天的网络语言中也能观察到），我们可以认为在系统文字生成之前的口语文化，依靠的是一种“大众分类法”（folk taxonomy）进行信息组织，由参与者不断通过添加新的元素、聚合特征、情景式互动、通过反复使用而传播，其特征与我们在上文提到的口语文化的特点几乎一致。 数字媒体与次生口语文化 当文字广泛流行后，世界进入了数千年书面文化的时代，直到数字媒体的出现，我们进入了沃尔特·翁口中的“次生口语文化”（secondary orality）时代。 随着电视、广播、互联网媒体的兴起，人们可以不需要阅读书面文字便能获得大量信息、进行娱乐、交流、甚至接受教育，以至于引起了环境媒介学派对《娱乐至死》的担忧，数字媒体与成熟的资本主义相配合，鼓动消费主义与娱乐倾向，加之书面文字被口语文化的排挤，阅读人数急剧下降，让人感到赫胥黎的《美丽新世界》恍若现实。在数字媒体时代，“口语文化”通过数字媒体所建立的新的传播渠道再次降临，同时随着“地球村”的出现，影响比前文字时代大的多、产生的“口语文化”的聆听群体也多得多，这就是现代的“次生口语文化”。 如果我们仔细观察身边的群体与媒体，我们上文提到的“口语文化”的思维与表达特征几乎已经泛滥于媒体之间。与之相适应的，网络标签在web 2.0的热潮之中获得了充分的发展与应用，社交媒体平台中的标签既继承了原始标签口语文化的自由化、个人化、社交化、非专业化的特点，又发展了书面文化的“记录”的特点，并随着信息系统的发展变得高度灵活、便于查询与分析。这也是一种现代的大众分类法（Folksonomy）。 其代表性的系统如 wordpress、del.icio.us、豆瓣、Amazon、LibraryThing等等。其中，steem也充分应用了标签技术并赋予了标签更强大的生命力和社会权力，比如作者常常会为了获得奖励去使用某个标签，这实际是强化了的标签的社会属性，我们在后一章谈社会性标签时会进一步讨论。 source:Wikipedia – Walter J. Ong | CC BY-SA 2.0 （3）多层次的分类系统 在上面两节，我们讨论了自顶向下设计的“分类法”和自底向上的“大众分类法”，标签在其中都扮演了识别特征以及完善体系的作用，由此我们可以构建一个多层次的分类系统（classification system）。本小节简要说明此种系统是如何工作的。 组织信息：树状 + 网状 一般而言，以信息管理或知识管理为目标的分类系统存在一个主干骨架，即分类学（taxonomy），基于类别（category）建立，同时也存在标签等辅助信息（或称为元数据）用于方面理解系统中的事物。我们可以认为标签是一个关键字类型的辅助信息（keyword metadata），用1到n个简短的词语来描述对象的特征，作为人或用户理解系统中对象的媒介（如下图所示）。 source: 由作者绘制 | CC BY-SA 2.0 与标签相比，类别通常是唯一的；而标签是多维度的、自由的。就steem而言，如果使用标签系统，我们就能同时向多个社区投稿，比如steempress和cn-stem（如本文所做的那样），而类型就只有一个（主标签或首标签）。 类别系统通常是一个树状的索引系统（但也可能一个对象有两个类别，比如玻璃杯既是玻璃制品也是杯子），标签体系为分类学系统提供了一个网状结构的支撑系统，便于信息更灵活的发现、关联与再生。对标签进行合并、关联、分析，有能产生新的内部结构，这是标签系统的灵活之处。 像现代的图书查询系统、Windows和Mac的文件系统、Evernote或Wiki的文档管理系统、博客系统等，都采用了类似的设计。既保持了结构的有序性，又增加了标签的灵活性。 协调众人：自由 v.s. 控制 从上面的图示中，我们可以看到标签是人和事物的媒介。如果只从事物这一侧来看，结构可以是树状的和网状的，这更接近信息管理或知识管理的需要。但如果同时考察人的这一侧，则必须考虑协作、共识、专业与业余、标准与特殊、个人与团体等张力。这也是社会化的标签系统的复杂性所在。 一般而言，这需要考虑到具体的场景进行差别性设计。比如社会系统，既存在一定的金字塔结构，也要提供自由交流和沟通的网络循环，保持社会层级之间的流通。比如电子商务平台，既要允许商家添加标签，也要提供导航栏的类别方便消费者查看，还要根据商品属性，提供可以用户筛选的特性（价位、大小等）。 我们在前面两节提到的生物分类法和图书馆分类法，更倾向于控制，由专业学者和工作人员进行类别划分，但同时也从其他资料同步各类标签和描述以丰富书籍信息（如图书馆系统会参考豆瓣、GoodReads、LibraryThing等信息）。 相对的，自然语言系统、社交媒体，由于几乎没有人能进行顶层设计，一般采取自由的大众分类法的方式，随标签形式自由生长，根据标签的流行逐渐建立类别、谱系、关联等等。 本文中，我们讨论了标签的历史根源。标签是人的“组织”本能的思维体现。标签作为对物的整体或部分性状的描述，为分类学的产生和发展提供了思维基础，并共同组成了分类系统，进而丰富了语言、博物学、网络和信息管理系统。 （未完待续）关于标签本质的探讨，我们仅仅将门打开了一条缝，之后我们会从社会、知识、技术、文化、语言等层面进一步观察和分析。 参考文献 Steem中文社区 创作，《Steem指南》，@dapeng / @maiyude等 编辑@woolfe19861008：《Steem 指南》 中级篇 | 善用标签上：标签的基本概念介绍@woolfe19861008： 《Steem 指南》 中级篇 | 善用标签下：新手初到Steemit常用的一些标签@cherryzz：寻宝活动–tag标签(第一周10个标签）@ericet：如果我是一条小鱼（上）新手指南 @ericet：如果我是一条小鱼（下）新手指南@oflyhigh：#cn 标签不见了Gene Smith：《标签》（Tagging: People-Powered Metadata for the Social Web），机械工业出版社，2012年吴国盛：《什么是科学》，广东人民出版社，2016年P. A. 查德伯恩 ：《博物学四讲》，邬娜 译，上海交通大学出版社，2017年保罗·劳伦斯·法伯：《探寻自然的秩序》，杨莎 译，商务印书馆，2017年吉奥乔·阿甘本 ：《万物的签名》，尉光吉 译，三辉图书/中央编译出版社，2017年詹姆斯·格雷克：《信息简史》，高博 译，人民邮电出版社，2013年麦克卢汉：《理解媒介》，何道宽 译，商务印书馆，2000年沃尔特·翁：《口语文化与书面文化——语词的技术化》，何道宽 译，北京大学出版社，2008年Wikipedia：https://en.wikipedia.org/wiki/Taxonomy_(general) Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/03/%e6%a0%87%e7%ad%be%e7%9a%84%e6%9c%ac%e8%b4%a8-the-nature-of-tags%ef%bc%88%e4%b8%80%ef%bc%89 This page is synchronized from the post: 标签的本质 | The Nature of Tags（一） document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/thenatureoftags-mn0nty7nab/"},{"title":"梁羽生与《名联观止》","text":"近日在读一些“联学”（对联之学），其中梁羽生的《名联观止》无疑是一佳作。‌ 想来梁先生在大多人印象中为一当代知名的武侠小说大家，但对其在对联、词话上的功夫不甚明了，故作文以记之。 ‌ image source: 豆瓣《名联观止》​‌ ​‌ 小说 1954年，《新晚报》刊登了署名“梁羽生”的武侠小说《龙虎斗京华》，为“新派”武侠小说的开山之作。梁羽生先生是现代“新派”武侠小说的开创者[1]。‌ 所谓“旧派”武侠小说，是以宫白羽的《十二金钱镖》、还珠楼主的《蜀山剑侠传》等为代表，兴起于20世纪20年代的文学流派。“旧派”开创了以白话文写作武侠题材的先河。向上则可追溯到明清的演义小说（如《水浒》）、以至于《史记》中的《游侠列传》。‌ 新派之有别于旧派在于：（1）文学性、艺术性的改进，作者在文学创作手法、形象塑造和语言提炼上有了适应现代语言审美的新的突破；（2）思想性上，“侠”在“武”之前，兼有厚重的历史感、国家民族意识。‌ 相比“旧派”，新派武侠的文学可读性、内容丰富性与思想的深刻性都有了新的进展，这无疑于文学和历史功底深厚的梁羽生的开创之风是有莫大关系的。武侠小说对人物、情节、历史感的成功塑造，加之电视、电影、游戏等现代媒介的助力，使之成为影响现代文学面貌的重要题材，其影响力之深远令人惊叹。‌ — 梁羽生先生著有武侠35部，字数1000余万，其中《七剑下天山》、《白发魔女传》、《萍踪侠影录》、《云海玉弓缘》等为读者所熟知。在大众中的知名度，梁羽生或许不及金庸，也自有其缘故。‌ 佟硕之在《金庸梁羽生合论》[2] 中评价金梁的历史意义：“开风气者梁羽生，发扬光大者金庸”，又说“梁羽生的名士气味甚浓（中国式的），而金庸则是现代的“洋才子”。梁羽生受中国传统文化（包括诗词、小说、历史等等）的影响较深，而金庸接受西方文艺（包括电影）的影响较重。…… 梁羽生的创新，是在“旧传统”上的创新，不脱其“泥土气息”。这种写法，有其优点也有其缺点。有一定中国文化水平的读者，读梁羽生小说，可能觉得格调较高，更为欣赏。一般读者，若是抱着追求刺激的心理，读金庸的小说，可能得到更大的满足。”。‌ —- 金庸有办报和电影的背景，对于小说手法上的创新，确有独到之处。佟硕之写到：“可能因为金庸做过电影导演的缘故，在小说里常有运用电影的手法。如《射雕英雄传》里梅超风要扼杀郭靖之时，笔锋一转，而写梅超风对桃花岛旧事的回忆，但却并非平铺直叙，而是运用电影倒叙手法，复现当年的特写镜头，然后再接入现场之景；《碧血剑》中从袁承志之斗温家五老，重现他们当年暗算金蛇郎君的镜头，也是同样手法，近乎银幕上“谈人”、“淡出”的运用。在小说上运用电影手法，这可说是金庸独有的特点。”‌ 梁羽生的作品则多透着“历史小说”的味道，以《萍踪侠影》为最。以土木堡之变为背景，对于谦如何精忠报国，却以忠臣受害收场，对于历史情境的描写甚为真实而深刻。《七剑下天山》中的纳兰容若，《大唐游侠传》中的李白，也都神采飞扬，颇为生动。‌ —- 金庸对商业运作和通俗文化的理解则更胜一筹，擅于在情节上用“奇”、擅于在“情”上制造话题。如张无忌之突丧父母、医绝症、独战六大派，如杨过之断臂、小龙女之失贞、十六年之约，张无忌与杨过在感情上的一男多女，《雪山飞狐》之最后一刀劈还是不劈等等，数不胜数。‌ 梁羽生旧派的文人名士风气之重，常见于其在小说中善用对联、诗词。其回目多用集句，“亦狂亦侠真豪杰，能哭能歌迈俗流”，“瀚海风砂埋旧怨，空山烟雨织新愁”。且小说中也不乏诗词的佳作，如《白发魔女传》的题词《沁园春》：“一剑西来，千岩拱列，魔影纵横，问明镜非台，菩提非树，镜由心起，可得分明？是魔非魔？非魔是魔？要待江湖后世评。且收拾，话英雄儿女，先叙闲情。风雷意气峥嵘，轻拂了寒霜妩媚生。叹佳人绝代，白头未老，百年一诺，不负心盟，短锄栽花，长诗佐酒，诗剑年年总负卿。天山上，看龙蛇笔走，墨泼南溟”。对此，佟硕之也评价到：“梁羽生这个特点有时也成他的缺点，就是非必要的场合，他笔下的人物也往往吟诗作对，这就难免令人有酸溜溜之感了。”‌ —- 人物方面，“金、梁二人各有所长。金庸擅长写邪恶的反派人物，梁羽生则擅长于写文采风流的名土型侠客”。如金庸在《天龙八部》中的四大恶人、星宿老怪，其恶之程度，令人瞠目；如《神雕英雄传》中的“老毒物”欧阳锋、亦正亦邪的黄药师等，也令人印象深刻。如梁羽生在《萍踪侠影录》中的张丹枫，《白发魔女传》中的玉罗刹都颇有名士之风，但梁写坏人却不怎么深刻。‌ 总的来说，梁羽生的小说是颇受中国传统文化与西方十九世纪文艺思潮（要求个性自由、反抗社会不合理）的影响，而金庸则主要受今日西方的文化影响，尤其是好莱坞电影的影响。从策略上看，金庸更“聪明”，而梁羽生更“古朴”。所以，金庸之受大众、电视、电影、游戏等的欢迎，与当代通俗文化的契合，也自在情理之中。‌ 注：以上评述多参考“佟硕之”的文学批评《金庸梁羽生合论》[2] 中的论述。“佟硕之”是陈文统先生的笔名，而陈先生的另一更为人所知的笔名则是“梁羽生”。 ‌ image source: 豆瓣《龙虎斗京华》‌ 对联 佟硕之在《金庸梁羽生合论》[2] 中提到：“我不反对武侠小说，我也不特别提倡武侠小说。此时此地，看看武侠小说作为消遣应该无可厚非。若有艺术性较高的武侠小说出现，更值得欢迎。但由于武侠小说受到它本身形式的束缚，我对它的艺术性不抱过高期望。”‌ 这确实是梁羽生本人对于小说的态度。‌ 梁在散文、历史、诗词、对联、棋评上下的功夫，实远在小说之上，但毕竟曲高和寡，应者甚少。散文、历史、棋评等有《笔花六照》，对联则见《名联观止》。‌ —-‌ 《名联观止》集梁在《大公报》所作近千篇“联趣”专栏整理修订而成。 所涉均为古今名联，既谈对联的“内学”，涵括各类联体与各式对法；又论对联的“外学”，涉及历史用典、民俗掌故、月旦人物、名士轶闻等。梁羽生笔下的“联话”有趣、有料、有味，可视为一部联话体的文史百科。 世界上的文字唯有汉字能做对联，故而中国的对联、诗词都别有神韵。《名联观止》一书，将对联的学问，集于近千名联的品读之中，别有风味。‌ —-‌ 举例来说，开篇先讲一个妙对。 孙行者（平仄仄）祖冲之（仄平平）胡适之（平仄平） ‌“孙行者”是对“祖冲之”还是“胡适之”为佳？很多人恐怕都知道这个故事。梁将与诸读者的对话贴出，更引出陈寅恪在北大考试出题时的掌故。‌ 梁从平仄等技术细节，谈及“胡孙”（猢狲）之对是否合理，讲结构与立意之权衡。继而又更谈陈寅恪的本意，来自苏东坡诗：“前生恐是卢行者，后学过呼韩退之”（卢行者即禅宗的六祖慧能）以韩卢（犬名）比猢狲。后又谈怪联与正格之辨、陈寅恪本人的回应、苏轼作诗之缘由。复又以陈寅恪评六祖传法偈讽胡适的《中国哲学史大纲》之事，以西学东渐之时，比附禅儒相会之际，层层解开，甚得其妙。最后又以“正反合”为结，评胡适诗作之陋，赞胡适开创之功。与一小小趣对之中，引出当时之世，令人赞叹。以此也可见梁羽生学问的功底。‌ —-‌ 再举例，有曾国藩联，可见文正公之性情，与文章之“道学气”不同，颇足一看。‌ 挽莫友芝： 京华一见便倾心，当时书肆定交，早钦宿学；江表十年常聚首，今日酒樽和泪，来吊诗人。 ‌挽胡林翼： 论才则弟胜兄，论德则兄胜弟，数语吾敢承哉？召我我不赴，哭公公不闻，生死暌违一知己；世治正神为人，世乱正人为神，斯言公自道尔！功昭昭在国，心耿耿在民，古今期许此纯臣。 ‌挽乳母联： 一饭尚铭恩，况保暖提携，只少怀胎十月；千金难报德，论人情物理，也当泣血三年。 ‌ —-‌ 又举一例，即所谓绝对的“烟锁池塘柳”，五字属五行（偏旁有金木水火土）。‌ 梁与读者书信讨论“绝对”，也颇有趣，其中以“港城铁板烧”为绝。 烟锁池塘柳燕衔泥垒巢茶烹凿壁泉港铺灯塔标烽销漠塞榆灯深村寺钟港城铁板烧桃熛锦浪堤 ‌ 兼谈陈子升的《柳波曲》中的原句，与诗作四则，这里只录一则。 烟锁池塘柳，灯垂锦槛波。回波初试舞，折柳即闻歌。 ‌ —-‌ 《名联观止》更录有各地名胜、古往今来名人之联，对于学习对联有一二兴趣者，读之有益。梁式的才学，以此可以见之。‌ “笑看云霄飘一羽，曾经沧海看平生”（梁羽生的自挽联）。俱往矣，然名士风流，自有后人知。 ‌ image source: 豆瓣《名联观止》‌ 活动 说到对联，其实入门的著作甚多。对童蒙而言，《声律启蒙》《笠翁对韵》值得一读；年长一些学联入门，如《唐诗三百首》、《宋词三百首》、《白香词谱》、王力的《诗词格律》，方舟子的《诗律浅说》等等，值得一看。‌ —-‌ 本文的最后，出一个旧联，供大家消遣，对得最别致有趣者胜。‌ 上联：烟锁池塘柳（可参考上文所述，下联须有五行相对）‌ 规则：‌ 满足对联的基本规则不许抄袭任何别人的成果；不应当使用机器协助，如微软亚洲研究院开发的“自动对联” 奖励：3 STEEM，取1名；参与奖，各0.1 STEEM，前10名都有奖 :)‌ 参与方式：回复本文‌ 评价方式：由@robertyan的评判，以及各回复获得的点赞数，综合评价产生‌ 时间：本文发布起7日内有效‌ 以后可能会办成一个系列活动，欢迎有兴趣的朋友参加 :)‌ 参考文献 Wikipedia – 梁羽生佟硕之，《金庸梁羽生合论》，1966年1月中国楹联论坛：http://www.duilian.cn/forum.php Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/04/59 This page is synchronized from the post: 梁羽生与《名联观止》 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/h050qctns8/"},{"title":"对偶与春秋","text":"上一期《内外与五四》中，我们谈到了对联的“经世致用”的意义，在于“联“以载道，即白乐天所谓“文章合为时而著，歌诗合为事而作”。‌ “道”的“体”，借“联”的“相”而显现。本文谈谈楹联的“形”与“相”的来源，尤其是对偶的特点，以及对联中常出现的时间这一概念的“对称”观念。‌ —-‌ 对偶 ‌现代人们常说的对联形态，多是指以书法形式题写、张贴、悬挂或镌刻的“春联”和“楹联”。除此之外，还有用于口头的“对句”（口语形式对联，一人出句、一人对句）和用于书面的“联语”（如某些章回体小说的章节名）。这恰与语言的使用形式相对应 ——口头、书面、标贴——由此也可见对联应用之广。‌ 对于对联的性质，向来也有不同认识：（1）对联是一种文学样式，与诗词格律相若、与建筑音乐相合；（2）对联是一种实用文体，可用于春节、贺婚祝寿、吊丧悯死，可用于宫殿苑囿、祠庙寺观、亭台楼阁、店铺坊馆；（3）对联仅当做一种文字笔墨游戏，不过雕虫小技。‌ 总体来说，对联是一种具有艺术性的应用文体。最根本的，对联是一种对称的文字形式，我们想要探讨的，便是这种对偶文体的来源。‌ —-‌ 对于对联的起源，以“楹联”来说，对联的起源常被采纳的是“五代说”（五代后蜀主孟昶所作春联：“新年纳余庆，嘉节号长春”），但实则至少在唐代已经对联已经发展成熟的佐证（如酒令和应对、敦煌遗书等）[2] 以“对句”来说，则有“西晋说”（“云间陆士龙，日下荀鸣鹤”）。但以“联语”或“对偶句”而言，则几乎从殷商甚至有文字记载起便存在了。‌ 对联的发展与流行，这里也稍作一些阐发（如对更多历史介绍有兴趣，此处推荐杨大方先生《对联论》中的相关章节）。对联的流行始于宋，而兴盛于明清。宋人开始将对联题于楹柱而称“楹联”。各种形式的对联也被创造出来：如，苏轼挽韩绛：“三登庆历三人第，四入熙宁四辅中”，开创了挽联。至明则有朱元璋，大力提倡春联，使之成为一种制度，民间更是无处不联；如朱元璋赠徐达联：“破虏平蛮，功贯古今人第一；出将入相，才兼文武世无双”。清则是康雍乾极为崇尚对联，对联妙手更是众多，如纪昀、曾国藩、袁枚等。宋以后对联的流行，与对联简洁的形式和极强的实用性，以及宋以后大众文化的兴起、商业的发展有着密切。‌ —-‌ 对联或者对偶文体的根源在于（1）汉字的一字一形一音一义的特点，使得音、形、义的对称形态极为丰富；（2）中华文化对对称、阴阳观念的推崇。‌ 1. 汉字特征 ‌首先，汉字存在以下基本特征：‌ 汉字的形状是均匀而方正的（方块字），在书写多个字时长度保持相等；汉字是单音节字，每个字的音节长度相等、音律和谐；古代汉语主要是一字一词、一字一义，单个字可以表达明确的含义；较多汉字本身的形象具有对称结构，如“天”、“人”、“合”、“一”等；汉字由以直线为主的笔画组成部首，又可以由部首组成形声字，常兼具表音和表意的功能；汉字支持竖排或横排两种书写方式，有几千年竖排书写的历史； ‌这些基本特征都为对偶句式和对联的产生奠定了基础，其中第（5）点我们在之前的“烟锁池塘柳”这一联中有过充分的体现。而且，对于某些趣联的产生，也颇有价值。如以下这个一字联，不但字的音形义相对，上下两部又分别相对，颇为巧妙： 墨泉 ‌第（6）点使得竖向书写时（如楹联），两联相对的效果可以一目了然。‌ —-‌ 其次，如果与其他语言（主要是表音语言）做比较，我们会发现汉字还有一些特征使得其为作对联提供了基础：‌ 汉语的字/词不存在时态变化（或者说每个字都是词根），使得单个字的形态比较稳定，所以能保证始终如一的全方位的对称；汉语的音节存在“声调”构造，使得当个音节能够对应多种声音元素，加强了单音节的作用，同时促成了“平仄相对”这种对称关系。 ‌正是由于汉字和汉语本身的简介、匀称、协调、丰富的特征，使得它能够成为构造对称文体和话语的基本结构。歌赋、诗词、对联的艺术之美，正筑基于汉字本身内在的美学意义之上；这在人类语言之中，是颇为独特的。‌ 2. 对称观念 天人合一、取法自然深刻影响中华文化。‌ 首先，对天地万物以及自身的观察，使得先人们对于对称有着深刻的观察，如天地、日月、昼夜，如眼、耳、手、足，又如春夏秋冬、东南西北、上下左右等等。‌ 其次，进一步对自然的观察，产生了“阴阳”、“八卦”的对立统一的观念（《周易》），适用于对自身、宇宙和社会的观察，如男女、天地、寒暑等一阴一阳二元对立的方式来构建的思维系统。‌ 这种对立统一的观念深刻体现在政制、礼仪、音乐、建筑、劳作等各个方面，毫无疑问地也渗透到语言文字与文学样式之中。‌ 对联二字，本就有“对立、关联”之意，与“阴阳”思想相契合。故而，在对联也极为注重“相对”这一形式，例如以“神州”对“华夏”由于意义完全一致就不合适。所谓“正反合”的辩证法，在对联中则颇为适用。‌ 类似地，希腊人对和谐对称的追求，也极为炽烈，如对天体运行轨迹为“圆周运动”的执着追求、对“天球”的设计等等，以及对现代理论物理（如量子物理）、以及分子生物学（如DNA双螺旋结构）的影响等，在此不详述。《哥白尼革命》或可为一种解读的角度。‌ 对于对称、阴阳理论的崇尚，也是中华文化与希腊哲学相通融之处，也难怪乎杨振宁先生也曾多次提到对中国古代文学的喜爱与对物理结构中对称结构的美妙的研究相一致之处。‌ —-‌ 以汉字和对称为基构建的对联，在今日依然有着强大的生命力。一方面，虽然汉字经历了“简化”和现代汉语经过了“以词表意”为主的变化，但汉字的生命力犹在；另一方面，虽然“科学”似乎取代了“阴阳”，但其中蕴含的对称之美的追求却没有改变，对于“阴阳”的认同反被现代科学和技术所采纳。所以，对联文体以其简洁、实用的特征，或许将不断延续其价值和意义。‌ 但是，需要注意的是，由于过去半个多世纪以来，中国大陆的教育体制多模仿苏联或欧美的原因，曾经以“对句”为基础的“文史哲德”融合统一的童蒙教育被现代分科而治的教育所取代，所以现代中国人常常能够读懂或理解对联，而要创作却颇为困难。‌ 鲁迅在《从百草园到三味书屋》曾记录他上“对课”的情景。 我就只读书，正午习字，晚上对课。先生最初这几天对我很严厉，后来却好起来了，不过给我读的书渐渐加多，对课也渐渐地加上字去，从三言到五言，终于到七言了。 ‌ （对课：旧时学习词句和准备做诗的一种练习。例如老师说“雨”，学生对“风”；老师说“柳绿”，学生对“桃红”）‌ 在晚清，“对课”依然是学问的基本，是以民国的诸多名人都有“作对”“成诗”的基本功。过去的童蒙教育如《三字经》《百家姓》《千字文》《增广贤文》《千家诗》《声律启蒙》《笠翁对韵》等也都以三言、四言、五言、七言的对句构成，将韵律的教育融合到文、史、哲、德之中。这是今天“分科”的教育体系可以思考和反省的。 ‌ image source: Wikipedia – 阴阳‌ 春秋 日月忽其不淹兮，春与秋其代序。惟草木之零落兮，恐美人之迟暮。（屈原：《离骚》） ‌ 中国诗歌的历史上，“悲秋”之作无数，其感叹时间之流逝、与时节之哀伤，大抵如此。‌ 在时间的观念上，“春夏秋冬”四时为一循环，春与秋相“对”，春秋在对联中也常使用，一春秋即为一周期。古人这种表面上以“循环”和“对称”为观念的时间观，与现代人以“精致化的测度时间与单向线性时间”为主的时间观念，有很大的差异，而更侧重对“时机”的体认。‌ 技术时代的时间观受启蒙运动和演化论（进化论）的影响，有强烈的发展、进步、进化的意味，同时人也受到客观的机械化时间的支配（事实上形成了时间对人的统治，所谓996的讨论是其中一种体现）。‌ 从“对称”和“进化”入手，这里我们简要谈谈人类时间观念的两种来源。‌ —-‌ 现代的“时间”观念，通常被解释为一个空间化的物理学概念，表现为一个可精确测量的（通过时钟来表现）的单向的时间轴（采用儒略历的绝对化的基督纪年，即所谓的公元纪年）。然而，即使在近代科学中，时间被作为单独对象深入考察，也是在进化论、热力学第二定律、宇宙膨胀理论、大爆炸学说、决定性混沌理论等有明确时间方向性的理论纷纷出现后，才全面展开的。‌ 在中国古人那里，并没有严格意义上的数学化的自然科学，也还没有广泛使用机械钟，或经历工业革命使得精确的时间统御生活的一切。古人对时间的观察首先来自与对天象、气象、物候的“对称”、“循环”的大量周期现象的发现（与前文提到的“阴阳”观念的产生原因相一致，比如四时、日升日落、月盈月亏），对自然周期的观察与记录产生了“标度”时间，如“日”、“月”、“年”。其初衷是对“时机”的把握，即“正当其时”、“时不我待”等等，强调的是对事件与环境或情境的相协调。对“时”的实际的应用，从二十四节气的名称是显而易见的： 春：立春、雨水、惊蛰、春分、清明、谷雨夏：立夏、小满、芒种、夏至、小暑、大暑秋：立秋、处暑、白露、秋分、寒露、霜降冬：立冬、小雪、大雪、冬至、小寒、大寒 ‌ 随着对时间掌控的要求的增加，进一步出现了把一天分为10、12或24个部分的要求，以及相应的时间测量工具，如日晷、漏壶等，并逐渐演变成了今天的钟表。通过统一的历法和计时系统，社会中的劳作和习俗可以由时节相互协调。尽管发展出了多种计时工具，但中国并没有发展出纯粹的量化时间观念（如亚里士多德说的：“时间只是某种计数(测度）”），但却保留了尊重“天时”的传统，包括务农、用兵、嫁娶、医治等，例如： “凡刺之法， 必候日月星辰，四时八正之气，气定乃刺之。”（《素问•八正神明》） 直至今日，这种做事“看日子”的传统在民间也依然流行。然而随着时间测量技术的发展，近代物理学（牛顿力学、乃至相对论）对“测度化”时间概念的确立，“测度”时间逐渐盖过了最初“时机”的概念，一种精确的公共时间观被广泛的使用；“测度”与“时机”之争，也可以认为是“人工”与“自然”之争的体现。‌ 今天虽然我们依然能理解“春秋”背后的含义，但对于其背后深刻的“时机”的感受，体会上却已有所不同。‌ —-‌ 与时间的周期性变化相对应的，是时间的“流逝”的感觉。与“周期性”的时间更多来自对天地的观察不同，“时间之流”的感受更多来自自身的生命体验。“百川东到海，何时复西归，少壮不努力，老大徒伤悲。” 由于生命的“有终性”（不可逃避的死亡和衰老），人们体会了到了时间流逝的不可抗拒的命运，以及与之相伴的感叹、恐惧与悔恨。同时，也正是时间的有限性，让人感到生命的可贵。‌ 时间之流是产生线性时间观的一个重要原因，但也并非总是如此。在希腊和印度文明那里，占主导是循环的时间观。循环的时间观认为宇宙是循环往复的，今天发生的事情，还会再度重演，如印度人对“劫”（尘世的43亿2千万年，是梵天神的一日）的轮回周期的表述，如希腊对圆周运动的偏好。相对应的，希腊和印度的历史感也都很薄弱。‌ 有强烈的历史意识与线性时间观的是基督教文化，这是《圣经》中“基督降生”这一事件的不可重复所必然导致的结果。所以基督教的哲学家对当时流行的希腊的循环时间观进行了艰巨的驳斥，其中以奥古斯丁为最： “如果宇宙有循环，基督受难和再临就丧失了单一无二的至高无上的意义了；我们同苦难作斗争以争得上帝的荣光的企图，由于宇宙的循环而变得十分浅薄，因为我们必将再次陷于苦难，我们 怎么会有对上帝的爱呢？” ‌ 相比之下，虽然中国也有很强的历史意识，但却并不抱有极端的线性时间观；对于死亡的态度，也没有宗教般的狂热，更多是一种或平静，或者语焉不详，或者视死如归的泰然处之的心态。如孔子的“未知生，焉知死”，如道家对万物平等的看法：“号物之数谓之万，人处一焉。”（《庄子•秋水》）‌ 现代的单向时间观的形成，与地球演化、地球年龄的发现，以及随后19世纪产生的进化论、热力学第二定律有重要关联，而20世纪的宇宙膨胀理论、大爆炸学说、决定性混沌理论等，则进一步奠定了一种“宇宙有时间起点”和“开放未来”的观念，在今天的21世纪技术时代的舆论中也常能感受到这种观点的流行。‌ —-‌ 虽然“进化”的观念已经深入人心，但“对称”、“循环”的时间观绝非无可取之处，20世纪的思想家尼采、斯宾格勒、汤因比等也多对“循环时间观”抱有同情。被技术裹挟前进的人类，在面临核战争、基因编辑危害、人工智能武器等的威胁之下，未必没有反思的必要与返归自然的可能性。 ‌image source: Pixabay‌ 活动 ‌ 上一期活动，我们以“百年五四”立意，邀请诸位作对子。‌ 下面为活动结果。‌ 参与：‌ @julian2013 德赛二先生，启蒙除弊双子马克斯，执两用中 ‌ @doveyan 百年沧桑硝烟刚散狼烟四起暗流涌动 华夏儿女续传五四薪火共筑千年龙魂 ‌ @andrewma 惟愿谈笑鸿儒在不做风流亦相宜 ‌ @xiaoshancun 百年五四年年在理应推陈出新今日薪火日日燃当可星火燎原 ‌ @aellly 衣览众衫小因奶大，傲人巨峰讽笑土丘。 ‌ @hertz300 五湖四海鬼怪多言行举止需谨慎 点评：‌ 严格来说大家对的结构上都不太工整，所以以用意来取为主，兼顾结构与音律 奖励：‌ @julian2013：切题最佳，又能用典，且别有新意，取为第一，奖励 3 STEEM@xiaoshancun：上下两联“年”与“日”用的颇巧，取为第二，奖励 0.5 STEEM@doveyan，@andrewma：对得也挺有趣， 每人奖励 0.2 STEEM@aellly, @hertz300：跑题了，鼓励0.1 STEEM ‌ —-‌ 以下为本期对联活动内容：以“春夏秋冬”或“东南西北”中的若干字为关键字，以二人一组做对联‌ 关键字：四时（春夏秋冬）与四方（东南西北）‌ 形式：互邀对联；两人合作‌ 由一人出上联，包含“春夏秋冬”或“东南西北”中的若干字，下联要与其相对；例如，出上联“春眠不觉晓”，请朋友作下联；上下两联应由不同作者完成；一人可以出上联，也可以答下联，也可以参与多次； 规则：‌ 满足对联的基本规则；不许抄袭任何别人的成果；不应当使用机器协助，如微软亚洲研究院开发的“自动对联” 奖励：3 STEEM，取1对；参与奖，各0.1 STEEM，前10名都有奖 :)‌ 参与方式：回复本文‌ 评价方式：由@robertyan的评判，以及各回复获得的点赞数，综合评价产生‌ 时间：本文发布起7日内有效‌ 参考文献 梁羽生，《名联观止》，北京大学出版社，2017年杨大方，《对联论》，中央民族大学出版社，2011年吴国盛，《时间的观念》，北京大学出版社，2006年 鲁迅，《从百草园到三味书屋》，1926年 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/%e5%af%b9%e5%81%b6%e4%b8%8e%e6%98%a5%e7%a7%8b This page is synchronized from the post: 对偶与春秋 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/gne4677tlr/"},{"title":"内外与五四","text":"上一期梁羽生与《名联观止》[1]中，我们提到过对联有“内学”与“外学”， 所涉均为古今名联，既谈对联的“内学”，涵括各类联体与各式对法；又论对联的“外学”，涉及历史用典、民俗掌故、月旦人物、名士轶闻等。 ‌ 不止对联，大部分功夫都有内外之分。‌ —‌ 内外 《名联观止》中梁羽生谈到对联也可以有“内学”“外学”之分（四八〇：对联的内学外学），可以类比曾经火热的“红学”（红楼梦）的“内学”和“外学”： “内学”是对联语本身的文学分析，包括对其中的典故、史实的注解，等等；“外学”包括对作者生平的研究，以及联中涉及的人和物的研究。“外学”“内学”本来是有紧密联系的，但须防走火入魔。个人意见，似乎应以“内学”为主，“外学”为次。古今名联，有很多是值得从文史两方面去研究它的。 ‌ 对联一学，多涉及思想、文学、历史等。从表面上看，“内学”多从“文”入手，“外学”多从“史”着眼，实则两者多难分割。有长远价值的联必在思想上也有不凡之处。如林则徐所作： 海纳百川，有容乃大；壁立千仞，无欲则刚。 image source: Wikipedia – 林则徐‌ —-‌ 对联的民间印象，在现代为一些民间故事和影视作品所影响，常用来炫耀主角的“小聪明”。如《唐伯虎点秋香》[2]中华安与“对穿肠”所对，实乃炫技或“比智商”，例如： 对穿肠：一乡二里，共三夫子不识四书五经六义，竟敢教七八九子，十分大胆；唐伯虎：十室九贫，凑得八两七钱六分五毫四厘，尚且又三心二意，一等下流。对穿肠：图画里，龙不吟，虎不啸，小小书童可笑可笑；唐伯虎：棋盘上，车无轮，马无缰，叫声将军提防提防。对穿肠：莺莺燕燕翠翠红红处处融融洽洽；唐伯虎：雨雨风风花花叶叶年年暮暮朝朝。对穿肠：十口心思，思君思国思社稷；唐伯虎：八目共赏，赏花赏月赏秋香。 ‌ 且不论结构上的问题，内容上实为平庸。与唐寅本人的“别人笑我太疯癫，我笑他人看不穿”相比，境界上也差之甚远。‌ 诗中之杰如李杜，以“仙”“圣”闻名，不在于技法之卓越，而在于李的潇洒飘逸、豪迈超越，杜的沉郁顿挫、忧国忧民；联也是如此。‌ 所以，内外之学，都不应太过精致，游戏文字、沉溺隐事；所求者，不过是抒发胸臆，文以载道。‌ —-‌ 五四 “五四”百年，谈五四的文章想必太多，此处并不细谈。只举两事。‌ —-‌ 第一，简单谈谈什么是“五四”。五四有狭义与广义之分。‌ 狭义的一般是说发生于百年前当日的青年学生与知识阶层发起的“学运”（学生运动），并随之有更多社会成员参与的社会游行。所谓“外争国权，内惩国贼”，主要是一种通过舆论、游行的方式进行的士人气节与强国愿望的表达。从学运、游行的层面，“五四”的规模确实也值得重视。‌ 但广义的“五四”，即以接纳西方文化（如“民主”、“科学”等）、与传统文化割裂为代表的文化运动，影响则更为深远，至今不息；陈独秀、胡适、鲁迅等确为其代表，如陈之出版、胡之开创、鲁之批判，都可谓意义深远。这一“西学东渐”的历史，在文化上从晚清以林则徐、康梁等为始，至于“五四”为又一变化，至于今日则仍有颇多变化、未有定数。‌ —-‌ 第二，火烧赵家楼胡同后，学生在天安门集会时，会场上有一大白旗，上有墨书对联[3]： 卖国求荣，早知曹瞒遗种碑无字；倾心媚外，不期章惇余孽死有头。 ‌ 上联骂曹汝霖是曹操后代，因缺德而碑无字；下联斥章惇为奸臣（《宋史》中的评价），章宗祥也在此列。此联颇有些趣味，用典也颇合情。（当时，涉日本外交事务的曹、章、陆三人被舆论指责为卖国贼。）但平心而论，曹孟德也未必称不得英雄，章惇恢复新法平定西夏，也未必不是贤臣。‌ 相比起来，被学生痛打的章宗祥曾极力主张释放五四被捕学生；曹汝霖晚年在忆及五四运动时则曾说：“此事距今四十余年，回想起来，于己于人，亦有好处。虽然于不明不白之中，牺牲了我们三人，却唤起了多数人的爱国心，总算得到代价。” [4] image source: Wikipedia – 五四运动‌ 活动 ‌ 上一期活动，我们以“烟锁池塘柳”为上联，以“五行”相对，看似不凡，实乃末技；但仅为一游戏，也不妨一试。‌ 下面为活动结果。‌ 参与：‌ @xiaoshancun | 镜染尘梦灰 | 镜沾尘梦烬@andrewma | 江烽销城檣 | 烽钦江城茂 | 灯钦江城茂 | 云扑百花香@fyjs | 灯镶净地楼@llh0519 | 月孤忆中人@hqy | 雾罩山峰石 | 水拍近岸舟@julian2013 |漫燃钟楼塔 点评：‌ @xiaoshanchun，@andrewma，@fyjs，@julian2013的答案在字形上都符合要求；由于本联在用字上要求较高，所以平仄上放宽要求 奖励：‌ @julian2013 |漫燃钟楼塔 一联，颇有巧思、场景形象、用字得体，以迅猛对静柔、以危对安，贴合时事（巴黎圣母院火灾）。取为第一名，奖励3 STEEM@xiaoshanchun，@andrewma，@fyjs 每人奖励0.2 STEEM@llh0519， @hqy 答案不完全符合要求，鼓励0.1 STEEM ‌ —-‌ 以下为本期对联活动内容：以“百年五四”为题，写上下两联，句式不限，字数不限。‌ 立意：“百年五四”为题。‌ 举一例：陈独秀在《敬告青年》[6]中曾经提到对青年的要求，其中第一条为“自主的而非奴隶的”。今天的青年，有众多成了“房奴”、“车奴”、拿了手机做“网奴”、成家做了“爱奴”、“孩奴”，唯独没有“自主”[5]。这要求，似乎依然遥远，青年当何为呢？‌ 以上为一立意的角度，作者可另选角度，但总得以“五四”为题。‌ 规则：‌ 满足对联的基本规则不许抄袭任何别人的成果；不应当使用机器协助，如微软亚洲研究院开发的“自动对联” ‌ 奖励：3 STEEM，取1名；参与奖，各0.1 STEEM，前10名都有奖 :)‌ 参与方式：回复本文‌ 评价方式：由@robertyan的评判，以及各回复获得的点赞数，综合评价产生‌ 时间：本文发布起7日内有效‌ 参考文献 ‌ 梁羽生，《名联观止》，北京大学出版社，2017年周星驰，巩俐等，《唐伯虎点秋香》，1993年白宝泉，白鹤群，《北京街巷胡同分类图志》，金城出版社，2005年曹汝霖，《曹汝霖一生之回忆》，中国大百科全书出版社，2009年梁文道，许子东，五四青年比当代青年更优秀吗？，2019年5月3日陈独秀，《敬告青年》，1915年9月15日 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/%e5%86%85%e5%a4%96%e4%b8%8e%e4%ba%94%e5%9b%9b This page is synchronized from the post: 内外与五四 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/7mtbscpafb/"},{"title":"Snax authentication post","text":"I want to link my Steem account with my account on Snax blockchain using https://snax.onePlease, create Snax account for me!My authentication hash: 28bd868698bd0b64a2d9c10300fdc66e5f30c01ca7dcf91a551270c7f00b23d7 This page is synchronized from the post: Snax authentication post document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/snax-authentication-post/"},{"title":"借问师友何处有，门童遥指新手村 | 关于 @cn-hello 小友的来历","text":"最近，CN区多了一位叫 @cn-hello 的小朋友，自称是CN区的小门童，每天在CN区路口守望，看到新人便上去提供一些建议，比如：“少侠，我看你能量很少了啊，休息会来村里喝杯茶坐坐吧” ，“那个谁，请你不要抄别人文章啊，会被举报的啊”，……，顺便给新人点个小小的赞。‌随后又开始忽悠新人：“少年，我看你骨骼清奇，这本《Steem指南》似乎很适合你，10块钱卖你了吧？什么，没钱？那白送你了。” / “小伙，我们村里藏龙卧虎、灵气充沛，只要你肯按时做作业，可保你练成盖世神功，你来还是来还是来？”‌他看到新人通常都很热情，但新人有时却一脸懵逼，不明白这货是干嘛来了。。。但cn-hello却很自我，每天都要炫耀一下自己勾搭了几位新人。。。‌其实，@cn-hello 原来是一为牛角挂书的小牧童，本是勤于读书问道解惑的，但有了一些学问之后，却有些好为人师，看到迷途之人，免不了希望上前寒暄两句、指教一二。结果就从牧童变成了门童，负责村中的接引、指路一事了。‌本文以下简单介绍一下他的来历，相关的一些想法，以及之后的计划。欢迎大家给这位小朋友提供建议。image source: Wikipedia – 颐和园长廊彩绘 | CC BY-SA 2.0‌小门童的介绍‌来历设计 @cn-hello 这个机器人（bot）的意义是颇为直接的，相信很多人也遇到过这个场景：刚来Steem发帖的时候，兴冲冲发了一个帖子，却无人问津，想要找前辈们请教一下，却不知道应该找谁，到其他作者或大佬帖子下留言，也不见得会被回复。所以cn-hello最初的功能便是为了主动发现身处迷雾之中的新人，告诉他们第一步该怎么走、接下来该怎么做、加入什么组织。‌然而，本质上说 @cn-hello 也只是另一个欢迎机器人罢了（yet another welcome bot），有些欢迎机器人也确实并不令人喜欢，但或许也有一些差异：‌他只关注用中文发帖的新人，只给中文用户留言；提供的建议也只用中文表达；他提供的帮助信息，如新手村 @team-cn，如《Steem指南》，都是专为中文社区的新人们所创建的，更有针对性与亲切感；与其他某些欢迎机器人（welcome bot）相比，他并不以私利为目的而留言或点赞，他不发广告、不求赞，只是希望更好的发现和帮助新人。虽然只运行了几天，但在帮助新人获取信息、找到团体方面也确实有一些帮助，也帮助我们更好地了解和认识了新人们的生存状态。在后文我们会进一步介绍这些内容。‌—-‌除了上面提到的这个显而易见的痛点，开始要写这个机器人的动机也有两方面：‌一方面是在讨论《Steem指南》相关问题时，发现虽然有《指南》但很多人还是没有阅读的习惯，所以考虑是否可以实现一个发布攻略的小助手（advisor），根据新人发帖的情况，给他提供相应的修改建议；另一方面，源于和村长 @ericet 的交流，关于平时是如何找新人进村的，村长说一般是自己去看的，没用什么工具。所以我想可以写个工具和机器人自动化这部分工作，村长也提到已经注册了 @cn-hello 这个账号，想来做类似的事情。于是大概简单实现了目前的这位 @cn-hello 小门童，或许以后会有更多的功能，也欢迎大家提供建议，目的仍然是切实帮助到新手们。‌—-‌实际上，#cn-hello 过去是一个CN区新人常用的自我介绍的标签，最近似乎用的人少了很多。这里用 @cn-hello 作账户，用意也在于帮助新人，所以在意义上较为接近的。‌功能目前 @cn-hello 主要有两方面的功能：‌（1）欢迎新人并提供建议‌ 搜索1天内在 #cn 标签下用中文发表帖子的新人，并在他们的文章下回复新人可能遇到的困难，以及相关的建议，如下图所示：image source: screenshot from the account @cn-hello ‘s comment‌特别地，由于很多新人不了解RC的消耗，回复中添加了新人目前的能量可以发表的文章或回帖的总数，以及每天恢复的能量能发帖的数量。‌关于中文区新人的定义，目前采用的是如下规则：‌声望在 [25, 35] 的区间内；SP &lt; 100；帖子使用中文发表‌（2）统计1日和7日的新人动态‌现在 @cn-hello 定时于北京时间每日晚10点运行，首先搜索新人并回复，然后发布新人相关的统计信息，如2019年05月10日的帖子。统计信息包括：‌文章推荐：今日发布帖子的新人以及推荐其中一篇帖子（通常是最新一篇）；7日新人统计：罗列过去7日发现的新人，以及他们的声望、能量（RC）、帖子数、粉丝数等信息。这部分统计设计时主要是为了方便老用户为新人提供建议或支持，也可以帮助关注自己在初期的一些关键指标。如下图所示：image source: screenshot from the account @cn-hello ‘s postimage source: screenshot from the account @cn-hello ‘s post‌—-‌目前功能是较为简单的，但对于发现新人，确实也有一些帮助；村长也会根据统计和@的通知，找到新人的帖子并帮助一些新手加入村内。‌同时，也存在一些问题，似乎并不太容易解决，例如：‌获取反馈困难：一般很难知道新手是不是读了 @cn-hello 的建议，以及对建议的反馈如何；确实也有一些新人看到了相关的回复，然后主动联系，但总体来说相当少；新手可能不理解规则或建议：推荐的新手的文章有一部分是有抄袭或搬砖的问题的，虽然回复新人时指出了这一点，但可能新手并不理解实际的情况或不愿意相信，依然我行我素，结果还是被踩了。‌源码总体来说，这是一个较为简单的工程，但基本包括了一个论坛机器人常见的功能：监控、过滤、文本分析、回复、点赞、发表文章、通知，等等。‌下面是本项目的源代码，开源在 @steem-guides 的GitHub账户下。‌Code Repository: https://github.com/steem-guides/cn-hello 语言：Python该机器人提供了如下命令，可供执行： 12345678Available tasks: cn-hello.reply reply to a post by cn-hello cn-hello.search search the latest posts by newbies cn-hello.summarize publish summary post for daily and weekly update cn-hello.vote vote a post by cn-hello cn-hello.welcome send welcome messages to newbies steem.list-posts list the post by account, tag, keyword, etc. ‌ 代码较为简单，这里不赘述。但或许有一些基础类可以被复用，这里简单提一下：‌steem 模块collector.py：封装了以账户、标签、天数、数量等查询文章和回复的基本方法，如有需要做此类查询的，或许可以复用其中的 get_posts() / get_comments()；comment.py 和 account.py：封装了一些常用操作，如各类常用信息的查询、是否被某人赞或者踩、纯文本的提取等;data 模块page_language.py：对文本使用的语言检测的封装；reader.py：可帮助实现监听某tag最新文章；cn_hello 模块bot.py, command.py, message.py, newbies.py： 稍作修改可创建一个新的机器人。123456├── cn_hello│ ├── __init__.py│ ├── bot.py # the behaviors of the bot│ ├── command.py # the commands that trigger the bot to act│ ├── message.py # the messages for the bot to speak│ └── newbies.py # the data operations of newbies对于如何安装、执行命令等，可以参考GitHub repo的readme中的介绍。‌所以，如果希望自己快速创建一个机器人实现点赞、回复、监控、通知等功能，或许可以参考这里的开源代码。‌—-‌关于识别中文，这里直接使用了 langdetect 这个 package，是对https://code.google.com/p/language-detection/ 项目的python移植。‌具体可参见Language Detection Library for Java 中对算法的介绍。其核心是采用了Naive Bayes with character n-gram，计算不同字符拼写特征在哪种语言中出现的概率最高。‌核心代码在项目的detector.py文件中，如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950def get_probabilities(self): if self.langprob is None: self._detect_block() return self._sort_probability(self.langprob)def _detect_block(self): self.cleaning_text() ngrams = self._extract_ngrams() if not ngrams: raise LangDetectException(ErrorCode.CantDetectError, &apos;No features in text.&apos;) self.langprob = [0.0] * len(self.langlist) self.random.seed(self.seed) for t in xrange(self.n_trial): prob = self._init_probability() alpha = self.alpha + self.random.gauss(0.0, 1.0) * self.ALPHA_WIDTH i = 0 while True: self._update_lang_prob(prob, self.random.choice(ngrams), alpha) if i % 5 == 0: if self._normalize_prob(prob) &gt; self.CONV_THRESHOLD or i &gt;= self.ITERATION_LIMIT: break if self.verbose: six.print_(&apos;&gt;&apos;, self._sort_probability(prob)) i += 1 for j in xrange(len(self.langprob)): self.langprob[j] += prob[j] / self.n_trial if self.verbose: six.print_(&apos;==&gt;&apos;, self._sort_probability(prob))def _extract_ngrams(self): &apos;&apos;&apos;Extract n-grams from target text.&apos;&apos;&apos; RANGE = list(xrange(1, NGram.N_GRAM + 1)) result = [] ngram = NGram() for ch in self.text: ngram.add_char(ch) if ngram.capitalword: continue for n in RANGE: # optimized w = ngram.get(n) if len(ngram.grams) &lt; n: break w = ngram.grams[-n:] if w and w != &apos; &apos; and w in self.word_lang_prob_map: result.append(w) return result code from langdetect project | license: Apache License 2.0‌ 未来 目前 @cn-hello 小门童的工作主要以接待和引导新人为主。之后的拓展依然以尽力帮助新人为目的，主要的改进可能在以下几个方面，但总体而言目前的优先级并不是非常高：‌ 提供改进建议：根据作者对标签的使用、收益的情况、文章的主题等，提供在标签使用、活动参与等方面的建议，将《Steem指南》中的特定章节也会一并推送；优化新人统计信息：给新人推荐其他steem数据分析平台的链接，方便新人了解掌握自己主要的状态和潜在的改进方向，可能只看统计帖子并不是很方便或有效；优化文章推荐：推荐新人高质量的文章，以及包括提高新人在snax等注意力奖励平台上的收益等。这点似乎很多机器人都在做了，所以或许并不是 @cn-hello 的重点。 对小门童有任何建议，或者希望他还能帮新人们做些什么，请在文章下面留言哦~ ‌ 小门童的思考 对新人的观察 透过 @cn-hello 每日对新人的访问和记录，我们也能获得一些关于新人的观察：‌ 搬砖的倾向：在过去7人接待的28位新人中，至少有5位由于搬砖（抄袭）的问题声望被踩到25以下。一方面，我们的提醒没有达成特别好的效果；另一方面，新人不了解规则并希望轻松撸币容易有搬砖的倾向。“老”新人：大部分 @cn-hello 找到的新人都是1个月以内的创建的（18 / 28），但也有部分账户（6 / 20）已经创建了 1年左右或以上的。或许当时新人来访时，没有很快找到融入社区的方式，所以一直呈现若离若即的状态，希望 cn-hello能帮助缓解这一问题，目前看来似乎也并不容易。积极的新人：目前积极回应 @cn-hello 的新人只有 （6 / 28）个，并不算很多，但能得到一些有效回应，也算部分完成任务了。 对新人不够友好（同时也是为了防止小号和机器人的泛滥），是Steem的一个严重的问题，也是比较奇怪的地方，但恐怕也是无奈之举。从实际上确实阻碍了新生力量的入场，给新玩家设置了较高的门槛。或许本质上这是西方文明“人性恶”的假设在作怪吧。‌ 为了对抗新人面对的挑战，小门童表示不打算放弃新人“拯救”计划。‌ 机器人的印象 小门童 @cn-hello 是机器人，但令他感到不解的是，steem上很多机器人并不打算遵循阿基莫夫的机器人三大定律或者四大定律，甚至恶行昭彰。 第零法则：机器人不得伤害整体人类，或坐视整体人类受到伤害；第一法则：除非违背第零法则，否则机器人不得伤害人类，或坐视人类受到伤害；第二法则：除非违背第零或第一法则，否则机器人必须服从人类命令；第三法则：除非违背第零、第一或第二法则，否则机器人必须保护自己。 ‌总体来说，steem上机器人给人的整体印象是不够正面的，既不智能、也不正义（不仁、不智）。‌ 事实上，像“三大定律”这样义务化的伦理确实不适合steem上的机器人，他们不过是人的延伸，并不具有被编码的“道德”。或许在可预见的未来，人工智能的潜在危害也不过是“恶”的延伸，问题不在与机器本身有多智能，而首先在于设计和使用它的人是否能约束自身的贪婪和享乐的倾向。‌ —-‌ 如果想要进一步了解steem上的机器人，《Steem指南》的机器人篇对于机器人有一些不完全的介绍，可作参考。‌在帮助新人方面，@cn-hello 也只不过是其中之一。CN区还有很多可爱的机器人，有些依然活跃，有些则已经进入休假状态，比如 @cn-cutie.pie 和 @cn-naughty.boy。‌ 之前的一些过去关于机器人问题的讨论，或许也可以作为参考：‌ 聊聊机器人烙 / Robots on STEEMITsteemit 还是机器人的天下机器人是否会破坏steemit上的生态平衡？‌@maiyude 的机器人教程，也可供初学者阅读，我们稍后也会整合到《Steem指南》中。‌ steem-python 介绍：（1）（2）点赞机器人开发：（1）（2）（3） —-‌ 虽然对于steem上的机器人存在许多争议，但所谓“自反而缩，虽千万人，吾往矣”，小门童希望能尽自己的一点绵薄之力，便已经足够了 :)‌ 参考文献 Wikipedia，机器人三定律Shuyo Nakatani，Language Detection Library for Java，2010年 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/%e5%80%9f%e9%97%ae%e5%b8%88%e5%8f%8b%e4%bd%95%e5%a4%84%e6%9c%89%ef%bc%8c%e9%97%a8%e7%ab%a5%e9%81%a5%e6%8c%87%e6%96%b0%e6%89%8b%e6%9d%91-%e5%85%b3%e4%ba%8e-cn-hello-%e5%b0%8f%e5%8f%8b%e7%9a%84 This page is synchronized from the post: 借问师友何处有，门童遥指新手村 | 关于 @cn-hello 小友的来历 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/cn-hello-oqz3cshda1/"},{"title":"贺寿与建祠","text":"上一期《对偶与春秋》中，我们谈到了对联的对称/阴阳本质，以及人类对时间的观念的变迁。本文循着时间这条路，我们简单谈谈时间相关的对联。‌ 写人物的对联大概有婚联、寿联、挽联，如果是兼有祠堂的名人，则还包括祠堂的楹联。今天就说说贺寿和建祠过程中的一些对联。‌ –‌ 贺寿 ‌大多数寿联都是送给生者的“人情”，阿谀之辞在所难免。寿联大多属于应酬之作，感情一假，便不足为观。不过虽然平庸之作占了大多数，但佳作也是有的。以下选自《名联观止》[1]中一些不俗的寿联，可作一观。‌ 如郑板桥的六十寿联，可见真性情： 常如作客，何问康宁；但使囊有余钱，瓮有余酿，釜有余粮，取数叶赏心旧纸，放浪吟哦，兴要阔，皮要顽，五官灵动胜千官，过到六旬犹少；定欲成仙，空生烦恼；只令耳无俗声，眼无俗物，胸无俗事，将几枝随意新花，纵横穿插，睡得迟，起得早，一日清闲似两日，算来百岁已多。 ‌郑板桥曾任山东范县、潍县知县，因得罪地方豪绅，托病弃官，寄居扬州卖画，称为“扬州八怪”之一，诗、书、画均不俗，人称“三绝”。曾做一四言诗： 学诗不成，去而学写。学写不成，去而学画。日卖万钱，以代耕稼。实救困贫，托名风雅。免谒当途，乞求官舍。座有清风，门无车马。 ‌ 与自寿联一道，可见他的真性情。‌ 光绪三十四年（1908年，戊申年）八月，袁世凯五十生辰，大开寿筵，有谄媚者献寿联： 戊戌八月，戊申八月；我佛万年，我公万年。 ‌”戊戌八月“为袁世凯得势之始（靠出卖维新变法之立宪派，即谭嗣同等），且此联也颂慈禧（”老佛爷“）。同年十月，慈禧病故，名士祝竹岩改此联为： 戊戌八月，戊申十月；我佛万年，我公明年。 ‌虽然袁项城未能明年就死，但此联也传诵一时。‌ ‌ image source: Wikipedia – 生日​ 建祠 ‌寿联贺生人，挽联敬死者，祠联题名士。挽联今次先不谈，我们先看祠联。‌ 祠联甚多，其中诸葛祠甚为有名，由杜甫《蜀相》（”丞相祠堂何处寻“）可知。‌ 这里录两则短联，分别题张良与韩信。‌ 于右任题张良庙联： 辞汉万户；送秦一椎。 ‌ 山西霍山题韩信墓联： 生死一知己；存亡两妇人。 ‌ 这里且卖一关子，能说明联中典故，奖励1 STEEM~‌ 活动 ‌ 上一期活动，我们以“四时（春夏秋冬）与四方（东南西北）‌”为题，两人一组对联。‌‌ 下面为活动结果。‌‌ 参与： （上联）春夏秋冬四时雨 | @cecilian （下联）东南西北八方客 | @mia-cc （下联）东南西北四面风 | @doveyan （上联）东邪西毒南帝北丐中神通 | @andrewma （下联）春华秋实夏蝉冬雪光似水 | @julian2013 （下联）春生夏长秋收冬藏中养生 | @doveyan （下联）東暖西凉南熱北寒中誼居 | @hertz300 （上联）东成西就 | @teamcn-shop （下联）南辕北辙 | @annepink （下联）南来北往 | julian2013 （下联）春华秋实 | @xiaoshancun （上联）春夜漫漫无心睡 | @julian2013 （下联）秋昼绵绵惹人醉 | @andrewma （下联）秋日私语情意长 | @annepnik （下联）过来让我抱一下 | @softmetal （下联）秋波漪漪想美丽 | @julian2013 （下联）望穿秋水盼君归 | @doveyan ‌ 以下都是上联，但没有人对下联。 春夏秋來又一年，南方四季缺冬天。 | @hertz300 春不覺來秋已去，南方天氣无冬天。 | @hertz300春夏秋冬四季，南北西东八方。 | @zy-sb ‌ 点评：‌‌ 这期参与很活跃，也有很多有趣的作品，谢谢大家~ ‌ 奖励：‌‌ 经综合评价，以下两联较为妥当，分享 3 STEEM奖励，每人获得0.75 。其余每人0.1 STEEM奖励。奖励稍后发放。 春夏秋冬四时雨 | @cecilian 东南西北八方客 | @mia-cc 东邪西毒南帝北丐中神通 | @andrewma 春华秋实夏蝉冬雪光似水 | @julian2013 ‌ ‌‌ —-‌‌ 以下为本期对联活动内容：寿联，由本周内刚满50、60或70级的寿星报名，由其他人为其做寿联。‌ 形式：‌ 寿星自由报名其他人自由发挥，为寿星做寿联上面”建祠“部分有猜谜活动，也有奖励 ‌规则：‌‌ 满足对联的基本规则；不许抄袭任何别人的成果；不应当使用机器协助，如微软亚洲研究院开发的“自动对联” ‌奖励：寿星奖励 1 STEEM（有人帮他写对联为有效，最多3名，先到先得）；最佳作品奖励 2 STEEM；参与奖，各0.1 STEEM，前10名都有奖 :)‌‌ 参与方式：回复本文‌‌ 评价方式：由寿星评判‌ 时间：本文发布起7日内有效‌‌ 参考文献 梁羽生，《名联观止》，北京大学出版社，2017年 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/%e8%b4%ba%e5%af%bf%e4%b8%8e%e5%bb%ba%e7%a5%a0 This page is synchronized from the post: 贺寿与建祠 document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/qs55nyh8x9/"},{"title":"用GitHub创建Steem文章镜像 | Mirroring Your Steem Blogs on GitHub | 免费博客备份服务： steemblog","text":"本文介绍将Steem文章同步到GitHub pages的开源工具和免费服务：‌开源工具 “blog”：https://think-in-universe.github.io/blog/免费服务 “steemblog”：https://steemblog.github.io/‌Image Source: Pixabay‌缘由‌最近在用steem的时候，觉得不管是用busy, steempeak还是steemit等，它们的界面设计对于看自己以前的文章并不太方便（当然想看其他人的旧文章也比较麻烦），并且由于国内的网络访问这些站点的速度都不太快，所以以博客服务来看，用户体验是挺差的；至于要方便地搜索、归类自己的文章就更麻烦了。‌之前曾经有过一些浏览历史文章较方便的服务（如chinabb和steemitfriends），似乎也或者关闭或者收费了，因此暂时没有找到好用的服务。‌于是想到可以把Steem上的文章备份成镜像，每日自动同步，便于自己梳理和分析；虽然我文章写的不多，但如同在《标签的本质 | The Nature of Tags（一）》里提到的，组织信息是人类的本能，于是便实现了这里的工具和服务。‌GitHub镜像博客‌关于为什么需要自己写文章同步工具，其实是值得询问的：‌首先，博客镜像的工作相信之前有人也已经做过了，这并非什么新想法（但我简单搜了一下也没有找到可以立即复用的工具）。但是搭建博客镜像是一项需要适应自身需求的工作，所以自己动手的话可以有更高的灵活性和掌控度。其次，即便之前有类似工作的话，可能也并不是同步到GitHub，或者也未必会做到近实时的更新，所以这项工作也可以作为一种服务，也并非完全没有价值。‌为了完成这项工作，我们基于steem API、GitHub pages和Hexo[1]框架创建了博客镜像搭建工具，效果如下（示例：https://think-in-universe.github.io/blog/）：‌1. 博客首页左侧是用户的profile，右侧是近期的文章，中间为最近文章。‌screenshot from https://think-in-universe.github.io/blog/‌2. 侧边栏：类别和标签Steem上的标签和类别，会同步到hexo框架下面，并能够正常显示。遗憾的地方在于由于steem上没有类别层级的概念，所以要分类文章，相对来说没有那么灵活。‌screenshots from https://think-in-universe.github.io/blog/‌3. 侧边栏：近期文章和归档‌显示最近5篇文章，以及每个月的文章数量。可以看出，作为写作者而言，我是比较懒惰的 :) 和大家比还有很大差距。‌screenshots from https://think-in-universe.github.io/blog/‌4. 文章展示：右侧目录、代码高亮和原文链接‌在右侧添加了一个目录控件，对于阅读长文是有帮助的。‌代码高亮对类似本文的有代码的文章有一定帮助，steemit对代码高亮的处理是比较初级的。‌原文链接其实是为了方便我自己有时候引用文章需要，在steem上找文章比较低效。‌screenshots from https://think-in-universe.github.io/blog/‌5. 搜索‌搜索功能对于想要快速查阅或引用自己的文章，较有帮助。点击右上角的搜索按钮，可以进行快速搜索。‌screenshot from https://think-in-universe.github.io/blog/‌6. 独立的归档、类别、标签页等‌如果要单独查看这些信息，可以到分别的独立页面下查看，如有需要，也可以建立其他的标签页。例如，归档页面的时间线，比steem看起来简洁一点：https://think-in-universe.github.io/blog/archives/‌screenshots from https://think-in-universe.github.io/blog/‌页面展示大体如此，主要的价值在于从文章的角度，信息的组织更为清晰。如果想要获得一个类似的博客镜像，大抵有两种方法：‌如果你了解GitHub和GitHub pages如何使用，可以使用本文发布的开源代码（https://github.com/think-in-universe/blog），根据其中的README，搭建一个类似的镜像就行了。如果你希望可以使用一个免费的博客镜像服务，可以参考文章最后一章提到的 steemblog 博客镜像服务，或者直接联系我。‌如何实现博客镜像工具？‌为了实现以上功能，我们可以基于博客框架Hexo[1]，搭建从Steem同步数据、并发布到GitHub pages的博客镜像工具，可以支持基于用户名、标签、日期等查询方式的数据同步。下面简要介绍如何实现这一博客镜像工具。‌工具的代码在GitHub开源：https://github.com/think-in-universe/blog‌关于具体如何使用此工具，可以参考上面项目中的README的介绍：可以在本地安装后使用，也可以通过travis-ci部署。‌本项目的代码里重用了 @cn-hello 小门童实现时的一些基本框架，所以需要增加的功能较少。工具的工作流程如下，也比较简单：‌下载你的Steem文章；用Hexo编译成静态文件；用GitHub pages部署博客；‌（1）下载你的Steem文章‌由于重用了之前的SteemReader的方法，我们可以指定通过账户或者标签以及时间（天数）来获取文章。‌ blog/builder.py 1234567891011class BlogBuilder(SteemReader): def __init__(self, account=None, tag=None, days=None): SteemReader.__init__(self, account=account, tag=tag, days=days) def download(self): if len(self.posts) == 0: self.get_latest_posts() if len(self.posts) &gt; 0: for post in self.posts: self._write_content(post) ‌code from https://github.com/think-in-universe/blog | MIT License‌为了将文章下载为hexo可识别的markdown格式，需要在markdown中加入相关ymal或json的元数据。以下为markdown模板，包含了标题、类别、日期、标签等信息，并指定显示文章的目录。‌ blog/message.py 1234567891011121314151617MESSAGES[&quot;blog&quot;] = &quot;&quot;&quot;---title: &quot;{title}&quot;catalog: truetoc_nav_num: truetoc: truedate: {date}categories:- {category}tags:{tags}thumbnail: {thumbnail}---{body}&quot;&quot;&quot; code from https://github.com/think-in-universe/blog | MIT License‌使用Steem API，获取steem文章的元数据和markdown文本。‌ blog/builder.py 123456789101112131415161718192021222324def _write_content(self, post): folder = self._get_content_folder() c = SteemComment(comment=post) # retrieve necessary data from steem title = post.title.replace(&apos;&quot;&apos;, &apos;&apos;) body = post.body date_str = post.json()[&quot;created&quot;] date = date_str.replace(&apos;T&apos;, &apos; &apos;) tags = &quot;\\n&quot;.join([&quot;- {}&quot;.format(tag) for tag in c.get_tags()]) category = c.get_tags()[0] thumbnail = c.get_pic_url() or &apos;&apos; url = c.get_url() # build content with template template = get_message(&quot;blog&quot;) content = template.format(title=title, date=date, tags=tags, category=category, thumbnail=thumbnail, body=body, url=url) # write into MD files filename = os.path.join(folder, &quot;{}_{}.md&quot;.format(date_str.split(&apos;T&apos;)[0], post[&quot;permlink&quot;])) with open(filename, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: f.write(content) logger.info(&quot;Download post [{}] into file {}&quot;.format(title, filename)) code from https://github.com/think-in-universe/blog | MIT License‌ （2）用Hexo编译成静态文件‌我们需要为建立的博客设置一个美观的主题。‌我们这里使用了 https://github.com/ppoffice/hexo-theme-icarus 主题，需要将其作为一个git submodule加入到git repository中。‌ .gitmodules123[submodule &quot;theme&quot;]path = themes/icarusurl = https://github.com/ppoffice/hexo-theme-icarus.git ‌code from https://github.com/think-in-universe/blog | MIT License‌随后使用hexo命令来将markdown转换成生成静态的文档。‌ blog/command.py1234567@task(help={ })def build(ctx): &quot;&quot;&quot; build the static pages from steem posts &quot;&quot;&quot; os.system(&quot;cp -f _config.theme.yml themes/icarus/_config.yml&quot;) os.system(&quot;hexo generate&quot;) ‌code from https://github.com/think-in-universe/blog | MIT License‌（3）用GitHub pages部署博客‌正式部署时，我们有两种方式，一是在本地使用hexo命令部署，或者在travis-ci 中定期每日进行同步。‌hexo命令部署：blog/command.py 1234567@task(help={ })def deploy(ctx): &quot;&quot;&quot; deploy the static blog to the GitHub pages &quot;&quot;&quot; build(ctx) os.system(&quot;hexo deploy&quot;) ‌code from https://github.com/think-in-universe/blog | MIT License‌travis-ci部署：.travis/deploy.sh 1234567891011121314[ -z &quot;${GITHUB_PAT}&quot; ] &amp;amp;&amp;amp; exit 0[ &quot;${TRAVIS_BRANCH}&quot; != &quot;master&quot; ] &amp;amp;&amp;amp; exit 0git config --global user.email &quot;${GIT_EMAIL}&quot;git config --global user.name &quot;${GIT_USERNAME}&quot;git clone --depth 1 --branch gh-pages --single-branch https://${GITHUB_PAT}@github.com/${TRAVIS_REPO_SLUG}.git sitecd sitecp -r ../public/* ./NOW=$(date +&quot;%Y-%m-%d %H:%M:%S %z&quot;)git add --all *git commit -m &quot;Site updated: ${NOW}&quot; || truegit push -q origin gh-pages ‌code from https://github.com/think-in-universe/blog | MIT License‌另外，需要注意，由于用travis-ci 部署时需要用户提供Git用户信息（用于commit到gh-pages）以及GitHub的token，所以需要以环境变量的方式进行配置。‌博客镜像服务 http://steemblog.github.io/‌今天在微信群中 岩哥 @andrewma 提到想要一个分析文章标签的服务，我想起搭建的这个博客镜像也有标签云和标签统计，所以帮助建一个类似的镜像服务就能解决该问题。‌但由于岩哥对GitHub并不熟悉，使用上面提到的博客镜像工具可能较为困难，所以在此基于https://github.com/think-in-universe/blog 项目，建一个organization account用户管理博客，帮助有需要的人建博客镜像的子目录，这就是steemblog。‌1. 如何使用博客镜像服务‌目前，这个博客镜像服务可以在 https://steemblog.github.io 找到。‌如果要添加一个新的用户到镜像同步中，只需添加账户到用户列表中即可（目前是手动添加的）。例如，我们添加了 @robertyan 和 @andrewma 到列表中。我们可以在以下链接访问他们的博客镜像：‌https://steemblog.github.io/@robertyan/https://steemblog.github.io/@andrewma/‌与之前的工具需要手动配置用户信息不同，这里自动从steem同步了用户的profile。（不过跟我手动配置的差不多）‌screenshot from https://steemblog.github.io/@robertyan/‌@andrewma的博客镜像也创建成功了，不过头像和缩略图的处理可能需要做一些改进。‌screenshot from https://steemblog.github.io/@andrewma/‌比如岩哥关心的标签信息，可以在https://steemblog.github.io/@andrewma/ 中找到：‌screenshots from https://steemblog.github.io/@andrewma/同样的，我们可以继续添加新的用户，他们的镜像可以在 https://steemblog.github.io/@{账户名} 中找到。‌对于这样的博客镜像，如有需要或建议，可以在文章后面留言讨论。‌2. 如何建立博客镜像服务‌https://github.com/steemblog/blog 是在 https://github.com/think-in-universe/blog 的基础上构建的，为了适应多用户的子目录的需要，需要对原来的项目的目录结构和部署方式做一些调整。‌（1）从steem下载文章的同时，自动同步用户信息‌通过steem获取的账户信息，自动更新_config.yml和_config.theme.yml相对应的模板在 blog/message.py 中，由于内容太长，这里不贴出。‌ blog/builder.py 12345678910111213141516171819202122232425262728293031323334353637def update_config(self): if not self.account: return organization = BLOG_ORGANIZATION logo = BLOG_AVATAR favicon = BLOG_FAVICON language = settings.get_env_var(&quot;LANGUAGE&quot;) or &quot;en&quot; a = SteemAccount(self.account) author = self.account name = a.get_profile(&quot;name&quot;) or &quot;&quot; # about = a.get_profile(&quot;about&quot;) or &quot;&quot; location = a.get_profile(&quot;location&quot;) or &quot;&quot; avatar = a.get_profile(&quot;profile_image&quot;) or &quot;&quot; website = a.get_profile(&quot;website&quot;) or &quot;&quot; # build config file with template template = get_message(&quot;config&quot;) config = template.format(organization=organization, language=language, name=name, author=author) filename = CONFIG_FILE with open(filename, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: f.write(config) logger.info(&quot;{} file has been updated for the account @{}&quot;.format(filename, author)) # build config theme file with template template = get_message(&quot;config.theme&quot;) config = template.format(organization=organization, favicon=favicon, logo=logo, author=author, name=name, location=location, avatar=avatar, website=website) filename = CONFIG_THEME_FILE with open(filename, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: f.write(config) logger.info(&quot;{} file has been updated for the account @{}&quot;.format(filename, author)) ‌code from https://github.com/steemblog/blog | MIT License‌（2）在生成静态网页时，相互隔离不同用户的路径‌将不同账户的页面放置到@account子目录下。‌ blog/message.py 12345678910# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://{organization}.github.ioroot: /@{author}/permalink: :category/:post_title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: public/@{author} ‌code from https://github.com/steemblog/blog | MIT License‌编译指定的steem用户的文章为静态页面，隔离放置在发布目录下。‌ blog/command.py 1234567891011@task(help={ })def build_all(ctx): &quot;&quot;&quot; download the posts of all the accounts, and generate pages &quot;&quot;&quot; accounts = settings.get_env_var(&quot;STEEM_ACCOUNTS&quot;) or [] if accounts and len(accounts) &gt; 0: for account in accounts.split(&quot;,&quot;): clean(ctx) download(ctx, account) build(ctx) ‌code from https://github.com/steemblog/blog | MIT License‌ （3）部署时，将页面推送到 steemblog.github.io‌ 只需修改 .travis/deploy.sh 中的目标代码仓库的参数即可。‌ 最后 ‌究其本质，本文是对steem上的数据进行处理的一种尝试，在开放的区块链数据的基础上，我们可以根据场景，采取多种灵活的数据展现方式，这里的镜像博客无疑又是其中的一种。‌ 希望本文提供的工具或服务对你有帮助，如果需要帮助你开启博客镜像服务，可以在本文留言，我会尽量提供支持。由于travis的使用也有一些限制，优先帮助前5位留言的朋友提供服务 :)‌ 参考文献 https://hexo.ioHexo icarus主题：https://github.com/ppoffice/hexo-theme-icarus博客镜像工具：https://think-in-universe.github.io/blog/博客镜像服务：https://steemblog.github.io/ Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/%e7%94%a8github%e5%88%9b%e5%bb%basteem%e6%96%87%e7%ab%a0%e9%95%9c%e5%83%8f-mirroring-your-steem-blogs-on-github-%e5%85%8d%e8%b4%b9%e5%8d%9a%e5%ae%a2%e5%a4%87%e4%bb%bd%e6%9c%8d%e5%8a%a1%ef%bc%9a-st This page is synchronized from the post: 用GitHub创建Steem文章镜像 | Mirroring Your Steem Blogs on GitHub | 免费博客备份服务： steemblog document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/githubsteemmirroringyoursteemblogsongithubsteemblog-m3zc2s32r7/"},{"title":"steemblog: Steem时光机 | Steem Time Machine","text":"本文我们将介绍 steemblog 的最新的进展。‌steemblog（Steem文章镜像服务） : https://steemblog.github.io/‌Image Source: Pixabay‌#1 回顾‌steemblog 是一项 Steem 文章镜像服务。‌如果你还不了解这个服务，或许你可以通过访问：https://steemblog.github.io/@team-cn/ 作为一个案例体验一下。‌在文章《用GitHub创建Steem文章镜像 | Mirroring Your Steem Blogs on GitHub | 免费博客备份服务： steemblog》中，我们提到过创建steemblog 服务的缘由，主要是为了更好的查看历史文章。‌现在来看，它主要带来了以下几点助益：‌首先，steemblog 作为一份档案和历史记录，将 steem 数据以便于阅读和查询的方式保存；虽然区块链技术被认为具有数据不可毁灭的潜力，但有一份额外的备份也存在价值；其次，它提供了更好的用户体验和访问速度，对于查询、搜索、整合个人或组织的文章，效率更高、更有愉悦感；再次，它目前每日更新，虽然是存档，但基本可以保持是近实时的，多于过去几日的文章，也可以一并处理。根据上一篇文章和微信群中的留言，我们已经帮以下12个账号部署了每日更新的博客镜像服务：‌@robertyan@andrewma@ericet@julian2013@annepink@bring@sunai@nostalgic1212@m18207319997@iguazi123@team-cn@lemooljiang‌每日北京时间凌晨0点，steemblog 会自动同步镜像一次。‌总体而言，对我来说 steemblog 是一个还比较好用的时光机（Time Machine），可以更好地学习和了解 steem 上各种有趣的事情。下面举几个例子来看看吧：‌#2 场景‌以下是steemblog的几个有意思的应用场景。（1）新手村访谈初入CN区或者新手村的新人，想要了解一下社区内的朋友，其实没有看上去那么容易。去逐个翻看各个用户的历史文章，效率很低。‌但新手村访谈部分解决了这个问题，我们只要看 #cn-interview 这个标签下的文章就行，但由于steemit / busy 查看标签历史或多或少都有点问题，所以也很难流畅地阅读。在以前，大概有2种方式：‌看新手村的索引贴，例如2018版的：https://busy.org/@team-cn/2018-x61niax2i4/阅读《Steem指南》的新手村计划部分：https://steem-guides.github.io/steemh/fl.html#section-17.3‌但这两种方法更新可能不太及时，最近的访谈没有录入，而 steemblog 是及时更新的。 steemblog 的搜索功能也更快速和有针对性。‌通过链接：https://steemblog.github.io/@team-cn/tags/cn-interview/，我们可以看到新手村历史上所有的访谈的记录：‌最新的访谈：‌最初的访谈：‌按村名搜索：‌screenshots from steemblog: https://steemblog.github.io/@team-cn/tags/cn-interview/‌想要了解新手村 @team-cn 里的各位朋友，用 steemblog 看一看就一目了然了，确实很有趣。 这对新人也很有帮助，建议你们来看看。‌（2）社区名人录‌Steem是个社区，社区是由人组成的，其中有些人由于各种原因成为舆论的焦点或实际的掌权派，总是在历史上不断发生的事情。‌—-‌最近 #sct 标签称霸舆论，对于创始人之一的 Jack @jack8831 也接受到了大量的八卦和追捧。但要看家里有矿的男神的生辰八字，也不是这么容易的事啊。‌steemblog 可以帮你解决这个问题。昨天服务器花了6分钟备份了 Jack @jack8831 的历史文章：https://steemblog.github.io/@jack8831/‌然后，要阅读 Jack 的最新动态、历史观点、常用的标签，就容易多了。‌不过韩文/朝鲜语我不懂，所以读起来还是需要借助机器翻译的力量。但不可思议的是，下面早期文章的图中的“基本英语”我居然看懂了！！‌Jack 好像曾经喜欢给韩国朋友们分享英文，标题中也有“鲑鱼”（연어）的前缀：https://steemblog.github.io/@jack8831/tags/englishforkorean/‌所以 steemcoinpan 上鲑鱼泛滥，似乎也在情理之中了。‌screenshots from steemblog: https://steemblog.github.io/@jack8831/‌Jack和团队做的 steemcoinpan 风头正劲，要向韩国朋友们学习，也不妨了解下他们的过往~‌—-‌回到CN区。‌我之前读过《Steem指南》中的 《Steem 十讲》，觉得 刘美女 @deanliu 的观点和文章很独到，所以特地同步了刘美女的文章到 steemblog （服务器时间 18 分钟，刘美女的文章和标签都很多，同步较慢）：https://steemblog.github.io/@deanliu/‌刘美女已经写了 1400+ 文章，可谓笔耕不辍、涉猎广泛。‌最常用的首标签（类别）：除了CN区话题，摄影、旅游、美食、讨论 steem / blockchain、以及聊娃（TT）是日常。‌最初的文章都是英文，拓荒时期CN区还没有形成规模吧：‌老道茶馆的一些过往：https://steemblog.github.io/@deanliu/tags/laodr-teahouse/‌screenshots from steemblog: https://steemblog.github.io/@deanliu/‌不过其实之前 大鹏 @dapeng 也曾经帮助 刘美女 @deanliu 备份过文章（ GitHub上的 文章 Markdown 源码 / Netlify 备份站点 ），只是并没有设置成自动更新、以及网站模板较简单罢了。从备份的角度，steemblog 也只是另一种工具和服务而已，并不新奇，但希望它也有所帮助。‌—‌我不是很喜欢八卦，所以八卦社区名人和豪杰们的任务，就交给大家自己去完成了。不过想要用 steemblog 来八卦哪些名人倒是可以给我提供一个名单，我可以帮助备份到 steemblog。‌（3）活动的回顾‌活动一般以标签的形式进行推广，所以与上面看到的以个人账户为主的文章展示方式并不相同。对于标签文章的备份，steemblog 也可以支持，但目前并没有部署单独对标签进行备份的案例，而且需要对界面做少量修改。‌这里展示一下 我 @robertyan 主办的对联活动如何查看。‌以 https://steemblog.github.io/@{username}/tags/{tag}/ 的格式，就能查看标签下的文章。由于对联活动的文章都是我发表的，所以可以这样查看：https://steemblog.github.io/@robertyan/tags/cn-couplet/‌screenshot from steemblog: https://steemblog.github.io/@robertyan/tags/cn-couplet/‌已经办到第四期了，欢迎对语言和文化有兴趣的朋友参与。这期的题目是给刚刚升级到50/60/70级的朋友们写寿联：https://busy.org/@robertyan/qs55nyh8x9‌（4）奇文共欣赏‌第四种用途对我还是挺有帮助的：Steem上有一些极度认真的作者，对于喜欢看好文章用户，现在的steemit/busy/steempeak等界面都满足不了需求。‌上面提到过我推崇 刘美女 @deanliu 的文章并在昨天同步到了 steemblog。其实更早之前，我还同步了 维参 @crowflew 的文章，是我之前在 steem 看到的最有意思的文章系列之一吧：https://steemblog.github.io/@crowflew/‌对于阅读博客，steemblog 会显示目录方便作者通览全文和跳转到章节：‌可以方便的跳转到前后文章、找到 steem的原文，以及回到顶部等：‌screenshots from steemblog: https://steemblog.github.io/@crowflew/or-or-or-or/‌当然，steem 上的奇文还有很多，如果你有觉得仔细希望阅读的作者，也不妨把他的账户分享给我，一起欣赏一下。‌（5）揭秘黑历史‌steemblog 不但能让有用的信息能够被快速查询到，还能让罪行无处遁形。是不是听着挺像一位侦探的？‌好吧，下面我们来看看 机机 @julian2013 和 村长 @ericet 是如何互黑的。（其实你们是不是更愿意看 软哥 @softmetal 和 小P @pgr 互黑的桥段？）‌到 steemblog 页面上，点击右上角的搜索进行“侦查”。‌—-‌机机谈论村长：‌screenshots from https://steemblog.github.io/@julian2013/‌—-‌村长评价机机：‌screenshots from https://steemblog.github.io/@ericet/‌—-‌看上去机机从来没说过村长“坏”话，而村长可不是这样。真的是这样吗？‌那么到底究竟说了什么呢？还是要各位自己去看才行。真相永远只有一个，看了以后不妨告诉我。‌（6）组织的起源‌其实相比查看人的文章，我更感兴趣组织的发展历史和起源，以及它们的生长过程，比如 @team-cn、@steemstem、@utopian-io，这里也为他们备份了镜像以便于追根溯源、温故知新：‌@team-cn‌screenshot from https://steemblog.github.io/@team-cn/page/45/‌—-‌@steemstem‌screenshot from https://steemblog.github.io/@steemstem/page/28/‌—-‌@utopian-io‌screenshot from https://steemblog.github.io/@utopian-io/page/33/‌希望这些团队不忘初心，破除艰险、勇往直前。‌—-‌以上这些例子，不知对你来说是不是也同样有趣或有帮助。‌如果需要帮你镜像博客，可以在文章后面留言，本次提供5个免费服务名额，先到先得~‌#3 进展‌相比于《用GitHub创建Steem文章镜像 | Mirroring Your Steem Blogs on GitHub | 免费博客备份服务： steemblog》中的描述，steemblog 最近也有一些功能和性能更新，这里简要介绍：‌编译性能优化：编译速度提高了大约有20~100倍。多平台部署：支持备份镜像到Netlify等平台。渲染优化：由于采用了组件，进行了优化以保证用户体验问题修复：比如类别（category）显示顺序、编译内存溢出等‌（1）编译性能优化‌其实 steemblog 的功能实现是相对比较简单的（可以参考上一篇文章）。但真正有困难的是在 hexo 的编译速度。‌hexo 虽然号称速度极快，但实际编译的时候简直是灾难。当然，原因不能完全归罪与 hexo 框架本身，更多是 hexo theme的问题。‌例如，以下是几个账户一开始的编译所有文章花费的时间：@andrewma: 400+ posts, 80+ tags, ~20 mins@ericet: 630+ posts, 260+ tags, &gt; 60 mins‌很多人的文章数量都接近这个量级，如果要全都同步的话，时间耗费还是很大的，每天更新就要消耗很多资源。‌除了优化编译方式，另一种是采用增量更新（即只编译新增加的文章）， hexo 虽然自称是支持增量更新的，但实际情况是基本不支持、且有很多潜在的问题。‌—-‌(a) 优化编译过程‌其实原先我只打算做一个简单的服务，不想在主题（theme）优化上花太多功夫，但真正用起来才发现开源世界并不是那么美好 :) ‌为了完成给大家的每天更新的承诺，以下是优化的方案。‌修改主题：由于我们采用的主题（https://github.com/ppoffice/hexo-theme-icarus）较多的使用了各种控件和大量使用了标签和分类等，使得功能较为强大，但带来的问题是编译成静态页面时的成本也很高，为了修复这个主题的问题，我们fork原来的项目，采用了修改后的主题：https://github.com/steemblog/hexo-theme-icarus大量使用缓存（cache）：hexo 自带有fragment_cache和partial方法，以方便缓存重复使用的组件（如head, footer, sidebar等），但 theme 的作者有时候不清楚可以这样使用，所以我们需要修改。控件页面分离：除了使用cache，像很多组件是可以通过 iframe 或者 ajax 异步加载的形式来展示的，这样可以在实现静态页面的时候减少很多冗余的 控件的 html，减少文件大小、提高效率。采用时间线布局：原来的 index、tag、archive等页面，都采用了直接展示文章内容的布局，其实不是很有必要，不方便阅读而且使得静态 html 页面变得很庞大。所以我们改成了 timeline 的 layout。增加每页文章数量：默认的分页是 6 篇文章一页，对于时间线模式是太少了，所以改成了 20 篇文章一页。编译的速度受页面数量影响很大，而一页展示的文章多了，html 页面总数自然就少了、速度会有明显提高。‌策略1：修改主题：‌.gitmodules 1[submodule &quot;theme&quot;] path = themes/icarus url = https://github.com/steemblog/hexo-theme-icarus.git ‌‌code from https://github.com/steemblog/blog | MIT License‌ 策略2：大量使用缓存（cache）‌themes/icarus/layout/layout.ejs 12345678910111213141516171819202122232425262728293031323334353637383940&lt;% if (page.__widget) { %&gt;&lt;%- body %&gt;&lt;% } else { %&gt;&lt;!DOCTYPE html&gt;&lt;html &lt;%- has_config(&apos;language&apos;) ? &apos; lang=&quot;&apos; + get_config(&apos;language&apos;).substring(0, 2) + &apos;&quot;&apos; : &apos;&apos; %&gt;&gt;&lt;head&gt; &lt;%- partial(&apos;common/head&apos;, {}, {cache: false}) %&gt;&lt;/head&gt;&lt;body class=&quot;is-&lt;%= column_count() %&gt;-column&quot;&gt; &lt;%- partial(&apos;common/navbar&apos;, { page }) %&gt; &lt;% function main_column_class() { switch (column_count()) { case 1: return &apos;is-12&apos;; case 2: return &apos;is-8-tablet is-8-desktop is-8-widescreen&apos;; case 3: return &apos;is-8-tablet is-8-desktop is-6-widescreen&apos; } return &apos;&apos;; } %&gt; &lt;section class=&quot;section&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;columns&quot;&gt; &lt;%- partial(&apos;common/widget&apos;, { position: &apos;left&apos; }) %&gt; &lt;%- partial(&apos;common/widget&apos;, { position: &apos;right&apos; }) %&gt; &lt;%- partial(&apos;component/pjax_widget_js&apos;, {}, {cache: true}) %&gt; &lt;div class=&quot;column &lt;%= main_column_class() %&gt; has-order-2 column-main&quot;&gt;&lt;%- body %&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;%- partial(&apos;common/footer&apos;, {}, {cache: true}) %&gt; &lt;%- partial(&apos;common/scripts&apos;, {}, {cache: true}) %&gt; &lt;% if (has_config(&apos;search.type&apos;)) { %&gt; &lt;%- partial(&apos;search/&apos; + get_config(&apos;search.type&apos;), {}, {cache: true}) %&gt; &lt;% } %&gt;&lt;/body&gt;&lt;/html&gt;&lt;% } %&gt; code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌对于重复的模块，使用 partial(‘component’, {param}, {cache: true}) 来替换原来的实现‌策略3：控件页面分离‌将原来的 profile, recent_posts, category, tag, tagcloud, archive 等组件，生成独立的 html 页面，减少冗余的 html。此外，组件采用独立的页面也是实现增量编译所必须完成的，所以这一步必须要做。‌themes/icarus/layout/layout.ejs 需要修改 generators，生成新的 widgets 页面。 1234567891011121314151617181920/** * Widget page generator */module.exports = function (hexo) { hexo.extend.generator.register(&apos;widget&apos;, function (locals) { const widgets = hexo.extend.helper.get(&apos;get_config&apos;).bind(this)(&apos;widgets&apos;); const component_widgets = widgets.filter((w) =&gt; (w.component)) return component_widgets.map(function(widget){ return { path: `widgets/${widget.type}.html`, layout: &apos;component/pjax_widget_src&apos;, data: { widget: widget, __widget: true } }; }); });} ‌code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌themes/icarus/layout/component/pjax_widget_ref.ejs 将原来的组件用对页面的引用替换。 12345&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;div id=&quot;widget-&lt;%= widget.type %&gt;&quot; data-pjax=&quot;&lt;%= `${get_config(&quot;root&quot;)}widgets/${widget.type}` %&gt;.html&quot; style=&quot;position: relative; width: 100%; display: block;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌themes/icarus/layout/component/pjax_widget_src.ejs 对不同的组件，获取对应的内容 1&lt;%- partial(`widget/content/${page.widget.type}`, {widget: page.widget}) %&gt; code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌themes/icarus/source/js/pjax_widget.js 在页面加载时通过 ajax 来通过url获取组件的 html，替换控件的内容为实际内容。 123456789101112131415161718192021222324252627282930if (typeof(jQuery) !== &apos;undefined&apos;) { (function($){ function load_pjax(element) { // $.pjax({url: element.attr(&quot;data-pjax&quot;), container: &quot;#&quot;+element.attr(&quot;id&quot;)}) $.get(element.attr(&quot;data-pjax&quot;), function(data) { element.html(data); }); } $(&quot;div[data-pjax]&quot;).each(function(){ load_pjax($(this)); }) })(jQuery);} else { (function(){ window.$ = document.querySelectorAll.bind(document); function load_pjax(element) { const url = element.getAttribute(&quot;data-pjax&quot;) const xhr = new XMLHttpRequest(); xhr.open(&apos;GET&apos;, url); xhr.onload = function() { element.innerHTML = xhr.responseText; }; xhr.send(); } for (const e of $(&quot;div[data-pjax]&quot;)) { load_pjax(e); } })();} code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌themes/icarus/layout/common/widget.ejs 对控件，也要添加 cache 模式，减少冗余。 123456789101112131415161718192021222324&lt;% function render_widget(widget) { const component = widget.component || false; const cache = widget.cache || false; if (component) { const cahced_prefix = cache ? &apos;cached_&apos; : &apos;&apos;; const template = `component/${cahced_prefix}pjax_widget_ref`; return partial(template, { widget }) } else { return partial(&apos;widget/&apos; + widget.type, { widget, post: page }, {cache: cache}); }} %&gt;&lt;div class=&quot;column &lt;%= side_column_class() %&gt; &lt;%= visibility_class() %&gt; &lt;%= order_class() %&gt; column-&lt;%= position %&gt; &lt;%= sticky_class(position) %&gt;&quot;&gt; &lt;% get_widgets(position).forEach(widget =&gt; {%&gt; &lt;%- render_widget(widget) %&gt; &lt;% }) %&gt; &lt;% if (position === &apos;left&apos;) { %&gt; &lt;div class=&quot;column-right-shadow is-hidden-widescreen &lt;%= sticky_class(&apos;right&apos;) %&gt;&quot;&gt; &lt;% get_widgets(&apos;right&apos;).forEach(widget =&gt; {%&gt; &lt;%- render_widget(widget) %&gt; &lt;% }) %&gt; &lt;/div&gt; &lt;% } %&gt;&lt;/div&gt;&lt;% } %&gt; ‌code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌此外，每个组件都要重构将内容独立出来，这里不详细解释了。‌策略4：采用时间线布局‌将categories和tags页面的布局都显示为时间线模式，更容易浏览，且页面所占空间更小。‌以 category 为例，展示为时间线 + 分页：‌themes/icarus/layout/category.js 1234567891011121314151617&lt;div class=&quot;card&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;nav class=&quot;breadcrumb&quot; aria-label=&quot;breadcrumbs&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;&lt;%- url_for(&apos;/categories&apos;) %&gt;&quot;&gt;&lt;%= _p(&apos;common.category&apos;, Infinity) %&gt;&lt;/a&gt;&lt;/li&gt; &lt;% page.parents.forEach(category =&gt; { %&gt; &lt;li&gt;&lt;a href=&quot;&lt;%- url_for(category.path) %&gt;&quot;&gt;&lt;%= category.name %&gt;&lt;/a&gt;&lt;/li&gt; &lt;% }) %&gt; &lt;li class=&quot;is-active&quot;&gt;&lt;a href=&quot;#&quot; aria-current=&quot;page&quot;&gt;&lt;%= page.category %&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/nav&gt; &lt;/div&gt;&lt;/div&gt;&lt;%- partial(&quot;component/timeline&quot;, {posts: page.posts}) %&gt;&lt;% if (page.total &gt; 1) { %&gt; &lt;%- partial(&apos;common/paginator&apos;) %&gt;&lt;% } %&gt; code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌采用时间线以后，同时也会每个展示的 item 添加 cache：‌themes/icarus/layout/component/timeline.js 1234567891011121314&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;% if (typeof(head) !== &apos;undefined&apos; &amp;amp;&amp;amp; head) { %&gt; &lt;h3 class=&quot;tag is-link&quot;&gt; &lt;%= head %&gt; &lt;/h3&gt; &lt;% } %&gt; &lt;div class=&quot;timeline&quot;&gt; &lt;% posts.each(post =&gt; { %&gt; &lt;%- partial(&quot;component/cached_item&quot;, {post}) %&gt; &lt;% }) %&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌策略5：增加每页的文章数量‌可以有效减少页面总数，减少编译的负担。‌blog/message.py 123456789101112131415161718# Pagination## Set per_page to 0 to disable paginationper_page: 6pagination_dir: pageindex_generator: per_page: 6archive_generator: per_page: 20 yearly: true monthly: truecategory_generator: per_page: 20tag_generator: per_page: 20 code from https://github.com/steemblog/blog | MIT License‌经过以上各类方案，编译所有文章的速度已经得到的极大的提高，大约已经提到了10~50倍了。@andrewma: 400+ posts, 80+ tags, 1~2 mins@ericet: 630+ posts, 260+ tags, 1~2 mins‌(b) 实现增量编译‌但我们的目标是增量更新，为了实现这个目的，我们需要做两方面修改：‌增量生成markdown：无须每次都从 steem 获取 posts 并生成 markdown；只编译受影响的 html 文件：修改 hexo 的 tag, category, archive, 和 post的generators，只在 html 受影响时生成。‌步骤1：增量生成 markdown‌为了不重复生成过去的posts的 markdown 文件，我们用 git repo 来管理过去已经生成的 markdown 文件，并只更新最近1天左右的文章。‌同时，我们需要和之前的 source 对比，从而知道哪些文章需要更新。‌blog/builder.py 123456789101112131415161718192021222324252627def setup_source_repo(self): git_clone_cmd = &quot;git clone --depth 1 --branch {} --single-branch https://{}github.com/{}.git {}&quot;.format(SOURCE_BRANCH, self._get_github_pat(), self._get_repo(prefix=False), SOURCE_REPO_FOLDER) os.system(git_clone_cmd) # on `source` branch after clone logger.info(&quot;Cloned source repo into workspace: {}&quot;.format(SOURCE_REPO_FOLDER))def _commit_source(self): os.chdir(SOURCE_REPO_FOLDER) # commit the files into source repo os.system(&quot;git add --all *&quot;) res = os.system(&apos;git commit -m &quot;Source updated: {}&quot;&apos;.format(get_uct_time_str())) os.chdir(&quot;..&quot;) if res == 0: logger.info(&quot;Commited source into [{}] folder&quot;.format(SOURCE_REPO_FOLDER)) return True else: logger.info(&quot;Failed to add new source into [{}] folder&quot;.format(SOURCE_REPO_FOLDER)) return Falsedef _diff_files(self): os.chdir(SOURCE_REPO_FOLDER) res = subprocess.run([&apos;git&apos;, &apos;diff&apos;, &apos;HEAD&apos;, &apos;HEAD~1&apos;, &apos;--name-only&apos;], stdout=subprocess.PIPE).stdout.decode(&apos;utf-8&apos;) os.chdir(&quot;..&quot;) files = [f for f in res.split(&quot;\\n&quot;) if len(f) &gt; 0] logger.info(&quot;{} different files:\\n{}&quot;.format(len(files), res)) return files code from https://github.com/steemblog/blog | MIT License‌为了保证每个用户运行时，文章的内容不会混乱，需要多source的workspace也做一些管理，这里不详细叙述了。‌步骤2：只编译受影响的 html 文件‌在用主题进行编译时，也需要知道哪些 markdown 文件需要更新，以及由此判断更新哪些 html。‌themes/icarus/includes/helpers/diff.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445hexo.extend.helper.register(&apos;list_updated_posts&apos;, function (link) { if (_posts.length == 0) { process.chdir(&quot;source&quot;) const res = execSync(&quot;git diff --name-only --cached&quot;).toString(&apos;utf8&apos;); process.chdir(&quot;..&quot;) const paths = res.split(&quot;\\n&quot;).filter((p)=&gt;(p.length &gt; 0)) _posts = paths } return _posts});hexo.extend.helper.register(&apos;list_updated_categories&apos;, function (link) { if (_categoreis.length == 0) { const _list_updated_posts = hexo.extend.helper.get(&apos;list_updated_posts&apos;).bind(this) const updated_posts = _list_updated_posts(); if (updated_posts.length &gt; 0) { for (const path of updated_posts) { let post = Post.findOne({source: path}) if (post) { _merge_categories(post.categories); } } } } return _categoreis});hexo.extend.helper.register(&apos;list_updated_tags&apos;, function (link) { if (_tags.length == 0) { const _list_updated_posts = hexo.extend.helper.get(&apos;list_updated_posts&apos;).bind(this) const updated_posts = _list_updated_posts(); if (updated_posts.length &gt; 0) { for (const path of updated_posts) { let post = Post.findOne({source: path}) if (post) { _merge_tags(post.tags); } } } } return _tags}); code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌在 generators 中，只考虑那些受影响的文件。以category 为例：‌themes/icarus/includes/generators/category.js 12345678910111213141516171819202122232425262728293031function needs_update(category) { if (config.incremental) { // in incremental mode, update the affected category pages only const updated_categories = list_updated_categories(); if (updated_categories &amp;amp;&amp;amp; updated_categories.length &gt; 0 &amp;amp;&amp;amp; updated_categories.indexOf(category[&apos;name&apos;]) != -1) { return true; } return false; } return true;}return locals.categories.reduce(function(result, category){ if (! needs_update(category)) { return result; } const posts = category.posts.sort(&apos;-date&apos;); const data = pagination(category.path, posts, { perPage: perPage, layout: [&apos;category&apos;, &apos;archive&apos;, &apos;index&apos;], format: paginationDir + &apos;/%d/&apos;, data: { category: category.name, parents: findParent(category) } }); return result.concat(data);}, []); code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌需要注意的是，这里需要找到 hexo 对应的几个 generator 的源码，并将其进行替换，例如 hexo-generator-tag、hexo-generator-category、hexo-generator-archive ‌—‌实现增量编译以后，经过测试，大概每天更新时，每个账户消耗的时间大约在几秒钟 到1分钟之间。12个账户更新时，总的耗时大约在2分钟至10分钟左右，包括环境部署的时间。@andrewma: 400+ posts, 80+ tags, ~17s@ericet: 630+ posts, 260+ tags, &lt; 1min‌—-‌至此，编译性能优化的工作告一段落，可以支持更多账户的镜像同步了。‌（2）多平台部署‌除了 GitHub pages，现在常用的静态网站部署方式还有Netlify等。只需要按照Netlify的界面上步骤操作即可，或者参考 hexo deployment 一节的描述。‌作为结果，我们可以将页面部署到不同环境：‌Netlify: https://steemblog.netlify.com/@robertyan/GitHub pages: https://steemblog.github.io/@robertyan/‌注意：Netlify上目前只部署了 @robertyan 的文章，但也可以支持其他账户。‌（3）渲染优化‌由于采用了组件化的 html 页面内，在上文提到过需要动态加载 widget 的页面，由于页面加载资源的阻塞等问题，我们需要对页面做一些优化才能保证 widget 的渲染不被图片等资源影响太大。‌这里主要是在 widget 的占位符组件被渲染以后，立即调用 ajax 加载组件的代码，以尽早显示这些 widgets；否则，首页打开时的卡顿还是挺明显的。‌themes/icarus/layout/layout.ejs 12345678910&lt;section class=&quot;section&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;columns&quot;&gt; &lt;%- partial(&apos;common/widget&apos;, { position: &apos;left&apos; }) %&gt; &lt;%- partial(&apos;common/widget&apos;, { position: &apos;right&apos; }) %&gt; &lt;%- partial(&apos;component/pjax_widget_js&apos;, {}, {cache: true}) %&gt; &lt;div class=&quot;column &lt;%= main_column_class() %&gt; has-order-2 column-main&quot;&gt;&lt;%- body %&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt; code from https://github.com/steemblog/hexo-theme-icarus | MIT License‌主要需要优化的渲染过程就是组件的渲染，其余目前并未做更多测试。‌（4）问题修复‌除了以上提到的问题，由于在编译或展示时还需要一些别的问题，也一同修复了。‌@andrewma 想可以将 category 和 tag 等按使用频率从大到小排序；编译 @lemooljiang 的博客时，产生 node / v8 的内存溢出问题，编译失败。这些问题较容易修改：前者只需渲染前进行排序；后者需要对node运行的参数进行配置，改上限为8GB。后者的修改在：‌blog/command.py 123def configure(): settings.set_env_var(&quot;NODE_OPTIONS&quot;, &quot;--max-old-space-size=8192&quot;) os.system(&quot;cp -f _config.theme.yml themes/icarus/_config.yml&quot;) #4 未来 ‌steemblog 实现时 只是为了满足更好的阅读、搜索文章的需要。简言之，它是一个更好的博客“阅读器”（当然也是一个有趣的“时光机”），并不具有写的功能。‌ 这是它想要解决的问题决定的，但它的未来可以有着有趣的发展方向，我们从小和大两个方面来讲。‌ —-‌ 小：从steemblog的角度来讲，我们可以做各类改进，包括功能、性能、运营等。‌ 功能：支持语言切换、主题切换、留言（原来就有，为了性能隐藏了）、图片本地保存等性能：hexo 模板的渲染速度可进一步优化运营：可以扩展现有系统以支持更多用户、可以考虑付费模式以满足更多需求（费用可能是一次性 10 STEEM 之类的）扩展：用户可以借助此框架和其他建站服务，快速构建基于 steem 数据的各种网站，包括博客、简历、图库等，以及各种基于 steem 数据的展示组件、基于 steem-js 的写操作 等等； ‌—- 大：steemblog 展示了一种基于blockchain 的 app 的更多的可能性。为什么这么说呢？主要原因如下：‌ 一份数据、多种展示：与传统数据库相比，blockchain 数据库的公开性和可访问性使得它可以被方便用于基于同一份数据构建多种应用。这也是dApp有趣的方面。steemblog 通过 将 steem blockchain 的数据，进行二次加工，形成了不同的展示方式，这体现了一份数据、多种应用场景的特点。 steemblog 的意图和 steemit 等客户端不完全相同。这里强调的展示有更多 “数据应用”（data apps）的意味，并不全然是 web app 或者 mobile app的视角。分久必合、强调综合：steem 等区块链平台，现在流行的 dApp 以web app的思维，不断产生新的应用和平台，使得数据不断分化、分裂，到了一定复杂度后，需要一个可以集中管理各类数据与事务的调度中心，steemblog 对于历史的总览体现了这一种思想的一个方面。数据基础的改进方向：steem 类应用的用户体验的局限性一部分在于其数据基础设施的不灵活与低效，steemblog 通过分离数据读和写，改进了用户体验，但这只是一个方向。blockchain 数据基础设施有着更多的发展的可能性。社会：生产还是消费？：steemblog 把 steem 数据展现出的一个用户的能力、经验、历史等方面，更有效的展现出来，这是一个更具有生产、企业或产业角度的意义的展示。 steemblog 可以让我们更清楚地看到一个用户的时间是如何被应用与转化的。这种方式对于大规模协作的价值大于娱乐消费型 app 的需要。 这只是一个大致的方向，或许随着思考的深入我们可以把它演变成新的应用。‌ 但有三点应该是对的：（1）你在 steem 的历史不会消失；（2）更好的时光机将会不断被发明出来；（3）未来必定会来到。‌ 基于这些前提，我们或许能不断看到更多有趣的应用吧。‌ —-‌ 昨天 @holger80 在 discord 和我聊到了关于 hexo theme 的问题，同时创建了 steemsites 这个项目（https://github.com/holgern/steemsites），可能也有通过 steem 构建站点，或者其他方面的考虑。‌ 对于 steemblog 和相关的项目，我们在之后会进一步思考和探索。如有任何建议请随时留言讨论~‌ 参考文献 Hexo博客框架：https://hexo.ioHexo icaru 主题：修改后：https://github.com/steemblog/hexo-theme-icarus原作者：https://github.com/ppoffice/hexo-theme-icarussteemblog 博客镜像服务：https://steemblog.github.io/ (源码：https://github.com/steemblog/blog | MIT License) Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/steemblog-steem%e6%97%b6%e5%85%89%e6%9c%ba-steem-time-machine This page is synchronized from the post: steemblog: Steem时光机 | Steem Time Machine document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemblogsteemsteemtimemachine-esbs7xa7wo/"},{"title":"Steem Links：《Steem指南》子项目 | Subproject of Steem Guides","text":"缘由 ‌在微信群里经常看到大家在询问各种链接：‌ 《Steem指南》的链接（我经常被召唤。。。）；各种移动客户端的APK文件的链接（Partiko, Wherein, eSteem）；steem-engine 的链接；查看各种数据的链接；各种工具的链接；最新活动的链接；… ‌ 为了方便大家找这些链接，《Steem指南》创建了一个子项目：steem links，用于整理和分享各种最常用的链接。‌ 好了，就是这样一个很简单的项目。‌ 介绍 steem links（中文版）：https://steem-guides.github.io/links/zh ‌steem link 收录了最常用的平台、客户端、工具、数据统计、dApp、教程、人物介绍、活动等最常用的一些链接，如下图所示。 ‌screenshots from https://steem-guides.github.io/links/zh‌ 如果要找某些常用的链接，记住上面这个链接收集的帖子就好了，再也不用到处找了。欢迎收藏这个链接页面，以及转发分享、帮助其他人！！ 当然，现在内容还很不完善，欢迎大家一起来提供建议和补充最常用的链接。‌ 参与 ‌如果希望分享一个或几个新的链接，加入到 steem links里，有三种基本的方式：‌ 如果你会用GitHub可以点击页面上的编辑链接，通过commit、pull request的方式来提交改动；如果你不太了解GitHub的pull request的话，可以点击提交建议链接，通过填写 issue 的方式来提交；如果以上两种都不会，可以直接在本帖下面留言提供你的建议。 ‌ 提交建议的示例： ‌screenshot from GitHub: https://github.com/steem-guides/links/issues/new‌ 对于有价值的贡献，@steem-guides 将提供一定的 NBC 和 点赞奖励（Steem和SCT），期待大家的建议~ 也希望这个页面对你有用。‌ 参考文献 steem links的页面主题：https://github.com/pages-themes/minimal Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/05/steem-links%ef%bc%9a%e3%80%8asteem%e6%8c%87%e5%8d%97%e3%80%8b%e5%ad%90%e9%a1%b9%e7%9b%ae-subproject-of-steem-guides This page is synchronized from the post: Steem Links：《Steem指南》子项目 | Subproject of Steem Guides document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemlinkssteemsubprojectofsteemguides-xzf1zbwu08/"},{"title":"Steem 花名册：《Steem指北》子项目 | Steem Roster: A Sub-Project of Steem-People","text":"本文介绍【花名册】项目：‌Steem Roster：https://steem-guides.github.io/roster/‌ 缘由 昨天我们介绍了《Steem指南》的子项目 Steem Links，虽然是简单的一页纸，但是我觉得还是挺实用的。对我来说，有个地方可以存常用的链接还挺方便的。‌ 今天要说的这个新项目 ”花名册“，相比之下，要更水一点。。。‌ 类似的项目以前也出现过一些，比如各种榜单，但这个项目的目的更单纯，只是为了帮助新人学会如何称呼社区里的成员的诨名/花名/村民/绰号等等。只有学会称呼社区里的朋友了，才好连线、才好合作、才好交流。‌ “称呼”是语言中极为重要的一个环节，各种公司、组织内部的各种简称、代号、别名流行，并不是偶然的，这是一种文化建设的过程。毕竟通过称呼别名，可以促进更多元的交流，比只称呼“前辈”、“大佬”、”您好“要有趣的多，但融入和适应的过程也是一直存在的。‌ 今天要说这个项目，因为我在回复 @also.einstein 消息的时候，一时头脑短路想不起他的村名了，去翻文章和聊天记录查找又成本太高，所以出现了下面的对话： ‌screenshot from https://steemit.com/@also.einstein/also-einstein-re-robertyan-robertyan-re-ericet-steem-62ocxecwqs-20190601t021732313z‌ 其实我原来也计划把 “花名册” 用脚本收集起来，正好今天又遇到这个问题，所以就快速建了这个项目。希望可以帮助到“记忆力差”的社区“老人”，以及刚进入社区的“新人”们。‌ 介绍 Steem 花名册（中文版）：https://steem-guides.github.io/links/zh ‌ 这个项目比昨天介绍的 Steem Links（https://steem-guides.github.io/links/zh）更简单。‌ 无他，只有一份花名册而已。 screenshots from https://steem-guides.github.io/roster/‌ 为了实现花名册，我们可以从文章和留言讨论的对话中进行文本分析，得出对某人的常见称呼有哪些。但目前只做了最简单的一步，通过获取 @teamcn-shop 新手村小卖部日报 发布的文章，进行字符匹配，获取了部分村名（共63名）。‌ 由于数据局限于小卖部，所以没有涵盖很多 CN区的 用户，有很大的缺失。另外，有些人的别名有过变化，也可以看出来。 目前的名单如下： 用户别名@aaronli阿柔 我叫伦舞@abcallen阿兰@aellly瓜叔笑容满面，还自备西瓜汁 / 瓜叔@also.einstein亦亦@alvin0617Alvin / 小红@angelina6688朱师傅@annepink萍萍@artsymelanie美丽姐 / 美丽@auleo榴莲王子 阿奥 / 阿奥@cecilian粥粥@changxiu北北@cherryzz阿紫@coder-btsBTS@crypto.talk大灰灰@davidke20拉仔@elizachengEliza@ericet村长@honeyday罗罗@honoru米高哥 / 米高@itchyfeetdonica阿朵@julian2013小机机@justyy行长@kadishakho卡姐@kelvinzhang老K@kidsreturn小兔子一蹦一跳 / 小兔子@kristylkho卡宝 / 小佩@liubao阿宝@liumei阿美 / 阿花@liuzg老刘头@loongxiew隆哥@mfxqaq小孟@mia-cc斤斤@miniu阿敏@minloulou迷路@nostalgic1212小冰@olymim阿胖@pgr小P@pizzapai批萨姐@robertyan阿盐@sasaadrian一灯大师@shenchensucc铁柱@shine.wong金闪闪@simpleslife阿安@slientstorm阿杰@softmetal软哥@stabilowl笔哥@starrouge阿星@sunai三妞@tanlikming阿力@team-cn新手村@tydebbie小迪@weisheng167388金老师@wilhb81小智&amp;小白条 / 小智 &amp; 小白条@windowglass糖糖@winnie1998负婆@wongshiying老王@xiaoguai小乖@xiaoyuanwmm村长夫人@yanyanbebe茵茵@yellowbird黄鸟@ygrj阿洁@zerofive欧爷@zy-sb二姐 相信不是所有人都需要这份花名册，花名册里的名称与实际使用情况也不完全一致，有了名册也不一定会正确使用。但有了这份名单，新人在群里聊天时、或者请教问题时，更容易分清谁是谁了。。。‌ 是记住 Steem的ID 容易，还是记住花名容易呢？这个确实因人而异，像 @m18207319997 兄（别名：大猛/平健/小m）的ID，就比较难记忆。。。 所以 Steem Roster 究竟如何使用，大家可以自行思考和挖掘，因人而异。有任何建议或反对意见，可以随时提供~‌ 实现 ‌本项目的源代码可以在这里找到：https://github.com/steem-guides/roster （MIT License）‌ 实现很简单就不详述了。仅说两点：‌ 数据源：在上文已经提到过是从 @teamcn-shop 的每日报告中获取的，未来可能也会参考更多数据源；其实也可以直接向 @ericet 要 @teamcn-shop 的原始数据，但这也并不够灵活，目前的做法也还算有效。更新频率：目前是每天更新一次；但新人一旦了解以后，可能通常不会反复阅读，所以这一点的意义仅在于保证数据最新。 ‌之后，根据大家的反馈和建议，我们会不断完善花名册这个小项目 :)‌ 八卦 ‌八卦故事，是人类文明中重要的故事的一部分，从神话传说到稗官野史到民间轶事，都是如此。‌ 《Steem指北》 的创作目的是”人物和八卦“，相比起《Steem指南》理性的规则与策略介绍，充满情感、不确定性、猜测和争议的“八卦”和“评传”更容易引起普通读者的兴趣。‌ 千古之下，一时之人物皆有评传，帝王亦有谥号，只不过不同人来评价时，观点也常迥异，所以谁来做“史”，历来都是重要的。‌ 当前，我们还没有立即恢复《Steem指北》的强烈动机，或许因为缺乏一位胆识超绝、情感充沛的史家有关，也或许时事还不够壮烈与跌宕，虽有人记载，但未能引起共鸣。 ‌本图由 @maiyude 设计‌ 相比《Steem指北》， 新手村访谈 则更务实一些，以自我介绍为开端，向社区广播新人的信息，也是一种重要的帮助新人拓展社会关系的手段。‌ 知人、识人，在任何社会、组织和社区都是有意义的功课，对于想在社区开心玩耍或者有所施展的新人而言，找到你的导师、你的合作者、你的同路人，或多或少都有些意义。‌ 而这，可以从你先正确的发现和称呼他们开始，就此一点，希望“花名册”、《Steem指北》、新手村访谈 对你有用。:)‌ 参考文献 @dapeng，《Steem 指北：人物与八卦》编写启动，2018/03/26 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/06/steem-%e8%8a%b1%e5%90%8d%e5%86%8c%ef%bc%9a%e3%80%8asteem%e6%8c%87%e5%8c%97%e3%80%8b%e5%ad%90%e9%a1%b9%e7%9b%ae-steem-roster-a-sub-project-of-steem-people This page is synchronized from the post: Steem 花名册：《Steem指北》子项目 | Steem Roster: A Sub-Project of Steem-People document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemsteemsteemrosterasub-projectofsteem-people-5may1ue6ma/"},{"title":"真·花名册 | Update of Steem Roster","text":"本文是【花名册】项目的简要更新：‌花名册 | Steem Roster：https://steem-guides.github.io/roster/‌screenshot from: https://steem-guides.github.io/roster/‌回顾昨天我们分享了【花名册】（Steem Roster），用于帮助大家认识和分享CN区的朋友的诨名/花名/村民/绰号。‌昨天分享的花名册中，总共包含了63位朋友的花名，但我审阅了一会发现了两个问题：‌有很多重要的社区名人们都不在花名中，这显然不是一个有权威性的名册，恐贻笑大方。比如 阿廖 @htliao，O神 @oflyhigh，大伟哥 @rivalhw，坛子 @tumutanzi有的花名则不够全面：比如 @julian2013 居然只叫小机机，而没有 机大爷的尊号；@shenchensucc 居然只有铁柱的村名，连Buddy爸爸都不在列表中。‌为了修复这些问题，我们增加了【花名册】找花名的数据源，此修改将在下一节介绍。‌改进‌前文中，我们提到使用的数据源主要是：@teamcn-shop 新手村小卖部日报 的报告，但只有这个显然还是不够的。为了扩充数据源，我们想起小卖部送外卖时也会使用很多“村名”，例如‌screenshots from busy.org: 来自这条留言‌ 刚才，村长在本文的留言中，又提供了新手村毕业典礼的数据源（https://steemblog.github.io/@team-cn/egxwc0ewsi/），我们把这个名单也加到了要检索的数据中。 所以我们将现在的数据源扩展到了下面三类：‌ @teamcn-shop 新手村小卖部日报: https://steemit.com/@teamcn-shop@teamcn-shop 新手村小卖部 送外卖给客户时的留言；@teamcn 新手村毕业典礼的名单； 经过修改后，我们现在总共包含了118位朋友的花名。下面是他们的花名，也可以在 https://steem-guides.github.io/roster/ 查看。 用户别名@aaronli阿柔 我叫伦舞 / 阿柔@abcallen阿兰 / Allen / 鸭伦@aellly瓜叔笑容满面，还自备西瓜汁 / 瓜叔 / 西瓜 / 瓜子@also.einstein亦亦@alvin0617Alvin / 小红@amanda8250阿曼@angelina6688朱师傅 / 朱莉@annepink萍萍@artsymelanie美丽姐 / 美丽 / 王美丽 / MW / 分子量@auleo榴莲王子 阿奥 / 阿奥@bichen芒果@biorabbit思想家@cairou包子@ceci99斤斤@cecilian粥粥@changxiu北北@cherryzz阿紫 / Cherry@chineseman大饼@circlepoint圈点@coder-btsBTS / 码农@crowflew维参@crypto.talk大灰灰@cryptocurrencyhk小编@dapeng大鹏哥@darrenych86华仔@davidchen勇敢@davidke20拉仔 / 金鱼佬@deanliu刘美女@elizachengEliza@ericet村长 / 村Long / 村龙 / 村村@fishlucy露西 / 鱼露@gerer晨歌@hansheng鸭子@honeyday罗罗@honoru米高哥 / 米高 / Michael / 村书记 / 村高@htliao阿廖 / HT@huiguannova元元@iguazi123瓜子@ishenyaya曲曲@itchyfeetdonica阿朵@janicechua佩芯@jianan嘉南@jiangchen姜臣 / 姜辰@joythewandererJoy@julian2013小机机 / 机大爷@justyy行长 / 富根@kadishakho卡姐@kelvinzhang老K / kelvin@kidsreturn小兔子一蹦一跳 / 小兔子 / Mandy / 兔兔 / 兔子@kristylkho卡宝 / 小佩@laoma老马@lifelikeline金樽上 / 板凳作家 / Robert@littlexiannv小仙女@liubao阿宝@liumei阿美 / 阿花@liuzg老刘头 / 刘老头@loongxiew隆哥@lucindagoLulu@lulucy小鹿@maggieliew1704Maggie / 美琪@mfxqaq小孟@mia-cc斤斤@miniu阿敏@minloulou迷路@minminlou小迷路@morningshine小K@nostalgic1212小冰@odillegoghOdille@oflyhighO哥@olymim阿胖@peanut77花生阿姨@pgr小P / 老艺术家 / 老shi艺术家 / 鸡贼老艺术家 / 小R / 屁股热@pizzapai批萨姐 / 披萨姐@raynopssgold小昇@rivalhw大伟哥@robertyan阿盐@robin.hanRobin@sasaadrian一灯大师@sharonqian虾仁 / Sharon@shenchensucc铁柱 / Buddy爸爸 / buddy爸爸 / buddy粑粑@sherry.gongSherry@shine.wong金闪闪@simpleslife阿安@slientstorm阿杰 / 小杰@snailsong小松@softmetal软哥 / 软扣扣 / 软校长 / 铁蛋 / 村宽@stabilowl笔哥@starrouge阿星@stepbie曾老公 / Stephen@sunai三妞@tanlikming阿力@team-cn新手村@thedreamsun66小刘@tiffany4everITC9 / 师太@tumutanzi坛爷@tvb一姐@tydebbie小迪 / Debbie / 小娣@valleybkk腿 / Ham@wanggang钢哥 / 钢天使@weisheng167388金老师 / 金兽@weitz大柱@wilhb81小智&amp;小白条 / 小智 &amp; 小白条 / 小智@windowglass糖糖@winnie1998负婆@wongshiying老王@wuer吾儿@xiaoguai小乖@xiaoliu六子@xiaoshancun三哥@xiaoxiangyun阿云@xiaoyuanwmm村长夫人 / 村凤@yanhan小萍萍@yanyanbebe茵茵@yellowbird黄鸟@ygrj阿洁@zerofive欧爷@zilin蔚阿姨@zy-sb二姐table from: https://steem-guides.github.io/roster/‌ 但需要注意，这个名册依然是不够完整的，一些CN区的热心用户并不在其中，我们在之后也将进一步扩展数据源，完善名册。‌ 另外，除了从花名册的网页访问，如果需要原始数据，可以通过下面这个链接下载最新的CSV文件，进行使用或处理。‌ roster.csv: https://raw.githubusercontent.com/steem-guides/roster/gh-pages/roster.csv ‌ 扬名 对于新人而言，有一个靠谱的绰号，还是很有必要的，至少证明你一定程度上融入了社区。当然一方面也是因为我们这个圈子还没有那么大，所以很多人还是能叫得上“村名”的。如果人口达到了几百万，要管理你的社交圈可能就又得采用不同的方式了。‌ 那么作为新人应该如何获得一个“别名”呢？当然，你可以在自己的自我介绍（#introduceyourself）文章中直接告知你愿意被如何称呼，但其实未必有效。‌ 如果你是新手，目前可行的做法大概如下：‌ 加入 新手村 @team-cn 的微信群，那么几乎你加入新手村的同时，会被赐予一个“村名”（嘿嘿嘿!!!）；或者至少在 Steem 上有一定的活跃度，发表有意义的内容、积极参与互动，引起他人的关注；有可能的话，你可能会收到《新手村访谈》的邀请，对你进行访谈，那么你的村名可能会有更多人知道；随着你的“作品”（不光是写作）的增加，可能会有越来越多的人认识你，这时你的花名，可能就已经有一定影响力了。“花名册”也可能会以你为荣。 ‌ 当然，这只是新人踏足 Steem 世界的第一步。但在武侠世界里，不论什么角色，取个合适的名字还有一定意义的，但也不尽然：‌ 取名“郭靖”，一看就是要誓雪“靖康之耻”的“岳武穆”式人物（“靖康耻，犹未雪；臣子恨，何时灭”）；取名“杨过”（字改之），一出生就背负了“原罪”，成长的过程也难免艰辛；但取名“张无忌”，办事却不一定无忌，反而处处优柔寡断； ‌ 最后，祝愿新人们在Steem，不仅有个不错的花名，也度过一段快乐的旅行。‌ 参考文献 @robertyan，Steem 花名册：《Steem指北》子项目 | Steem Roster: A Sub-Project of Steem-People，2019/06/01 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/06/%e7%9c%9f%c2%b7%e8%8a%b1%e5%90%8d%e5%86%8c-update-of-steem-roster This page is synchronized from the post: 真·花名册 | Update of Steem Roster document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/updateofsteemroster-j09amipaki/"},{"title":"六十而耳顺 —— 60级小结","text":"在Steem悄悄地升到了60级，本文简单梳理一下过去的文章和思考，以及接下来的一些想法。耳顺“六十而耳顺”，先来解读它的意思。孔子云：“吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲不踰矩。” ——《论语·为政》无论后世对孔子的褒贬如何，孔子都无愧于是当时的智仁勇兼具之人杰，缔造文明的核心人物，轴心时代的开创者。上文中，“立”、“不惑”、“耳顺”等当下常被人用于年龄的变化，但恐怕很多人没有真正理解孔子的本意，常常是误用。一方面，这是孔子对自己一生的总结，未必适用于他人。孔子一生所历73年，这段话在约72岁时所作。另一方面，理解孔子，无须跪着解读，用常人的视角去观察更有意义。孔子少年老成，十五岁便志于“学”（学问）。当下，无须说十五岁的青少年，便是终其一生也未必有志者，也不在寡。而十五六岁正是躁动的年纪，惹是生非者不少，这在西方和东方却也差不多。孔子跳过二十多岁的成人之礼不说（孔子20岁成家生子），可见在他看来这并不重要。“三十而立”，用孔子自己的话说：“不知礼，无以立也”。孔子30岁时以“知礼”闻名，齐景公和晏婴向他问礼，所以“而立”说的是孔子知书达理、学而有成，并非很多人认为的“成家立业”或“物质独立”。孔子成名之后，求仕于齐、鲁，但并不顺利，四十岁左右专心治学，于是能够“不惑”。“五十而知天命”，便是知道自己命中注定该做什么。据说孔子50岁前因为学《易》知道自己应该做官，所以便出来求仕。“六十而耳顺”，对古之贤达而言，有“善于倾听民间疾苦，善于接受贤达劝谏”之意[1]。60岁前后，孔子周游列国、颠沛流离，很不顺心，但孔子却很虚心。郑人说他“累累若丧家之狗”，孔子点头称是。毁誉置之度外、又能洞察世事，可以谓之“耳顺”。七十在孔子的年代毫无疑问是高寿。70岁左右，孔子丧子、丧徒（颜回、仲由），反而“从心所欲、不逾矩”，大抵物我两忘，一切皆可放下，人之将死，也彻底自由。那么，在Steem上的朋友，60级之后，对这一空间内的世事，可以不计毁誉、洞若观火，也可称得上耳顺了吧 :) image from: Wikipedia - 孔子 | CC-BY-SA 3.0 思考 在 Steem 上的旅程，与我最初的计划，似乎还是颇为匹配的。 先说说写作和思考相关的部分。 1. 开端与计划 第一篇《The Road Not Taken》 虽然是转载了Robert Frost的诗，并无原创，但也立了基调，即“took the one less traveled by”。 此后的两篇《在Steemit的写作计划 | My Writing Plan on Steemit》 以及 《【Steem之旅】2019年Steem世界的探索 | Exploring the Steem World in 2019》 大概确立了写作的路线，以及希望更深入地了解Steem、为社区做一些工作、认识更多朋友的想法。 随后的写作大概是沿着这个思路前进，但完成度目前还比较低，希望可以继续改进。 2. 《黑客之道》系列 谈技术哲学和技术之道，但目前还是只开了个头，还没有深入写。 序 - #1：如何培养真正的黑客？序 - #2 真正的问题解决者番外 | 墨子（一）：奇人3. 《科学与教育》系列科学哲学与技术哲学是相伴相生的，为了谈好技术问题，先谈谈科学和教育问题，也会略有帮助。【未来教育学】成年人需要什么样的STEM教育？（一）、（二）、（三）、（四）、（五）、（六）、（七）：以STEM切入点，谈了一些科学教育方面的Why, What和How等问题。【未来教育学】知 与 智：一篇杂文，抨击了网络和商业上流行的知识平台4. 《观非常人，行非常事》系列这个系列原以为已经写了好多篇了，原来还挺少的，可能是默默写了，没发到Steem吧。可以把上文的一篇《墨子》和对联活动的《梁羽生》也加到这个系列。作为科普作家的艾萨克·阿西莫夫 | Isaac Asimov and Popular Science程灵素：海棠无香番外 | 墨子（一）：奇人下邳圯桥，张良进履梁羽生与《名联观止》5. 《标签的本质》系列这个系列是把 “标签” 作为观察 Steem 和世界的一个视角来写的，是不错的话题，但只开了头，希望接下来可以继续写好。标签的本质 | The Nature of Tags（一）6. 《区块链与公共利益》系列这个系列希望关注的是区块链与公共利益间的关联，也是我觉得区块链项目最有意义的方向。区块链、Steem与公共利益 | Blockchain, Steem and Public Benefit区块链、Steem与公共利益（二）– 开源与区块链 | Blockchain, Steem and Public Benefit (2) – Open Source and Blockchain7. 其他杂文【跨文化活动】地球文明的星际对话 | 宇宙政治与宇宙语言：参加阿朵 @itchyfeetdonica 的跨文化交流的活动以上总计21篇。作为写作的部分，进度并不快，希望接下来能有更多进展。实践除了写作之外，有相当一部分文章是关于实践的，即如何参与 Steem社区的各种活动和建设，下面也做一些总结。1. 新手村 @team-cn给村里做的贡献不多，下面可能是有些帮助的：和大家一起参与SP代理竞赛：《数英雄，论成败：评SP代理竞赛》@cn-hello 小门童 帮助邀请新人加入新手村：借问师友何处有，门童遥指新手村 | 关于 @cn-hello 小友的来历@cn-curation 编辑@cn-activity 编辑（已经暂停）2. Steem指南 @steem-guides目前《Steem指南》的修订有了一些进展，但整体进展比较缓慢，需要改进执行力。《Steem指南》修订计划：《Steem指南》重新起航： https://steem-guides.github.io/steemh/《Steem指南》 – 编辑的工作流 | Editors’ Workflow《Steem指南》 – 编辑的工作流 | Editors’ Workflow | 第2版 | 2019/04/19更新Steem Guides + SCT = Wisdom about Steem | 《Steem指南》+ SCT = Steem之智慧《Steem指南》新的子版块：建议收藏这两个链接Steem常用链接： https://steem-guides.github.io/links/zh | Steem Links：《Steem指南》子项目 | Subproject of Steem Guides中文区花名册：https://steem-guides.github.io/roster/ | Steem 花名册：《Steem指北》子项目 | Steem Roster: A Sub-Project of Steem-People / 真·花名册 | Update of Steem Roster 《Steem指南》小助手@cn-hello 不仅帮助新人认识新手村，也介绍《Steem指南》等教程，也希望可以通过改进让《指南》越来越容易阅读和使用。3. Steem工具和服务steemblog 博客镜像服务：目前已经服务了近20位用户，有需要的可以留言steemblog: Steem时光机 | Steem Time Machine用GitHub创建Steem文章镜像 | Mirroring Your Steem Blogs on GitHub | 免费博客备份服务： steemblog关于国内访问 steemit 的几种方式的文档：【Steem指南】用eSteem Surfer发帖【Steem指南】用requestly绕过 steemit 被禁问题 【Steem指南】浏览器插件：Steem Server选择工具；解决steemit被禁的问题 4. 其他社区参与steemstem#cn-stem curator：最近收到的投稿较少，欢迎新人关注STEMsteemcleaners翻译和介绍了账户安全问题，此问题值得持续关注：网络钓鱼的安全威胁，请中文区用户警惕 | Phishing Warning5. 对联活动起初是为了写梁羽生的生平，但觉得对联活动也不错，所以顺便组织活动、普及对联知识。本周我们会继续。活动列表：https://steemblog.github.io/@robertyan/tags/cn-couplet/#1 梁羽生与《名联观止》#2 内外与五四#3 对偶与春秋#4 贺寿与建祠前行Steem 的内容丰富多彩，在这里认识了很多有趣的朋友，玩得很开心。接下来的行进路线，与最开始的计划并无大的差异，但可能需要有更高的执行力、以及和社区里伙伴更好的合作。思考与写作其实写作计划一直是比较清晰的，但 Steem 能玩的太多了，有时候写作的进度就无法跟上了。希望可以提高执行力。《黑客之道》系列：顺着大纲继续写《语言与世界》系列：语言学和认知科学相关，用小号单独写《标签的本质》系列：顺着大纲继续写《区块链与公共利益》系列：需要整理下思路，可能会开一个番外《开源回忆录》区块链与公共利益在《区块链与公共利益》系列中我曾提到，我觉得公共利益是区块链在技术、经济和社交层面最有意义的价值体现。本质上，我认为这是对Web精神的继承与发扬（这是基于将区块链看成下一代Web的重要组成部分的这一观点得出的）。对Steem世界的初步探索，也将逐步走向更有针对性的推动区块链实现更多公共利益。我并不怀疑区块链技术会逐步纵向大众，但其带来的结果并不总是正面的，如何用其利而避其害，是我们需要思考的问题。区块链根植于“自由主义”的基因，驱使它可能向着“人之道，损不足以奉有余”的方向前进，使得财富聚拢而损害大多数人的利益。“自由”与“平等”的矛盾始终萦绕着商业世界。区块链与公共利益的结合，是我认为可以寻找的出路的一个方面。主要的工作会在以下几点：《Steem指南》：Steem指南解决的是社区知识共享和沉淀的问题；但需要做一些反思和整理，解决目前的执行力的问题。协助公共利益组织：如 @team-cn、@steemstem 等，具体来说包括：改进 CN区 使用 steem 的各类服务的体验，如 steem-engine 等；推动 CN区 的项目更好的发展，例如 @wherein，和 @iguazi 也有一些讨论；帮助 @steemstem 改进 https://www.steemstem.io 的访问体验（刚开始）；了解和参与 utopian 社区；更加系统地思考和研究如何帮助更多以公共利益为目的的组织发展和成长；其他有趣、好玩、又有助于社区成长的事情（欢迎大家参加对联活动）。 最后 其实本文是对 @yellowbird 黄鸟大哥 提到的在 steemblog 中增加【置顶文章】板块的实验，否则可能不会写这篇总结的文章。 对于 steemblog 的用户，如果想要置顶文章或者调整首页的文章顺序，可以在文章的文本中加入如下的隐藏标签（可以加在末尾，像本文做的那样；别的地方也可以），你的文章会按照 position 的数值从小到大排列。如不设置，默认的position 是 9999，会按照时间排序；所以，一般需要置顶的文章才需要设置。 &lt;div position=”1” /&gt; 参考文献 李零，《丧家狗 —— 我读论语》，山西人民出版社，2007年 Posted from my blog with SteemPress : https://robertyan.000webhostapp.com/2019/06/%e5%85%ad%e5%8d%81%e8%80%8c%e8%80%b3%e9%a1%ba-60%e7%ba%a7%e5%b0%8f%e7%bb%93 This page is synchronized from the post: ‘六十而耳顺 —— 60级小结’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/60-14zjspne8k/"},{"title":"steemblog -- browsing your steem posts faster","text":"steemblog – mirror your steem posts to blog hosts such as GitHub pages, Netlify, etc., and help you organize and search your posts faster. This is my first submission for @utopian-io project 本文用于首次尝试向 utopian-io 提交开源项目 Repository https://github.com/steemblog/blog (blog builder) https://github.com/steemblog/hexo-theme-icarus (blog theme) steemblogImage Source: Pixabay Introductionsteemblog is a blog service and tool built by myself that synchronize your steem blogs into GitHub pages or other static site hosts, e.g. https://steemblog.github.io/@utopian-io/, https://steemblog.github.io/@robertyan/ The blog service has recently served around 20 users mainly in Steem Chinese community who have provided very positive feedback to the steemblog project. Features Convert all the posts of one or multiple steem accounts with Hexo into static pages, and publish them onto GitHub page or Netlify; Provide smooth user experience to browse, classify and organize one’s blogs with the blog themes; Make the posts updated daily with Travis CI or cron jobs to keep the blogs synchronized from Steem. 1. ExampleBy using steemblog, we could easily mirror @utopian-io’s posts into https://steemblog.github.io/@utopian-io/, where you could look at @utopian-io’s posts in the history, and search through all the posts, with better experience. Comparing to Steemit, this looks to be a “real blog” and is cleaner and more responsive. (1) The home page of the blog (2) Tag cloud: (3) Archives: (4) Recent posts: (5) Search: (6) Post: https://steemblog.github.io/@utopian-io/what-is-utopian-state-of-the-art-forever-stored-in-the-blockchain-107-days-since-the-beginning/ screenshots from: https://steemblog.github.io/@utopian-io/ 2. How to UseTo deploy the project for yourself, you could fork https://github.com/steemblog/blog to your account, and setup the blog with travis-ci, by updating the environment viariables in travis project with your accounts. GIT_USERNAME: your GitHub account GIT_EMAIL: your GitHub account GITHUB_PAT: your GitHub token BLOG_REPO: the repo to deploy your GitHub pages STEEM_ACCOUNTS: the steem accounts to synchronize the posts, separate by comma. e.g. utopian-io,robertyan Or you can also contact me (@robertyan) to help setup one synchronized blog for your steem account at https://steemblog.github.io, e.g. https://steemblog.github.io/@robertyan/ Technology StackThis is a Python + JavaScript project. steemblog extended and enhanced the steem blog mirroring tool project by myself The interaction with Steem blockchain is built with beem project. The blog generation is built with hexo blog framework. The blog service by default used an customized hexo theme: steemblog/hexo-theme-icarus. The theme has good user experience, but the build speed is terrible. We did intensive enhancements to hexo-theme-icarus to increase the build speed by 20~100 times. invoke for task management. 1. Build the BlogTo build the blog, we need to construct the front-matter for markdown, by retrieving data from steem, and then use Hexo to generate the static pages. blog/message.py: the front matter template 12345678910111213141516171819202122232425MESSAGES[&quot;blog&quot;] = &quot;&quot;&quot;---title: &apos;{title}&apos;permlink: {permlink}catalog: truetoc_nav_num: truetoc: trueposition: {position}date: {date}categories:- {category}tags:{tags}thumbnail: {thumbnail}sidebar: right: sticky: truewidgets: - type: toc position: right---{body}&quot;&quot;&quot; blog/builder.py: fetch metadata from steem 12345678910111213141516171819202122def _write_content(self, post): folder = self._get_content_folder() c = SteemComment(comment=post) # retrieve necessary data from steem title = post.title.replace(&quot;&apos;&quot;, &quot;&apos;&apos;&quot;) permlink = post[&quot;permlink&quot;] body = c.get_compatible_markdown() position = self._get_position(body) date_str = post.json()[&quot;created&quot;] date = date_str.replace(&apos;T&apos;, &apos; &apos;) tags = &quot;\\n&quot;.join([&quot;- {}&quot;.format(tag) for tag in c.get_tags()]) category = c.get_tags()[0] thumbnail = c.get_pic_url() or &apos;&apos; url = c.get_url() # build content with template template = get_message(&quot;blog&quot;, footer=True) content = template.format(title=title, permlink=permlink, position=position, date=date, tags=tags, category=category, thumbnail=thumbnail, body=body, url=url) blog/command.py: build static pages with hexo 123456789101112@task(help={ &apos;debug&apos;: &apos;enable the debug mode&apos;, })def build(ctx, debug=False): &quot;&quot;&quot; build the static pages from steem posts &quot;&quot;&quot; configure() os.system(&quot;hexo clean&quot;) build_cmd = &quot;hexo generate&quot; if debug: build_cmd += &quot; --debug&quot; os.system(build_cmd) 2. Make Build FasterHowever, the builds for some accounts with 1000+ posts and 200+ tags are extremely to build (take &gt; 1 hour). In order to serve more accounts, we have to increase the build speed. We used below strategies to accelerate the build process by 20~100x. build a customized theme: steemblog/hexo-theme-icarus use cache in rendering intensively implement incremental build in hexo put widgets into standalone html pages and load with ajax use more efficient layout (timeline) reduce total page numbers themes/icarus/layout/layout.ejs: Use fragment cache as much as possible: 123456&lt;%- partial(&apos;common/footer&apos;, {}, {cache: true}) %&gt;&lt;%- partial(&apos;common/scripts&apos;, {}, {cache: true}) %&gt;&lt;% if (has_config(&apos;search.type&apos;)) { %&gt;&lt;%- partial(&apos;search/&apos; + get_config(&apos;search.type&apos;), {}, {cache: true}) %&gt;&lt;% } %&gt; themes/icarus/layout/layout.ejs: Generate widget page with hexo generators: 1234567891011121314151617181920/** * Widget page generator */module.exports = function (hexo) { hexo.extend.generator.register(&apos;widget&apos;, function (locals) { const widgets = hexo.extend.helper.get(&apos;get_config&apos;).bind(this)(&apos;widgets&apos;); const component_widgets = widgets.filter((w) =&gt; (w.component)) return component_widgets.map(function(widget){ return { path: `widgets/${widget.type}.html`, layout: &apos;component/pjax_widget_src&apos;, data: { widget: widget, __widget: true } }; }); });} themes/icarus/layout/component/pjax_widget_ref.ejs Use reference to page instead build the page itself, which is critical to make incremental build possible. 12345&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;div id=&quot;widget-&lt;%= widget.type %&gt;&quot; data-pjax=&quot;&lt;%= `${get_config(&quot;root&quot;)}widgets/${widget.type}` %&gt;.html&quot; style=&quot;position: relative; width: 100%; display: block;&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; themes/icarus/includes/generators/category.js: only the affected category pages will be built in hexo generators 12345678910111213141516171819202122232425262728293031function needs_update(category) { if (config.incremental) { // in incremental mode, update the affected category pages only const updated_categories = list_updated_categories(); if (updated_categories &amp;amp;&amp;amp; updated_categories.length &gt; 0 &amp;amp;&amp;amp; updated_categories.indexOf(category[&apos;name&apos;]) != -1) { return true; } return false; } return true;}return locals.categories.reduce(function(result, category){ if (! needs_update(category)) { return result; } const posts = category.posts.sort(&apos;-date&apos;); const data = pagination(category.path, posts, { perPage: perPage, layout: [&apos;category&apos;, &apos;archive&apos;, &apos;index&apos;], format: paginationDir + &apos;/%d/&apos;, data: { category: category.name, parents: findParent(category) } }); return result.concat(data);}, []); We cannot show all the details of the implementation here, but how to build the blog from steem data, and how to make the build faster are the key efforts here to build a robust and efficient blog service. RoadmapWhile the steemblog service is easy to use for some users, it requires more enhancements. Switch languages and themes easily; Improve search performance; add search functionality by adding Google / Baidu search; Support write back to Steem blockchain when neeeded. Connect with steem-engine / SCOT, and help more Hexo users to post on steem Promote the project to help more people who wants a better blog user experience. How to ContributeFor anyone who wants to contribute to this project, feel free to fork https://github.com/steemblog/blog orhttps://github.com/steemblog/hexo-theme-icarus , and submit Pull Requests. Or please directly contact me (@robertyan) on Steem if you have any questions to discuss. Github Account my personal account: https://github.com/think-in-universe (can be verified with the links in the profile) the steemblog organization account: https://github.com/steemblog This page is synchronized from the post: ‘steemblog – browsing your steem posts faster’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemblog-browsing-your-steem-posts-faster/"},{"title":"Awesome Steem #0 | 你欣赏的人生感言或经验","text":"本文介绍 Awesome Steem 这个我觉得是很有趣也很有价值的活动。 image from: https://github.com/awesome-steem 缘起今天在群里闲聊说以后可能可以整个什么币或者社区，于是我说一直想做个 awesome 币，专门用来挖掘和鉴赏 Steem 里有价值的内容。 Steem 上一直是有很多很好的内容，这里有很多才华爆棚的创作者（想法、文学、故事、摄影、绘画、音乐、视频、代码、科学、组织、团队、货币、人生经验、真挚情感等等），也有很多他们的追随者与热爱着。他们的精神状态很令人欣赏和认同，这是人类的精华所在。 如果你在玩 Steem 之前就知道 curator / curation 这个英文单词，你应该是比较能了解它的意思的。我觉得正确的理解，它是去提炼和遴选哪些有价值的东西，然后呈现跟真正需要他们的人们。比如博物馆的馆长，就常常被称为 Curator。 所以Curator的工作不仅仅是用金钱去奖励别人，而更本质的是让世界上有魅力、有温度的内容可以被留存、传递和发扬出去。 之前做 steemblog 时，为了更好地欣赏他们的作品，我提到我“偷偷”备份了某些作者的文章。我确实是如此想的，也希望可以和大家一起欣赏他们的有趣的思想；“考古”也是我做 steemblog 的一个重要动机。 基于这三点思考，我觉得 Steem 还是很美好的，你可以遇到在别处很可能没有遇到过的精彩的世界、精彩的人生、精彩的灵魂（精彩 = Awesome！）。或许你会说这样的精彩在别处也有，但或许这里的浓度更高 :) Awesome Steem 活动为了践行这种推崇 Awesome 的世界与人生的精神，我在这里发起一个新的活动，就叫做 【Awesome Steem】。 其目的，可以认为就是在很多论坛常见的“挖坟”。。。但我希望这些拿着“洛阳铲”的盗墓者们都是睿智而仁慈的，他们会为一首美妙的小诗而拍手称快，会为一个孩童的勇气而击节叫好，他们会摒除丑恶与贪婪，他们会激赏豁达与忍耐。 这个活动的主题，可能包括上面提到过的各种形式，比如（想法、文学、故事、摄影、绘画、音乐、视频、代码、科学、组织、团队、货币、人生经验、真挚情感等等）。 【本期为创刊号、第0期】本期主题： 本期的主题是 分享你在Steem看到过的最欣赏的人生感言或经验。 Steem 上有很多了不起的人，在我们的身边，在CN区就有很多这样的人，我无须去提他们的名字，但我很敬重他们，以他们为傲，衷心向他们学习。他们的人生履历让我成长，让我看到世界的艰辛与美好。 所以，本期活动，我们希望参与者介绍一段你在 Steem 看到过的最欣赏的人生感言或作者分享过的人生经验。 如何参与： 对于提交的内容，作出如下要求： 发布一个帖子参与本次活动，需要包含 #awesome 标签； 内容希望可以包括 （1）原文链接、（2）原文的适当引用（可选）、（3）你的评价或建议（无长度限制） 在本帖发布7天内提交为有效。 我们将对提交的作品进行审核，并整理到一个专门的 Awesome Steem 的网站上，供大家保存和欣赏。 活动奖励： 对于 Awesome，我们是认真的。我们希望不仅奖励发现者，也奖励原作者。 对于提交的作品，我们将征求广泛的建议来获得社区投票（可能是dPoll），获得投票最多的前三位作品（发现者 + 原作者）将获得较多奖励，其余参赛者将获得鼓励奖（参与奖）。前三位作品（3位原作者+3位发现者，共计6人）将至少获得我赞助的 1 NBC + 1STEEM 奖励（总计 6 STEEM + 6 NBC） 瓜子 @iguazi 已经代表 @wherein 慷慨同意赞助本次活动，具体的奖励数额我们将在稍后更新帖子公布。 因此，你发布超过7天的内容也可能获得奖励，是不是很有趣？ Awesome Future基于 Awesome Steem，未来我们可能会开一个 Steem 博物馆、Steem 图书馆、Steem 展览厅、Steem 音像馆 等等，用来存放这个世界上一些美妙和精彩的事物。 参与 Steem，就是帮助我们一起来珍藏这些有意义的时间与空间。 感谢你，参与了这个世界、把精彩留给未来。 This page is synchronized from the post: ‘Awesome Steem #0 | 你欣赏的人生感言或经验’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/awesome-steem-0-or/"},{"title":"【重磅】《Steem Engine 手册》来了！！ --  Steem Engine Handbook --《Steem指南》子项目","text":"史话 基督纪年公元2247年10月的一日清晨，米歇尔·张 正坐在她的可携带智能飞行器中，驶向当地最大的数据档案馆。 作为一位在火星南华省墨子大学工作的年轻助理教授，原本她的个人能量（Resource Allocation）足以保证她可以在办公室中使用数据服务，但不幸的是，由于过去2个月周围地区的地热部队武装冲突增加，导致几根重要的底下缆线受到严重破坏，她的数据传输费用因此增加。为了尽快完成她关于上世纪中叶“元数据滥觞与集体智力衰退”现象的研究，她不得不冒险前往档案馆。 此项研究的子课题与一种被西文叫做STEEM的系统有关。由于历史文献在上世纪的一场全地球范围的网络战争中损坏严重，人们对于STEEM的起源有着截然不同的看法。尤其是，STEEM究竟是一开始就被设计为一种高度自由的网络文明制度，还是只是作为一种虚拟写作俱乐部而存在，存在极大争议，这被认为与它的建立者丹（也被称为“数字大侠”[1]）和耐得及其追随者的数字档案由于政治原因而被摧毁有关。 5个月前，在地球上西太平洋一个残破的数据备份服务器中，人们曾经找到一份被称作《Steem Eng Handbook》的PDF档案，并尽可能修复了它的63%的内容，但对于它的可信息度，至今存疑。米歇尔·张 的此行的目的之一，正是为了获得更完整的档案，并向几位数据史专家请教与它相关的几份资料的来源。 [1] 关于丹本人的别名，实际上也存在疑问。 以上节选自24世纪30年畅销历史小说《虚拟帝国衰亡史》第2章，作者冯破虏，黄石出版社 计划最近，随着Steem Engine的逐步发布与成熟，关于它的讨论也陆续增加起来，更多人也对Steem有了新的期盼。 《Steem Engine 手册》应运而生，它是《Steem指南》的继承与延续。 为了帮助CN社区更加系统深入的了解和研究 Steem Engine，我们决定发起《Steem Engine 手册》计划，整理和收录关于 Steem Engine生态中各个问题的研究和思考，以方便当前和未来的读者。 你可以在这里：https://steem-guides.github.io/steem-engine 获取它的第一个残本。 我们接下来的计划，便是收录和丰富它的内容；欢迎CN社区的成员积极投稿。 由于最近 SCT的火热，其实大家已经写了很多相关的文章，所以我们的任务是以收录社区的自主创作为主、引导和约稿为辅。 image from https://github.com/steem-engine-exchange 大纲《Steem Engine手册》的1.0版大纲涵盖了关于 Steem Engine的主要内容。 具体如下： 入门：初步了解并开始使用 Steem Engine； 原理：介绍 Steem Engine 的基本工作原理； 应用：介绍基于 Steem Engine 构建的各类应用，如SCT、AAA、PAL等； 货币：介绍基于 Steem Engine 发布的各类货币； 工具：为 Steem Engine 开发的各类有用的工具； 开发：如何基于 Steem Engine 的基础框架，开发新的服务和应用； 杂谈：对于 Steem Engine 和其生态的评论、思考与研究； 附录：投稿的方式、引用的资料等。 由于本书刚开始设计，许多内容都是待定的，对于超出了第一版大纲以外的内容，也欢迎投稿和提供建议。 本大纲可以在《Steem Engine 手册》草稿中预览： image from https://steem-guides.github.io/steem-engine/index.html 参与与《Steem指南》一样，本书需要也期待所有中文区小伙伴的参与。 参与方式 很简单： 我们会主动搜寻已经完成的相关内容，合并到书中，并给与创作者相应奖励； 如果希望向《Steem Engine手册》投稿，请添加 #steem-guides 标签，并用markdown书写； 如果已经有相关的稿件，也可以直接在本文下面回复帖子链接。 奖励方式 还不错： 收录的文章将 获得 NBC 奖励 和 @steem-guides点赞（@teamcn, @teamcn-sct 跟赞）； 奖励虽然没有那么高，但如果你原来就在给SCT投稿，也不妨同时向《Steem Engine手册》投稿。 召集编辑小组 We Want You： 为了完成《Steem Engine手册》，我们将召集一个特别的编辑小组，参与审核稿件； 编辑们将获得 NBC 奖励、@steem-guides 帖子收益、以及@steem-guides点赞（@teamcn, @teamcn-sct 跟赞） 欢迎有兴趣参与编辑的朋友，在本文之后留言。 这仅是一些初步的想法，欢迎大家留言提供建议和转发！ 希望通过《Steem Engine手册》，帮助CN区在Steem Engine的基础设施之上，能够更健康快乐地发展，沉淀更多的智慧与友情。 另外，也欢迎大家持续向《Steem指南》修订计划投稿，例如“摄影、绘画、美食、旅游”等活动的介绍，以及各类dApp的介绍。 致谢最后，感谢《Steem指南》在过去、现在和未来的所有参与者。它将与CN社区同在，与Steem同在，与每一点通过写作此书帮助他人的善意同在。 本图由 @maiyude 设计 This page is synchronized from the post: ‘【重磅】《Steem Engine 手册》来了！！ – Steem Engine Handbook –《Steem指南》子项目’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem-engine-steem-engine-handbook-steem/"},{"title":"a new Hexo plugin [hexo-stop-tag-plugins]  --  write pure markdown with Hexo","text":"This post will introduce the development of a Hexo plugin hexo-stop-tag-plugins, which helps hexo users to disable built-in tag plugins / nunjucks syntax, and write with pure markdown syntax. To be more precise, this post’s contribution include: a new hexo plugin and NPM package hexo-stop-tag-plugins one defect fix to hexo project, which is included in hexo 3.9.0 release) Repository hexo plugin: https://github.com/think-in-universe/hexo-stop-tag-plugins submit plugin to hexo site: https://github.com/hexojs/site defect fixing of hexo: https://github.com/hexojs/hexo Commit HistoryYou might want to check the below commit history and PR to understand the contribution. All the commits of https://github.com/think-in-universe/hexo-stop-tag-plugins, and shipped 0.1.7 version to NPM hexo-stop-tag-plugins, with success test results and code coverage. Add the plugin to hexo site with Pull Request: https://github.com/hexojs/site/pull/966, and now hexo-stop-tag-plugins is available on the hexo plugins page https://hexo.io/plugins/ Fixed the defect about disableNunjucks in the Pull Request: https://github.com/hexojs/hexo/pull/3573, and released in hexo 3.9.0 yesterday (check release note for details) a new Hexo plugin: hexo-stop-tag-pluginsImage Source: https://github.com/hexojs Why did I create hexo-stop-tag-plugins?(1) Issue when building blog from steem with steemblogIn my last post, I introduced steemblog, which is a blog service and tool built by @robertyan that synchronize your steem blogs into GitHub pages or other static site hosts, e.g. https://steemblog.github.io/@utopian-io/ , https://steemblog.github.io/@robertyan/ During the creation of steemblog, we met issues such as Failed to build when markdown body contains special chars when we’re synchronizing some Steem user’s posts in markdown into steemblog. For example, the {%s} string in the below code block from the post https://steemd.com/@oflyhigh/mfc-access , will break the conversion from post’s source into html, with no html result returned. sConnect.Format(TEXT(“ODBC;DRIVER={%s};DSN=’’;DBQ=%s;”), sDriver, sDBInfo); This issue happens because hexo enables tag plugins by default, which relies on the nunjucks syntax, and there’s no settings to disable that by hexo users. To make steemblog function well, we need to fix this issue. (2) A common painful issue in hexo communityWhat’s more, this is a quite common issue complaint by a lot of hexo users. You can checkout relevant links and examples from my PR and issues, and examples are: https://github.com/hexojs/hexo/issues/2384 https://github.com/hexojs/hexo/issues/1510 https://github.com/hexojs/hexo/issues/1755 https://github.com/hexojs/hexo/pull/2593 In order to overcome this pain for the hexo users who want to get more control over the tag plugins syntax, we implemented this hexo plugin hexo-stop-tag-plugins for those who suffered from the common issue. How to UseTo use this plugin, you can check out the description in the NPM package: hexo-stop-tag-plugins It’s as easy as install it with NPM. 1$ npm install hexo-stop-tag-plugins --save That’s it. Then your post will be rendered by hexo as pure markdown, and you can use packages like marked as the renderer. Technology Stack JavaScript (ES6) / NodeJS ImplementationBelow we’ll introduce how the plugin is implemented. (1) set disableNunjucks at renderer levelThe implementation of the plugin is not complex if you’re familiar with hexo’s source code. In project https://github.com/think-in-universe/hexo-stop-tag-plugins, we implemented the overrider.js to set the disableNunjucks property of renderer to true. Then hexo post renderer should skip the renderering with nunjucks. We come up with this idea by reading thorough the renderer process of hexo, and look at relevant issues and pull requests in hexo repostiory. override.js 123456789101112131415161718192021222324252627/* The module is created to disable the tag plugins (https://hexo.io/docs/tag-plugins) and nunjucks syntax, which causes troubles in parsing markdown often*/&apos;use strict&apos;;const extensions = [&apos;md&apos;, &apos;markdown&apos;, &apos;mkd&apos;, &apos;mkdn&apos;, &apos;mdwn&apos;, &apos;mdtxt&apos;, &apos;mdtext&apos;];module.exports = function(hexo) { let stop_tag_plugins = true; if (hexo.config.stop_tag_plugins === undefined || hexo.config.stop_tag_plugins === true) { stop_tag_plugins = true; } else { stop_tag_plugins = false; } for (let ext of extensions) { let renderer = hexo.render.renderer.get(ext); if (renderer) { renderer.disableNunjucks = stop_tag_plugins; hexo.extend.renderer.register(ext, &apos;html&apos;, renderer); } }}; index.js 1234567/* global hexo */&apos;use strict&apos;;var overrider = require(&apos;./lib/overrider&apos;);overrider(hexo); We also added sufficient test cases to test this plugin, which you can checkout in test folder. However, what makes us frustration is that the code blocks in markdown are not renderered correctly after we set the disableNunjucks property, and only placeholder of the code block are displayed. This should be an issue of hexo, and that leads us to fix the defect in hexo with PR #3573 (2) fix the problem with the disableNunjucks property in hexo projectTo understand the issue, you can read more details in the PR: https://github.com/hexojs/hexo/pull/3573 The property disableNunjucks was introduced in PR #2593 by one contributor. However, it’s not added correctly and leads to problems. To fix that, we modified lib/hexo/post.js in hexojs/hexo repository, which returns content after the placeholders (like a code block) are replaced. lib/hexo/post.js 1234567891011121314151617 // Render with markdown or other renderer return ctx.render.render({ text: data.content, path: source, engine: data.engine, toString: true, onRenderEnd(content) { // Replace cache data with real contents data.content = cacheObj.loadContent(content); // Return content after replace the placeholders if (disableNunjucks) return data.content; // Render with Nunjucks return tag.render(data.content, data); }}, options); The PR #2593 that introduced thedisableNunjucks property didn’t add tests. So, to assure the quality, added unit tests for the disableNunjucks property: test/scripts/hexo/post.js 123456789101112131415161718192021222324252627282930// test for PR [#3573](https://github.com/hexojs/hexo/pull/3573)it(&apos;render() - (disableNunjucks === true)&apos;, () =&gt; { const renderer = hexo.render.renderer.get(&apos;markdown&apos;); renderer.disableNunjucks = true; return post.render(null, { content: fixture.content, engine: &apos;markdown&apos; }).then(data =&gt; { data.content.trim().should.eql(fixture.expected_disable_nunjucks); }).then(data =&gt; { renderer.disableNunjucks = false; });});// test for PR [#3573](https://github.com/hexojs/hexo/pull/3573)it(&apos;render() - (disableNunjucks === false)&apos;, () =&gt; { const renderer = hexo.render.renderer.get(&apos;markdown&apos;); renderer.disableNunjucks = false; return post.render(null, { content: fixture.content, engine: &apos;markdown&apos; }).then(data =&gt; { data.content.trim().should.eql(fixture.expected); }).then(data =&gt; { renderer.disableNunjucks = false; });}); test/fixtures/post_render.js 123456789101112exports.expected_disable_nunjucks = [ &apos;&lt;h1 id=&quot;Title&quot;&gt;&lt;a href=&quot;#Title&quot; class=&quot;headerlink&quot; title=&quot;Title&quot;&gt;&lt;/a&gt;Title&lt;/h1&gt;&apos;, util.highlight(code, {lang: &apos;python&apos;}), &apos;\\n\\n&lt;p&gt;some content&lt;/p&gt;\\n&apos;, &apos;&lt;h2 id=&quot;Another-title&quot;&gt;&lt;a href=&quot;#Another-title&quot; class=&quot;headerlink&quot; title=&quot;Another title&quot;&gt;&lt;/a&gt;Another title&lt;/h2&gt;&apos;, &apos;&lt;p&gt;{% blockquote %}&lt;br&gt;&apos;, &apos;quote content&lt;br&gt;&apos;, &apos;{% endblockquote %}&lt;/p&gt;\\n&apos;, &apos;&lt;p&gt;{% quote Hello World %}&lt;br&gt;&apos;, &apos;quote content&lt;br&gt;&apos;, &apos;{% endquote %}&lt;/p&gt;&apos;].join(&apos;&apos;); After this defect is fixed in hexo and released in hexo 3.9.0 version, we could say the hexo-stop-tags-plugin should work well for hexo users. (3) publish the plugin to hexo/plugins and NPMTo make the plugin available to its users. We published it to NPM and hexo/plugins page. The submission to hexo/plugins page is merged in PR: https://github.com/hexojs/site/pull/966 source/_data/plugins.yml 1234567- name: hexo-stop-tag-plugins description: Disable tag plugins for all markdown posts link: https://github.com/think-in-universe/hexo-stop-tag-plugins tags: - markdown - tag_plugins - renderer It takes a few days to have the plugin be reviewed and merged. Retrospective The hexo repository reviewers are not that active, and may need close follow-up from contributor to make PR to be reviewed and merged. May need more thoughts and actions on how to push this plugin to the users who met the same issues. Roadmap The disableNunjucks property is set at renderer level and applied to all the posts. User may need another setting to make it only applied to some of the posts, which is more flexible. hexo-stop-tag-plugins is quite useful if we want to bring more hexo blog writers onto Steem. It makes it easier for bi-directional integration between hexo and steem: hexo users can use the plugins to write posts that can be published onto Steem; Steem users can use the plugins to render and organize their steem posts with hexo. As a successor of this plugin, we may create another plugin that could make it easier for hexo users to share their posts onto Steem. And as a result, may introduce more developers and writers to Steem community. My long-term vision is to make better integration between Steem and GitHub features (such as GitHub pages), to make developers enjoy their work and life in blockchain era. picture made by me which combines GitHub and Steem logos How to ContributeFor anyone who wants to contribute to this project, feel free to fork https://github.com/think-in-universe/hexo-stop-tag-plugins, and submit Pull Requests. Or please directly contact me (@robertyan) on Steem if you have any questions to discuss. Github Account my personal account: https://github.com/think-in-universe (can be verified with the links in the profile) To reviewers: this post is set to “development” category because it contains a new project (a hexo plugin), and defect fixing to “hexo” project contributed by myself. If you have any concern, feel free to reach out to me directly. This page is synchronized from the post: ‘a new Hexo plugin [hexo-stop-tag-plugins] – write pure markdown with Hexo’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/a-new-hexo-plugin-hexo-stop-tag-plugins-write-pure-markdown-with-hexo/"},{"title":"CN区小门童 @cn-hello 回忆录：数据与统计","text":"回顾CN区小门童 @cn-hello 自2019年5月10日开始运行以来，持续帮助CN区的新人提供入门的建议和信息。在过去的一个多月里，它也帮助我们更方便的找到新人，并介绍他们加入新手村和融入社区。 但是，他也有很大的改进空间，比如在给新人提供建议时，可以增加常见问题、以及如何帮助新人更快速入门，比如更密切的跟踪新人的动态、提供建议，等等。 在运行了一个多月以后，@cn-hello 也积累了一定的数据，对于分析新人的融入和成长，也可以提供一些帮助。基于此，我们增加了一个每周发布的数据可视化报告，以便于了解新人的整体趋势。此数据分析报告以整体分析为目的，不展示个人数据、或者制造“新人榜”等。 (Image Source Pixabay) 统计统计报告可以以此为例，https://busy.org/@cn-hello/cn-2019-06-19 其实此文是昨天测试时不小心发布出来的，原来计划在周日发布。但既然已经发送了，顺便先介绍一下它的目的和内容。 目前的报告较为简单，主要是包括加入的人数的简单统计：（1）本周新人统计；（2）过去3月新人统计；（3）所有数据的按月统计。 以下引用自 6月19日报告 CN区每周新人数据汇总 Newbies Weekly 2019-06-19。这系列的分析报告，今后将在周日晚10点发布。 7日内新手统计过去7日，本门童接待了 12 位新手；下面是每日接待新手的情况。 1季度内新手统计过去3个月（实际为6周左右），本门童接待了 110 位新手；下面是每周接待新手的情况。 按月新手统计自本门童出道以来，总计接待了 110 位新手；下面是每月接待新手的情况。 通过以上分析，我们可以看到每周加入CN区的新人（25~35级、使用 #cn 标签、并用中文写作）的数量在10~25之间，小门童一个月大概接引新人70~80人左右。 以上统计的数据源，来自 @cn-hello 每日将自己的回复和关注的新人的数据存入的 MongoDB 数据库。与 Steem 本身的数据比较而言，这个数据集主要是对刚加入的新手的行为的观察和记录。但此数据库暂时并没有设置为公开访问，如有需要，我们可以提供原始数据给研究者。 改进这个数据分析报告目前比较基础。如果有人希望进一步了解和分析CN区新人的基本情况，它可以持续改进以提供更透明的可视化分析。 作为改进的方向之一，结合Steem用户的数据，此报告可以增加更多的分析内容和数据故事，以回答大家可能感兴趣的问题，例如： 新手的留存率如何？有多少新手在经过了1个月、3个月以后是依然活跃的？ 新手在经过1~3个月之后，平均的声望和SP增长情况如何？以了解初期的生存困难程度。 新人初期最常用的标签是哪些？哪些标签的使用最频繁？哪些标签最有效？ @cn-hello 确实帮助到新人了吗？他还可以如何改进？ 等等… 本文的目的，一方面是介绍 @cn-hello 的初步的统计功能，另一方面也是向有兴趣的观察者请教可能还对哪些分析感兴趣，以及哪些洞察（insight）可以帮助我们更好的帮助新人，同时，也使得新人更好地理解初期的困难所在。 如果你对分析哪些问题感兴趣，也可以在本文留言讨论 :) This page is synchronized from the post: ‘CN区小门童 @cn-hello 回忆录：数据与统计’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/cn-cn-hello/"},{"title":"《Steem指南》激励计划","text":"本文介绍 《Steem指南》激励计划。 为了加速《Steem指南》的修订和《Steem Engine手册》的创立，我们发布了《Steem指南》激励计划，给予《Steem指南》的作者们和编辑们更好的回馈与鼓励，集结CN区和KR区的力量，帮助我们更有效地总结和沉淀 Steem 世界内的知识和攻略，助力社区和新人快速成长。 新闻：SteemCoinpan 将把《Steem指南》翻译成韩文版，并赞助1000 SCT支持《Steem指南》发展@jack8831 Jack 作为 SteemCoinpan 的创始人，代表 SteemCoinpan 向《Steem指南》账户 @steem-guides 赞助了 1000 SCT，用于支持《Steem指南》发展，并希望将组织人员将《Steem指南》翻译成韩文版，用于更好地在韩语世界推广和使用Steem。 @jack8831 认为《Steem指南》的结构更为系统，可以更好的帮助KR区了解Steem。我们很高兴看到《Steem指南》能走出CN区，也代表了对它有所贡献的作者和编辑们的努力得到了更多人的认可。 需要注意的是，《Steem指南》遵循CC BY 4.0协议，故而对于它的分享、演绎甚至商业目的，在正确的署名的前提下，符合版权的法律要求。 我们赞同 SteemCoinpan 对它的翻译工作，感谢对《Steem指南》工作的大力支持，并乐意配合和支持《Steem指南》的国际化。 同时，借助 SteemCoinpan 赞助的 1000 SCT，我们希望进一步提升《Steem指南》对作者们和编辑们的支持与奖励，帮助知识的分享者们，更好地传播知识，同时获取更丰富、多样的回报。这是我们推动《Steem指南》进一步前进和进化的新的契机。 SCT赞助《Steem指南》，创建更好知识库 激励计划@steem-guides 目前拥有1000 以上SCT以及近500的NBC，是用于激励团队的经济基础。 为了更好地激励团队参与贡献，@steem-guides 将 stake 所有 SCT，用于点赞作者和编辑，同时提供更丰富的奖励机制。 具体的激励计划如下： 激励方案（编辑）编辑职责为了保证《Steem指南》的持续更新与发展，我们将招募每日的【专题编辑】，负责过去一周相关【专题】的（1）周报发布和（2）稿件编辑。 周报：每周相关专题投稿和精华的总结； 编辑：审阅本周内投稿，编辑入《Steem指南》和《Steem Engine手册》 每日专题的分布： 时间 内容 《Steem指南》章节 《Steem Engine手册》章节 周一 入门与操作 1, 3, 4, 5 1 周二 原理与规则 2 2 周三 区块链与货币 10, 14 4 周四 社交与活动 6, 7 3, 4 周五 应用与工具 8, 9 3, 5 周六 开发与数据 11, 12, 13 6 周日 杂谈与人物 15, 17 7 编辑奖励 日常奖励：周报奖励（2 NBC）+ 编辑奖励（2~3 NBC） 通过 @steem-guides 发布周报的 SBD 和 SCT 奖励的一半 点赞奖励：@steem-guides 将持续点赞编辑的帖子 如何成为编辑如果你是以上提到的某一领域的专家，就快来申请吧！！！ 在本文下留言想申请的【专题】，并转发本文； 我们将根据编辑在这方面的经验和知识，进行审核并决定。 激励方案（作者）作者贡献作者投稿通常有3种方式： 自主创作有趣的内容并投稿； 根据《Steem指南》、《Steem Engine手册》的征稿要求投稿； 分享自己过去书写的文章，提交链接。 对于以上3种方式，我们都将进行奖励。 作者奖励 首次贡献奖励：只要投稿就有奖励 首次投稿奖励：+ 1 NBC 首次收稿奖励：+ 2 NBC 《Steem指南》资深作者的投稿奖励：稿件越多、质量越高，奖励越好 青铜作者（1 &lt;= 收稿数 &lt;= 3）：每次收稿奖励 3 NBC 白银作者（3 &lt; 收稿数 &lt;= 10）：根据质量，每次收稿奖励 4~5 NBC 黄金作者（收稿数 &gt; 10）：根据质量，每次收稿奖励 5~8 NBC 收稿时大力点赞支持：来自新手村和SCT的支持 @steem-guides 点赞以及 @team-cn / @teamcn-sct 等拥有大量 SCT 账户跟赞 《Steem指南》优秀稿件容易获得更多转发和点赞，包括来自 SCT 审查的点赞 特别奖励：奖励高质量的知识分享 每周编辑部可推荐一篇【编辑推荐】，给予额外的3 NBC 奖励 如何成为作者 只要在你的帖子里添加 #steem-guides 标签即可； 为获得 SCT 支持，建议使用 #sct #sct-cn 标签； 如果标签不够用，可以使用 CN区改进过的客户端，支持10个标签 成为《Steem指南》编辑和作者 CN+KR区：互补与合作除了推动《Steem指南》本身的持续进化，我们希望可以通过此项目也促进CN区和KR区更紧密的合作。在CN区和KR区都有希望帮助社区更好发展的伙伴们，若能将双方的资源进行更深度的整合和协作，有利于Steem社区的整体发展。 在此，我们也邀请 Steem 的韩语用户，向《Steem指南》和《Steem Engine手册》投稿，我们将邀请双语作者翻译并合并到中文版中，同时支持韩文版的发展。 中国龙 + 太极虎：龙吟虎啸，推动社区发展 《Steem指南》征稿为了方便投稿作者阅读和查找征稿计划，我们在GitHub页面发布征稿需求。 # 书籍 链接 1 《Steem指南》修订 https://github.com/steem-guides/steemh/issues/12 2 《Steem Engne手册》 https://github.com/steem-guides/steem-engine/issues/3 征稿要求截图如下，点击链接查看更多。 项目1：《Steem指南》修订 项目2：《Steem Engne手册》 除此之外，作者也可以建立新的话题，并添加 #steem-guides 标签，主动发表文章投稿；或分享自己从前的文章给《Steem指南》或《Steem Engine手册》，获取《Steem指南》作者奖励。 致谢最后，感谢《Steem指南》在过去、现在和未来的所有参与者。它将与CN社区同在，与Steem同在，与每一点通过写作此书帮助他人的善意同在。 本图由 @maiyude 设计 This page is synchronized from the post: ‘《Steem指南》激励计划’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem/"},{"title":"编辑部的故事：《Steem指南》编辑部渐入佳境","text":"欢迎参与《Steem指南》的编写 专栏编辑在上一篇 《Steem指南》激励计划 中我们提到招募“专栏编辑”以用于更好的支持《Steem指南》和《Steem Engine手册》的审稿、编辑和分享。随后很快得到了踊跃的支持，目前已经组成了用 @ericet 村长、@minloulou 迷路、@aaronli 阿柔、 @jianan 嘉楠 和 @robertyan 我 组成的编辑小组，每人负责编辑其中的部分内容。@jianan 前几天也介绍了编辑部的情况。 目前每个人负责的专栏如下： 我对于目前的编辑部的阵容还是很期待的： 村长：@julian2013 称村长为 manual 小王子，年产说明书上百篇，名不虚传； 迷路：迷路作为资深投资专家，JJM大户，对币圈的研究手到擒来； 阿柔：阿柔作为社区元老，魅力无边，说社交、活动、八卦、评论，娓娓道来； 嘉楠：嘉楠自己建有 dApp 的小站，在各类平台常介绍区块链和应用，此中高手； 阿盐：编辑开发和数据相关的问题，不太费力；介绍入门和操作相关的，暂时也能支持。 目前周一到周五的板块，只要有投稿更新，我们会尽量保持完成编辑并分享进展。周六和周日的板块的更新，频率会稍低一些，由编辑自由安排。 欢迎关注 @steem-guides 账户，订阅《Steem指南》周报的每日更新~ 此外，如果还有热心的社区成员，对于【入门与操作】、【开发与数据】、【杂谈与人物】等板块感兴趣，欢迎联系我们申请加入~ 编辑部的故事编辑部刚刚成立，大家也还在学习和磨合阶段，包括工具的使用（GitHub、HackMD等）、审阅的流程等等。但已经不断有新的产出，我觉得进展还是很不错的；接下来几天还会有更多内容更新。 《Steem Engine手册》，第1章：入门：https://steem-guides.github.io/steem-engine/start.html 《Steem 指南》，第2章，帖子收益的计算方式：https://steem-guides.github.io/steemh/jbcsp-.html#how-to-calculate-reward 《Steem 指南》，第6章，摄影爱好者Steem社区新手发帖入门：https://steem-guides.github.io/steemh/rrsq.html#steem-201973 昨天在编辑部群里，和阿柔八卦大学住宿的一些往事，非常有趣。 闲聊让我想起大陆上世纪90年代一部流行的情景戏剧《编辑部的故事》，该编辑部负责《人间指南》的编辑，似乎和《Steem指南》可以遥相呼应。 详情可见豆瓣的描述： 位于北京某处的《人间指南》编辑部，聚集着六位性格各异知识工作者。 老年知识分子里：主编老陈（吕齐 饰）对待工作兢兢业业、认真负责；牛大姐（童正维 饰）快人快语、疾恶如仇；老刘（张瞳 饰）胆小怕事，体现着传统知识分子懦弱的一面； 中年知识分子余德利（侯耀华 饰）善于接受新事物 ，聪明圆滑，带着点市井江湖的习气。青年一派，李冬宝（葛优 饰）想法前卫，正直善良，总想和机敏美丽的女同事戈玲（吕丽萍 饰）处处对象，无奈戈玲心高气傲，对待貌不惊人的冬宝不冷不热，若即若离。 因工作关系，编辑部的同仁经常接触社会各阶层的人物，光怪陆离，三教九流，改革开放大潮下的人生百态在小小的编辑部内一一呈现…… 本片被称为中国第一部电视系列喜剧，由赵宝刚和金炎联合指导，马未都、王朔、冯小刚担任编剧。 image from douban 这部剧以贫嘴闻名，其中的演员与剧组在现在看来都是顶级的大腕。虽然是部喜剧，但折射的却是人间百态。有兴趣的朋友，可以看看《人工智能人》一篇，李玲玉扮演的人工智能人也颇有趣味。 《Steem指南》的编辑部，看尽Steem的百态，也会演绎出自己的故事。 欢迎继续投稿最近 ZZAN 上线以后，我们也希望借助 ZZAN 的审查力量支持和鼓励《Steem指南》的作者们，欢迎作者们继续积极踊跃投稿，并添加 #zzan 标签获得审查支持。 征稿信息可以查看以下内容。但投稿主题并不受征稿范围限制。 # 书籍 链接 1 《Steem指南》修订 https://github.com/steem-guides/steemh/issues/12 2 《Steem Engne手册》 https://github.com/steem-guides/steem-engine/issues/3 This page is synchronized from the post: ‘编辑部的故事：《Steem指南》编辑部渐入佳境’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/3hnqy6-steem/"},{"title":"《Steem指南》steemh.org 回来了！","text":"steemh.org 重生记在 《Steem 指南》快讯：域名 steemh.org 停用 中，大鹏 @dapeng 宣布 steemh.org 已经过期，不再指向《Steem指南》。 自此以后，人间不再有 steemh.org。 之后的一段时间中，我们使用 http://steem-guides.github.io/steemh/ 作为《Steem指南》的域名。链接太长，相信很多人记不住，只好默默收藏。 今天半夜睡不着，爬起来想注册一个域名，顺手查了一下 steemh.org 依然可以使用，于是买了2年的服务。略加配置之后，我们目前又可以通过 https://steemh.org 访问新手们亟需的《Steem指南》了！！！ 《Steem指南》进展小记自我们 4月 重新启动《Steem指南》 以来，我们陆续取得了一些进展： 发布了《Steem指南》修订计划，更新了第2章（HF20规则）、第6章（活动）、第8章（工具）、第9章（dApp）等。您可以在 https://steemh.org 读到最新的版本； 对《Steem指南》的编辑流程进行了自动化改造，不再依赖本地的RStudio开发环境，使得编辑、测试、预发布等步骤都能够在 GitHub 上自动进行了，并借助 HackMD 优化了在线编辑的体验。 启动了《Steem Engine手册》，并且已经更新了“入门”、“货币”、“开发”、“杂谈”等章节。我们为 steemh.org 也添加了子域名，这本书也可以用通过 https://steem-engine.steemh.org/ 链接来访问。 发布了 《Steem指南》激励计划，通过更大力度和丰富的激励机制，让编辑和作者的贡献获得丰厚的回报、更有乐趣。 获得了 SCT 团队的 1000 SCT 赞助，并可能将 《指南》翻译为韩文版，走向国际化。 建立了一个实力不俗的 专栏编辑部， 持续在专业领域深耕，提高编辑工作的质量与可持续性。 此外，我们还发布了一些《Steem指南》的子项目，比如： Steem Links http://steem-guides.github.io/links/zh ： 分享 Steem 上的常用链接（或将改为：http://links.steemh.org/zh ） ； 花名册 https://steem-guides.github.io/roster/： 帮助记忆 CN 区用户的别名或绰号 (或将改为：http://roster.steemh.org）； CN区小门童 @cn-hello：向CN区新人介绍新手村 @team-cn 和 《Steem指南》 然后，今天，我们迎来了 https://steemh.org 的重生！ 希望这些工作有助于推动 CN区新手融入社区、让大家更好地在 Steem 成长和玩耍~ 历史与未来我们无法确知 Steem 的未来怎样、我们无法肯定区块链技术带来的一定是进步、我们无法预知人类文明的前途是光明的，但我们确信当下的工作对于周遭的社区中的朋友们是有益的，是可以激发更多人的潜力的，也或将帮助文明抵达更好的未来。 既然如此，“自反而缩，虽千万人，吾往矣”，只需继续前进即可，不问东西。 对于《Steem指南》的未来，除了我们已经达成和正在推动的，我还有一些其他的想法，有的仍不成熟，也需要更强大的执行力，例如： 继续改进编辑部的工作效率和自动化水平，制造工具、解放双手、激发创意。 推出一本名为《Steem 财富之道》http://fortune.steemh.org/ 的小册子，谈谈新手村从贫困村逐渐走向小康的过程，以及关于财富之道的谋略心法，以及我一直想写的《货币哲学》等内容；为了不给编辑部增加太多负担，这部册子我可能前期个人先来做一些编辑。 与更多社区如 ZZAN 等热衷于帮助新人的社区建立联系与合作，同时让《指南》的国际化取得一些进展； 探索《指南》等出版物的商业化的可能性，给创作者带来更多实利，帮助社区更好的分享经验与智慧。 感谢大家长久以来对此书的关注。欢迎继续向《Steem指南》投稿和提供建议。 本图由 @maiyude 设计 This page is synchronized from the post: ‘《Steem指南》steemh.org 回来了！’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem-steemh-org/"},{"title":"Autopilot: Claim SCOT token rewards automatically | 自动领取 SCOT 代币奖励","text":"介绍其实一直想写这个叫 Autopilot 的小工具，用于自动领取 SCT、PAL 等 SCOT 代币奖励，原因是 Steem Engine 在中国大陆访问比较迟缓，且 rewards 功能总需手动领取也比较麻烦。 上周 @julian2013 也提了这个问题，所以还是想尽快把这个服务完成。于是今天写了一下这个小的服务，希望对大家有用。 目前这个服务的介绍页面在 https://steem-driver.github.io/autopilot/ Image Source: Wikipedia - Autonomous Car | CC BY-SA 4.0 基本功能对于注册了服务的用户，每小时自动领取 (PAL, SCT, ZZAN, etc.) 等 所有SCOT 代币 如何注册服务为了使用这个服务，您需要： 通过 steemconnect 的授权功能 https://steemconnect.com/authorize/@self-driving 给 @self-driving 账户授予发帖（Posting）权力。通过 steemconnect 授权完成后，可以通过在 steemd https://steemd.com/@{你的账户} 的 Authorities 区域查看是否已经给 @self-driving 授权成功 正式服务推出时会提供注册界面，但目前还没有时间做前端页面，所以需要用户从注册的账户代理 2 SP 到 @self-driving 作为注册的验证步骤。可以通过行长的代理工具 https://steemyy.com/sp-delegate-form/ 进行代理，delegatee 中填写 self-driving。Autopilot 程序会通过检查代理的情况来获取用户名单，帮助用户自动领取奖励。等正式的注册页面上线后，用户可以随时取消 SP 代理。 后续计划 完善这个服务本身的功能和用户体验 添加新的功能，例如针对 SCOT 社区 设计的自动投票功能，对于 SE token 的市场价格预警等等 之后我们会进一步完善和更新这些开发计划。 如有任何问题，欢迎留言和提供建议。 IntroductionAutopilot is a automated bot that aims at easing your daily life at Steem and Steem Engine. https://steem-driver.github.io/autopilot/ Image Source: Wikipedia - Autonomous Car | CC BY-SA 4.0 Current Features Automatically claim the SCOT tokens (PAL, SCT, ZZAN, etc.) for the users of this service every hour How to UseIn order to register for autopilot, Authorize @self-driving account with steemconnect https://steemconnect.com/authorize/@self-driving to grant the posting authority. You can check whether you did this successfully in Authorities section in https://steemd.com/@{your_account} Delegate at least 2 SP to @self-driving account as a service registration step, so autopilot knows you want to enable the service. The delegation tool such as https://steemyy.com/sp-delegate-form/ can be used for the delegation. We need this delegation step because we don’t have a decent UI for this service yet. We’ll cancel the needs for delegation after this service gets mature, and you can undelegate the SP then. Future Plan Improve the Autopilot UI and user experience support more “autopilot” features for the users in the future, such as a smarter vote bot for SCOT communities and applications, alert for token price trends / patterns, etc. For any questions, please feel free to share your ideas and comments here. This page is synchronized from the post: ‘Autopilot: Claim SCOT token rewards automatically | 自动领取 SCOT 代币奖励’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/4syhlf-autopilot-claim-scot-token-rewards-automatically-or-scot/"},{"title":"Lens: 用数据看清世界 | Lens: A Clear World via Data","text":"本文介绍 Lens 项目，用基于 Steem Smart Contract、Scotbot 的数据，看清项目、组织、市场等的真实情形，了解过去、预测未来。 image source: Pixabay https://steem-driver.github.io/lens?page=open_order&amp;token=ENG 这个项目还在非常早期的状态，界面只是花了1个小时左右构建的，所以还很不完善。但接下来会持续改进，以帮助我们用数据看清世界。 缘起Steem作为基于区块链构建的社区，其优势之一在于可以快速建立信任、形成合作，这种信任建立的基础在于公开、可信的数据（即区块链这一数据存储和交互形式）。 诚然，数据（包括语言文字在内；需要注意的是，《说文》中，“信”字从“言”部），是人类建立信任、实现合作、发展文明的基础，但只有原始的数据（或者大数据）不足以建立信任，唯有通过“简化”、“提炼”为人类智力可以理解的元素，才能够形成信任的基础。 Lens （透镜）项目 的意义在于，一方面，通过让原始、真实和可信数据可以被收集和整理出来，并且易于使用，另一方面，通过恰当的展示方式，帮助使用者快速查询和发现有意义的信息、正确决策、快速行动。 推动我们开发这个小工具的起因有多个方面，包括： steem-engine.rocks 在 richlist 排序上不够灵活，查看真正的大鲸时，有些不便，例如无法根据 staked + delegation in 的 token 进行排序； steem-engine 市场中的订单数据其实包含更多的信息，例如订单的发布者（buyer 和 seller），通过公开数据，可以更清晰地看到市场中投机、作价等行为，方便我们更深入的了解市场； steem-engine 市场中的历史交易数据只显示30条，无法获取全部数据。 所以，实际上，这个最初版本的数据展示，也仅仅是为了解决这三方面的问题而实现的。此外，ZZAN 团队也正好需要一个类似的工具，基于这些问题和缘由，我们开发了这个小工具。 功能目前的功能仅有最基本的3个部分： 更透明的Open Order：除了展示价格，更展示挂单的用户和时间，可以看清是谁在主导和影响市场； 更全面的交易数据（Trade History）：默认的Steem Smart Contract只会保留24h的交易数据，这里实现了可以查看所有历史上的交易记录的功能； 更合理的Rich List排序：排序通常关注“财”（Balance）和“权”（Stake, Delegation），这里以Effective Stake（Staked + Delegation In）排序，相比steem-engine.rocks 里的rich list的排序，更合理一些。 Open Order 进行中的订单首先，我们需要注意的是，一般的市场订单数据具有一定的私密性，在常见的交易市场中并不一定不会公开展示的，但基于 Steem Smart Contract的交易数据是完全公开的，所以我们可以查询到所有的相关订单信息。 这一功能本身很容易理解，即添加了Account和Date这两列。 举例1：以下可以看到 ENG 的买入者和卖出者：https://steem-driver.github.io/lens?page=open_order&amp;token=ENG 可以看到 @steem.leo 在尝试买入更多 ENG 举例2：我们也可以看看谁在挂高价卖出 STEEMSPEAK：https://steem-driver.github.io/lens/?page=open_order&amp;token=STEEMSPEAK CN区的朋友有很多在参与高价卖出 STEEMSPEAK 对于想看清市场交易现状的用户，这个Open Order应该会比 steem-engine的市场更全面一些。 Trade History 交易历史交易历史是市场行为中很重要的数据，但一般的交易所也同样不会分享所有的交易历史数据，只能看到交易价格的变化。但 Steem Engine交易所的数据是完全公开的，所以只要对于 Sidechain 上的 transaction 进行一定处理，就能获取到所有的交易历史记录。 在这一页面中，上半部分我们展示的是直接从 Smart Contract中查询的24小时内的交易记录（超过24h的记录被删除），下半部分来自于从 sidechain 解析获取的全部交易历史数据。 上半部分的交易记录并无十分特别之处（虽然比 Steem Engine展示数据会更全一些），有趣的在于下半部分。 比如，可以看到最新的 R 的交易记录的参与者与完成时间：https://steem-driver.github.io/lens/?page=trade_history&amp;token=R 有需要也可以导出所有的相关 token 的交易数据，以便做进一步的分析。 其中这里完整的交易数据由于使用的接口不够稳定，可能会花较长时间加载数据。之后会改用一个新的数据接口，以解决此问题。 Rich List 持有者排名这一功能优化的不多，主要是几个方面： 增加了一些列，以方便排序，其中 Effective Stake = Staked + Delegation In；Total Holding = Balance + Effective Stake 如果持有或被代理的总额为0，则不会展示； 底部添加了各列的汇总信息。 例如，SCT的Rich List：https://steem-driver.github.io/lens/?page=rich_list&amp;token=SCT，以 Effective Stake 排序 这一功能，主要是弥补 steem-engine.rocks 在排序上不够灵活的问题。此外，steem-engine.rocks 进场掉线，也挺令人头疼的，所以用了这个小工具以后，我一般便不用 steem-engine.rocks 的Rich List了。 计划由于只是一个最简单的雏形，所以功能还是很不完善的，但接下来计划继续做一些改进，以下是大概的改进计划： 添加对个人市场信息的查询：例如个人的 open order, trade history, token overview, delegation details（代理给谁、接受了谁的代理） 等等 添加其他对 token 市场和货币的分析：持有者的增长变化，投资回报比例等等，以帮助投资者做更好的投资决策； 其他一些有趣的数据科学专题，例如 steemspeak 的价格波动分析，目前我们有一个“数据科学”小组正在基于兴趣进行这方面的研究和探索。如有兴趣，欢迎加入我们。 改进UI界面，添加 token 的选择以及改进整体的风格和交互等。 最后，如果你想试用这个工具，请不要忘了手动修改 https://steem-driver.github.io/lens/?page=rich_list&amp;token={token} 链接中的 {token}。最近会添加可以选择 token 的边栏，以方便用户。 参考文献 郑也夫，《信任论》，中国广播电视出版社，2006年 This page is synchronized from the post: ‘Lens: 用数据看清世界 | Lens: A Clear World via Data’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/lens/"},{"title":"Lens v0.1.1 新功能：我的订单、交易记录、货币汇总 | Lens v0.1.1 new features: Personal Open Orders, Trade History and Token Summary","text":"本文介绍 Lens 项目的最新功能：个人的订单、交易记录、货币汇总。 关于 Lens 项目的简单介绍，可以参考文章：Lens: 用数据看清世界 | Lens: A Clear World via Data，用基于 Steem Smart Contract、Scotbot 的数据，看清项目、组织、市场等的真实情形，了解过去、预测未来。 image source: Pixabay 项目的链接更新为了： https://tribes.rocks/lens/ 例如： https://tribes.rocks/lens?page=open_order&amp;account=aggroed 更新 New Features本次更新是由于群里讨论时，提到希望可以查看个人的未完成订单、交易记录等功能。这些功能可以很快基于原有的功能实现，所以花了较少的时间，很快发布了这个新版本。 我的未完成的订单 My Open Orders虽然我参与Steem Engine的交易并不积极，但有时也会忘了自己挂着哪些订单了，所以能比较方便地看到自己的订单的话，还是挺有用的。大家可以通过下面这个链接，查看自己的未完成的订单，将 {account} 替换成自己的账户： http://tribes.rocks/lens?page=open_order&amp;account={account} 当然，对于擅长利用公开数据研究市场和个人行为的朋友，也可以用它来观察其他交易者（trader）的行为。 例如：我们可以看看 @aggroed 挂了哪些订单：http://tribes.rocks/lens?page=open_order&amp;account=aggroed 原来 @aggroed 也在购入 PAL :) 我的交易记录 My Trade HistorySteem Engine 似乎没有一个明显的入口可以查看自己的交易记录，但这应该也是个常用功能。个人交易记录和某个token的交易记录的查询方式很接近，在这里，我们使用下面这个链接就可以，或者在页面中点击 Trade History这个链接。 https://tribes.rocks/lens?page=trade_history&amp;account={account} 例如，我们可以通过这个链接：http://tribes.rocks/lens?page=trade_history&amp;account=aggroed 查看 aggroed 的交易记录。 但需要注意的是，我们查询交易记录时目前使用了一个 steem-engine.rocks 的查询 transaction 的接口，但 steem-engine.rocks 的这一近日来非常不稳定，所以很可能暂时无法访问到交易记录信息，所以可能要稍后再做尝试了。所以我这里没有办法提供有效的页面截图。。。 但是，我们原来就计划搭建一个新的数据服务，所以之后会用新的数据接口来替换 steem-engine.rocks 的接口，应该能够解决这个访问的稳定性和性能的问题。 “又一个”货币汇总 | Yet Another Token Summary上一篇文章中，我们提到有一个改进过的 Rich List 用于展示某个 token 的持有者的情况。这里我只是替换了一个参数，便能看到对应的个人的所有 token 的信息。 这个功能和 Steem Engine的Wallet接近，但并不是很完善，目前的用处可能是帮助我们查看一些 Steem Engine 上并不容易查看的数据的整体情况。 比如，我想看看村长 @ericet 给 CN区的集资号代理了多少 token：https://tribes.rocks/lens/?account=ericet&amp;page=rich_list 又例如，原来 @ned 持有了大量的 NED 币。https://tribes.rocks/lens/?account=ned&amp;page=rich_list 计划 Plan上面这3个新功能也是较为简陋的，Lens 这个服务也很早期，将持续进行优化。 大概的计划在上一篇中已经提及，这里稍作更新和细化。 完善个人市场和货币信息的查询：添加新的页面，如Delegation, Transfers, Connections（账户间的联系）。 完善对 token 市场和项目的分析：投资价值（投资回报比例）、持有者的动态、项目动态等等，以辅助投资决策； 有趣的数据科学专题，如 steemspeak 的价格波动分析。目前我们有一个“数据科学”小组正基于兴趣进行这方面的研究和探索。如有兴趣，欢迎加入我们。 改进服务界面，添加 token 的选择、用户登录、改进整体的页面风格和交互等。 如果你对这个工具感兴趣，或者有别的想要看到的信息，不妨留言告知我们。 最后，Lens 的地址是：https://tribes.rocks/lens/ 如果要查看token和账户相关信息，请修改token和account相关的参数，如本文和前一篇文章Lens: 用数据看清世界 | Lens: A Clear World via Data 的案例中所介绍的。 This page is synchronized from the post: ‘Lens v0.1.1 新功能：我的订单、交易记录、货币汇总 | Lens v0.1.1 new features: Personal Open Orders, Trade History and Token Summary’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/lens-v0-1-1-or-lens-v0-1-1-new-features-personal-open-orders-trade-history-and-token-summary/"},{"title":"Delve into Steem Engine (1) | 深入理解 Steem Engine (一)","text":"本系列文章的目的是帮助开发者（Developers）学习和了解 Steem Engine 系统的基本原理，引导阅读 Steem Engine 核心项目的源代码。同时，本文也是对《Steem Engien手册》的《开发与数据》章节的投稿。 image source: https://github.com/steem-engine-exchange 缘由：导读做学问的一般方法：“学、问、思、辨、行”。其中“学”是以阅读和观察为主，对于不同的知识领域都是如此，所谓“欲求创新，必先通达”。举例来说，对于自认为有“知识”的人而言，如果并不熟悉和深入阅读人类智慧的经典或对世界的现象有深入观察，便难以称得上是有智慧。对于“技术”领域亦如是，如果对于人类技术的核心发展脉络并没有清晰的了解，那么对于“技术”概念在不同尺度的把握，也会存在一些误区。 狭隘一些来讲，对于所谓的“程序员”（Programmer或Developer），想要对于计算机技术有一定程度的掌握的话，恐怕也要对于最经典的代码（Code）有一定程度阅读和理解。这是个浅显的道理，但不见得有多少“程序员”真正下了苦功夫去认真“阅读”和掌握这些智慧，这与当下趋于功利、缺乏耐性、追寻变化的时代背景不无关系。具体来说，操作系统、计算机语言、数据存储和处理、计算引擎、Web浏览器、常用协议和工具等的代码，是最值得阅读的经典代码的例子，而这些代码中有很多都是开放源代码的（Open Source），可以轻松获取。 经典虽在，却少有人阅读。一方面，这是由于缺乏“夫学须静也”的心态，另一方面，阅读过程上的挑战可能在于缺少对于项目的背景、缘由、设计哲学、基本概念、系统结构、发展方向等“情境”（Context）的理解，所以要着手深入阅读对于很多人而言是困难的，换句话说，缺少“导读”。相对应地，我们有时能看到一些解读这些项目的书籍，也确实能降低普通读者了解这些项目的成本。但需要警惕的是，“导读”无法替代“阅读”，从整体上把握这些人类的智慧，需要系统、深入地“阅读”。 本文的目的正是“导读”。Steem Engine作为一个项目而言，其生命周期或难以预料，但至少它勾勒了一种构建现代应用和货币生态的可能性，并处在一个较为独特的位置，可以作为一个案例来阅读和学习，这是我们建议“阅读”它的原因。既为导读，难免失之笼统，而疏于细节；但求能把握住一些最核心的思想和方法，有益于读者。 结构：社群 = 货币 + 应用 + 人对于 Steem Engine的详细介绍，请参考《Steem Engine手册》中的内容。但如果要用一句话来总结 Steem Engine 的价值，我认为便是：“创建社群”（Create Tribes）。 首先，这里的“社群”（Tribe）的概念指一种通过货币（token）为媒介、应用（app）为载体，推动具有某一个或多个维度上具有共同特征的人群进行社会互动的组织形式。 其次，“创建”的含义在于 Steem Engine使得“社群”的形成，其依赖于社会、经济和技术的基础。Steem Engine的主要贡献是在技术上（app）和经济上（token）使其成为可能。至于社交上的可行性，则已经由 Steem 社区本身提供了“用户基础”；但同时，Steem 在技术上和经济上的基础功能，也不可忽视。 Steem Engine 从产出上来看，为各个“社群”的形成提供了（1）Token（2）App（或dApp）。所以帮助社群的组织者们创建Token和App，成为其最核心的能力。 相对应的，Steem Engine的核心代码模块，也为满足这些功能而服务。为了进一步理解 Steem Engine 的项目，我们应当了解它的项目的基本结构是怎样的。 image source: https://steem-engine.com 货币 Token首先，为了基于 Steem 创建货币，Steem Engine 使用了 Steem Smart Contract 用于支持货币的创建（create token）。毫无疑问，Steem Smart Contract 是 Steem Engine 最为核心的项目之一。 Steem Smart Contract: https://github.com/harpagon210/steemsmartcontracts 其次，为了进行 Token 的交易，Steem Engine 需要创建交易所用于协助用户的交易行为和钱包的管理，这就是 Steem Engine Exchange。这包括了最早期的版本 https://steem-engine.com，以及开发中的 Steem Engine DEX。 Steem Engine Exchange: https://github.com/MattyIce/steem-engine Steem Engine DEX: https://github.com/steem-engine-exchange/steem-engine-dex 最后，为了方便交易权限管理，以及查看各类Token，Steem Keychain 得到了广泛的使用，以精确和安全地控制用户权限。Steem Keychain 是实际上的 Steem 钱包的最新标准。 Steem Keychain: https://github.com/MattyIce/steem-keychain 以上这几个项目，是基于 Steem 创建货币（Token）的重要组件。我们将在之后的项目中依次介绍和解读其源代码。 应用 App除了货币（Token）之外，帮助社群（Tribe）的组织者快速构建应用（App）是推动社群发展的有力条件。基于 Steem 社区建立的 SCOT 社群，常常希望可以借鉴 Steem 的 Curation 等机制，用于激活社群。 为了实现这一点，Steem Engine 提供了如何创建 Smart Contract 以及对应的 App 的解决方案。但需要注意的是，目前 Steem Engine 支持特定的 Smart Contract，并通过 Scotbot 将 Steem 主链上的 transaction，翻译为 Sidechain 上的 transaction。由于 Scotbot 并非开源项目，我们只能查看它的 API 文档进行了解和使用： ScotBot API: https://github.com/steem-engine-exchange/scotbot-docs/tree/master/docs/api 为了创建 SCOT 应用，目前最常用的项目模板是基于 Steemit 的 Condenser 项目改写的 Nitrous: Nitrous: https://github.com/steem-engine-exchange/nitrous 此外 TokenBB、DTube 等也有对应的应用模板，但目前最常用的，还是 Nitrous 项目。 除此之外，用户还可以使用 Steem Smart Contract 和 Steem Engine 的API，构建自己的应用。目前使用较多的类库有： sscjs (Steem Smart Contract JavaScript Library): https://github.com/harpagon210/sscjs steemengine (python): https://github.com/holgern/steemengine 在之后的章节，我们将导读这些核心项目的源代码，帮助开发者了解如何开发和完善 SCOT 应用。 工具 Tool为了更好地管理和运营货币、应用和用户，一些列工具被创建出来。 其中，最为重要的是对于基于 Steem Smart Contract 的侧链（Sidechain）的块查询工具。目前，使用最多的是 https://steem-engine.rocks 项目： Block Explorer: https://github.com/inertia186/tender 我们也将在之后的章节介绍这些工具的源代码。 方法：主题阅读最后，既然是导读，那不得不简要谈一谈阅读方法。 如果你读过 《如何阅读一本书》 这本书，你可能了解它将阅读分类为基础阅读（基本的语言文字能力）、检视阅读（即略读）、分析阅读（即精度），以及主题阅读（阅读一系列同主题的书）。 作为类比，我们可以认为代码阅读也有这种分类： 会阅读基本模块（如函数、文件等），可以对应为“基础阅读”； 能够快速阅读整个项目的目的、结构、核心方法等，是为“略读”； 能够深入逐行阅读代码的设计方法和实现细节，是为“精读”； 容易被忽视的可能是“主题阅读”的方法，即对某一特定主题的一系列项目进行综合把握，回答或解决某个特定问题。 需要注意的是，虽然很多人上过“语文课”或“国文课”，但在阅读一本书的基本能力上，并不过关，且不具备好的阅读习惯。其实代码的阅读也是同样，有些人虽然有能力参与写一些简单或者复杂的应用，但在如何阅读完整的源代码上，并不具有完备的能力。以至于对应到“写作”也是一样，有些在大型公司工作的“开发者”，经常面对的也是局部的算法或模块，以至于对于整体的把握能力也有所不足。 《深入理解 Steem Engine》 系列，可以认为是一次主题阅读，以回答几个主要问题为目标： Steem Engine 的各个模块是如何设计的？如果要修改应当如何着手？ Steem Engine 的设计有哪些优秀之处？值得我们学习和借鉴 Steem Engine 存在哪些问题和挑战？它应该朝何处改进？ 为了更好的进行主题阅读，我们将分详略和表现形式，依次介绍 Steem Engine 项目的各个组成部分。例如，Steem Smart Contract 会是我们深入阅读的重点，但基于它构建的 sscjs 则可以快速略读。 接下来，我们将依次阅读这些开源项目。如有兴趣，欢迎你和我们一起阅读。 让我们从 Steem Smart Contract 开始。 参考文献 斯平内利斯，《代码阅读方法与实践》，清华大学出版社，2004年 Amy Brown, The Architecture of Open Source Applications, lulu.com, 2012 莫提默·J. 艾德勒 / 查尔斯·范多伦, 《如何阅读一本书》, 商务印书馆, 2004年 @aggroed, Scotbot launch! Time to make your own custom token powered by proof of brain on Steem!, 2019/05/09 This page is synchronized from the post: ‘Delve into Steem Engine (1) | 深入理解 Steem Engine (一)’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/delve-into-steem-engine-1-or-steem-engine/"},{"title":"功过与是非","text":"上一期《贺寿与建祠》中，我们谈到了写人物的对联，如寿联与祠联。今日继续人物的话题，谈一谈“挽联”。 梁启超在《李鸿章传》中说：“天下唯庸人无咎无誉”。千古之下，本无完人，也无须完人。 大人物的功过是非，自来不易评价。庸碌之人评论其人，虽多巷议，实无定论：其一，未曾有大人物的境界与视野，以己度人，未免失之偏狭；其二，其评价多依据“风闻”，不力求史实与证据，颇多臆测。 正如赵翼所说： 只眼须凭自主张，纷纷艺苑漫雌黄。矮人看戏何曾见，都是随人说短长。 挽联，多由亲朋所赠，比之媒体的捕风捉影，更有可信之处、更多真情实感，也是我们观看世间的一道窗口。 功过上一篇中我们曾提到一副讽袁世凯的寿联，这里以袁氏为例，继续谈”挽联“。 今人对袁氏的“差评”，在于其“洪宪复辟称帝”，在历史教科书中被盖棺定论为“独夫民贼“。但历史进程中的细节，不该如此简单观看：至少“洪宪”本是“洪扬宪法”之意；所谓“复辟帝制”，是以日德等“君主立宪”为模仿的对象；所谓“宋教仁案”，史料也多认为非袁所指使。 当时的“共和”与“君宪”两派，针锋相对。在军政实力上，以“君宪”派为强（“非袁不可”，其意在此），但在舆论和谋略上，似乎“共和”派更高一筹（如蔡松坡之反复）。“君宪”的眼光，确不如“共和”激进与长远，但动荡之中的“保守”与“统一”，也有广大的支持者。“共和”既然最终获胜，则“君宪”一派的袁项城、杨度、严复、刘师培、康有为等人，自然被历史进程所抛弃；只是所谓“胜败”，从历史的节点来看，却本非注定的。 且看杨度挽袁项城联：袁氏死后，群龙无首、军阀割据，正在情理之中。至此30余年后，方定于一。 民国误共和，共和误民国，百年之后，再评是案；君宪负公明，公明负君宪，九泉之下，三复斯言。 讽袁氏的挽联，则多为“无名氏”所作为佳。例如讽袁氏的生平，确是当时舆论： 刺遁初而遁初死，鸩智庵而智庵死，最后杀夔丞而夔丞又死。死者长已矣，阴府三曹谁折狱？使朝鲜则朝鲜亡，臣满清则满清亡，及身帝洪宪则洪宪亦亡。亡之命也夫，轻舟两岸不啼猿。 总得来说，袁世凯一时之国柱、数十年之雄，执掌天下之时，也并非毫无作为；于家国，既有功、亦有过。然国体之争既败，身死名灭、为他人笑者，此乃作史者之无情也。 image source: Wikipedia - 袁世凯 是非袁项城的对立面，正是孙中山，今人称之“国父”者也。 孙中山的生平，无须赘言。然公之事业，未能亲手完成，及先生逝世，仍然军阀混战、“天下三分”，所以“革命尚未成功，同志仍需努力”，其意在此。孙文虽有“国父”之名，却无“国父”之实，此其所不及华盛顿者。 1925年3月12日，孙先生逝世，自有各方名流所赠之联，也有政敌所赠之联。 国民党元老于右任作挽联： 总四十年胼手胝足之工，直是为生民立命，为天地立心，历程中，揖让征诛举同尘土；流九万里志士劳民之泪，始知其来也有因，其生也有自，瞑目后，精神肝胆犹照人寰。 蔡元培赠联： 是中国自由神，三民五权，推翻历史数千年专制之局；愿吾侪后死者，齐心协力，完成先生一二件未况之功。 杨度赠联，也是公论： 英雄作事无他，只坚忍一心，能成世界能成我；自古英雄有几？正疮痍满目，半哭苍生半哭公。 袁克文反对其父袁氏称帝，此联只中，兼有惋惜袁、孙二人之意（上联指中山陵近明孝陵）： 埏隧近明帝故陵，自有江南供俎豆；史迁作霸王本纪，不教成败论英雄。 袁与孙，都未能竟其功，然一时之方略的是非，难以逆赌。百多年来各种尝试与探索，至今仍无定论；所谓是非，也常常不只有一个答案。 然能保持多元、开放的头脑，这或许是后来者从历史的浪潮中所能收获的。 image source: Wikipedia - 孙中山 活动上一期活动，我们为刚满50、60或70级的寿星作寿联。 下面为活动结果。‌‌ 参与： 赠机机的小号 @kissfirer 的寿联如下 @andrewma 古有丝绸之路今有机机著传 @julian2013 如飞蛾赴火，祈凤凰涅槃。 @abcallen 福福福福入冬还寿寿寿寿比南山 赠野夫：@zhongyefu 的寿联如下 @andrewma 如论帅气逼人唯我也夫是也 @zhongyefu 自寿联 忽临茫茫雪没及盈盈心 赠平健：@m18207319997 的寿联如下 @m18207319997 自寿联 斯缇姆价格平稳不下跌，新手村发展健全永前进！ 赠阿盐：@robertyan 的寿联如下 @andrewma 文如寅技超Robert文武双全心似镜胸如山虚怀若谷 @julian2013 正儿八经腌萝卜学富五车是真干 点评：‌‌ 这期参与还是挺活跃的，感谢大家的参与与对寿星们的祝福。‌ 奖励：‌‌ 按照上期规则，每位有他人给他写对联的寿星都能获得 1 STEEM：@kissfirer, @zhongyefu, @robertyan。 最佳作品获得 2 STEEM 奖励：@julain2013 自寿联为佳，如下： 其余每人获赠 0.1 STEEM 参与奖。 本期最佳是 @julian2013 为 @kissfirer 自寿联，正是“吻火者”之谓。 如飞蛾赴火，祈凤凰涅槃。 —-‌‌ 以下为本期对联活动内容：为100年内故去之人任选一位做“挽联” 形式：‌ 为“挽联”，含上下两联‌ 规则：‌‌ 满足对联的基本规则； 不许抄袭任何别人的成果； 不应当使用机器协助，如微软亚洲研究院开发的“自动对联” ‌奖励：最佳作品奖励 3 STEEM；参与奖，各0.1 STEEM，前10名都有奖 :)‌‌ 参与方式：回复本文‌‌ 评价方式：由 @robertyan 评判 时间：本文发布起7日内有效‌‌ 更多对联相关文章，可以查看：https://steemblog.github.io/@robertyan/tags/cn-couplet/ 参考文献 梁羽生，《名联观止》，北京大学出版社，2017年 This page is synchronized from the post: ‘功过与是非’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/3emjqs/"},{"title":"Steem Engine Threat Model (1) | Steem Engine 安全威胁模型（一）","text":"区块链安全威胁模型 | Blockchain Threat Model互联网平台和金融市场，从来不缺乏投机者和攻击者。在区块链领域，由于结合了互联网和金融的特点，除了其带来的技术创新之外，也激发了大量的金融犯罪，包括洗钱、经济诈骗、安全攻击等等，不可胜数。犯罪者总是走在科技创新的前沿，这是技术史上的常例。 由于 Steem 等区块链平台存在数据公开、资金敏感的特点，与其他常见的网络安全模型相比，如 OWASP 等，存在很大的差异。这也提出了在此领域建立针对性的安全模型的必要。 此前，我们在其他的文章中介绍过 SportsTalkSocial 等平台发生过的创世攻击（Genesis Attack）的典型案例。本文简要介绍 Tunes 项目（ https://www.tunestoken.com/ ）面对的较为严重的 空投攻击 | Airdrop Attack 的情况。 image source Pixabay 空投攻击 | Airdrop Attack在文章 A New Tribe Is Born!!! Welcome To The Tunes Tribe!!!!! 中，Tunes 平台将对添加评论的用户进行空投。 这与之前的 ZZAN 空投的情形类似。 由于 Tunes 并没有明确表示针对申请者的申请条件，很快有大量用户进行申请。昨天在浏览申请留言时，我们发现有一位有约 500 个小号的用户，动用了他的大量小号（或许不是全部）进行了空投认领，很快将评论的总数刷到了 1000+。 具体情况可以参见上文中的评论部分，我们会发现有大量模式相同的账户名称与相似与反复出现的留言格式。通过 steemd 的简单查看，我们可以发现这些账户都由同一个主账户控制。 screenshot from A New Tribe Is Born!!! Welcome To The Tunes Tribe!!!!! 毫无疑问，在通过留言进行空投的形式中，这类攻击很容易被引发。 在之前的 ZZAN 空投中，也不乏有用户通过大量小号留言来领取空投。我们发现这同一位攻击者在 ZZAN 的空投活动中也同样领取了大量ZZAN空投，并在市场上卖出了大量ZZAN。除了这类恶意的攻击者，也不乏一些存在多账号的用户，通过自己的多账户，领取空投的情况。 以上的空投攻击（Airdrop Attack）的情况目前已经告知了 Tunes 团队，他们将采取措施对申请者进行更为严格的审查。 如何防御 | CountermeasuresTunes 和 ZZAN 在空投时，都采用了回复留言并发放空投的形式。这种形式，这对于投机者而言是极为廉价和可控的发动空投攻击的方式。作为防范，空投一方有必要进行账户信息、账户关联验证、黑名单验证等方式来进行过滤，以提高空投的有效性和安全性。 账户信息验证 | Account Info Validation首先，在平台自主空投模式下，运营方通常会根据账户的 Stake情况、账户年龄、声望、发帖频率、活跃度等信息，来生成一个基本的名单，进行空投。 在“留言回复模式”下，虽然不会主动搜寻名单，但同样需要加入一层审查机制，对申请的账户进行基本的信息排查与验证，以防止被投机者利用。 账户关联查询 | Accounts Affinity在相对匿名的平台上，小号泛滥是无法遏制的行为。但账户间存在的互动、转账等社会与经济联系有时难以避免；而且，当账户要套现时，也经常不得不使用同一个交易所账户：这些都是鉴别小号的有效手段。 目前的挑战可能在于进行关联分析的成本较高。针对这一问题，Lens工具原来就打算提供一个展示账户关联的工具，以防范攻击者，将在近期推出。 黑名单共享 | Shared Blacklist此外，对于存在“犯罪记录”的用户，各Tribes和 Steem Engine 方面应该使用一个共享的黑名单，用于帮助各社区的运营者和用户们，发现和识别“犯罪分子”，清除负面影响。 对此，Lens 可能也会提供一个黑名单的入口，帮助用户识别常见的社区扰乱者。 最后本文是【Steem Engine 安全威胁模型】系列文章之一，用于介绍于 Steem 等区块链平台中常见的安全攻击范式，帮助平台的运营者和使用者们，更好的使用平台、获取价值。 安全攻击难以彻底扼制和避免的，但通过有效的学习和使用防范机制，可以帮助各方共同遏制常见的攻击者和投机者的行为。 This page is synchronized from the post: ‘Steem Engine Threat Model (1) | Steem Engine 安全威胁模型（一）’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem-engine-threat-model-1-or-steem-engine/"},{"title":"Lens v0.1.2 新功能：市场订单记录、快速交易记录查询、转账记录、代理详情和记录  | Lens v0.1.2 new features: Order History, Improved Trade History, Transfer and Delegation Details and History","text":"本文介绍 Lens 项目的最新功能： 市场订单记录 更快的交易记录查询 转账记录 代理详情、代理记录 关于 Lens 项目的简单介绍，可以参考文章：Lens: 用数据看清世界 | Lens: A Clear World via Data，用基于 Steem Smart Contract、Scotbot 的数据，看清项目、组织、市场等的真实情形，了解过去、预测未来。 image source: Pixabay Lens 项目的链接为： https://tribes.rocks/lens/ 例如： 查看 @aggroed 的交易记录：https://tribes.rocks/lens/?account=aggroed&amp;page=trade 新功能 New Features本次我们开发了一些之前计划中的功能，并使用了最新的Steem Engine的API提高了查询的效率。 1. 我的订单记录 My Orders History在前一个版本的更新中，我们就已经添加了未完成的订单的功能，这次更新中为了方便查询历史上提交过的订单，我们也添加了订单记录这个功能。 比如我们想学习某一个用户的挂单策略，甚至查看某个挂单的用户是不是交易机器人，我们可以通过Order History 的功能来进行分析。 以下为一些案例： 第一个例子。以 @aggroed 为例，我们可以看到他的PAL挂单是买单多于卖单，我们可以看到他的挂价随着市场价格的变化也在不断进行调整，并对市场价格的稳定有一定的影响力。 PAL 挂单记录：https://tribes.rocks/lens/?account=aggroed&amp;page=order&amp;token=PAL screenshot from https://tribes.rocks/lens/?account=aggroed&amp;page=order&amp;token=PAL 第二个例子。之前很多人对于 SCT 的价格快速上升到 4~5 Steem 觉得很兴奋，当然这背后是离不开团队的护持的。实际上，我们可以直接看到 Jack 的挂单细节，结合交易记录，还可以看到是谁在对应的价格卖出了 SCT。 SCT 挂单记录：https://tribes.rocks/lens/?account=jack8831&amp;page=order&amp;token=SCT screenshot from https://tribes.rocks/lens/?account=jack8831&amp;page=order&amp;token=SCT SCT 交易记录：https://tribes.rocks/lens?page=trade&amp;account=jack8831&amp;token=SCT screenshot from https://tribes.rocks/lens?page=trade&amp;account=jack8831&amp;token=SCT 第三个例子。之前村长 @ericet 提到过 MEEP 背后有交易机器人的影子，通过观察 此账户的MEEP 交易记录，我们可以看到在6月29日至7月2日之间，有接近500个买单+卖单被生成，确实比较像机器人操控市场的行为。交易频率是识别机器人的重要特征之一。 MEEP 挂单记录: https://tribes.rocks/lens?page=order&amp;account=inertia&amp;token=MEEP screenshot from https://tribes.rocks/lens?page=order&amp;account=inertia&amp;token=MEEP 2. 更快的交易记录查询 Faster Trade History Query在上一篇中，我们已经推出了交易记录查询的功能，但由于受依赖服务的稳定性影响较大，有时会不可用。所以，对于个人交易记录的查询，我们采用了新的Steem Engine API，查询效率和稳定性都有了很大的提高。 譬如，我们要查看某位曾经在ZZAN空投中采用大量小号领取空投的攻击者的市场行为，可以查看她/他的交易记录。原来她/他已经出售了 80K+ 的ZZAN（出售价格为 3K+ Steem）。（表格之下的总和统计的是所有交易记录的总和，而不只是当页的综合。） ZZAN交易记录：https://tribes.rocks/lens/?account=mcenoramle&amp;page=trade&amp;token=ZZAN screenshot from https://tribes.rocks/lens/?account=mcenoramle&amp;page=trade&amp;token=ZZAN 目前交易记录的查询，比之前已经快了很多，应该可以正常使用了。 3. 转账记录 Transfer History转账记录在 Steem Engine 中应该也可以查看。这里的转账记录可以查看多种 Token 的记录，同时将转出与转入分离，可能使用时会更灵活一些。 比如，我们想看上面提到的这位攻击者主要从哪些小号转账，以及她/他的主要关联账户是哪些，我们可以通过转账记录查询到一些蛛丝马迹。 如果可以加上一些转账的数额和分布的统计信息，或许会更容易发现其中的关联。这一功能我们可能会在 Affinity 账户关联的功能中实现。 ZZAN转账记录：https://tribes.rocks/lens?page=transfer&amp;account=mcenoramle&amp;token=ZZAN screenshot from https://tribes.rocks/lens?page=transfer&amp;account=mcenoramle&amp;token=ZZAN 4. 代理详情和记录 Delegation Details and Records代理是一个十分有趣的功能，但有时候我们希望查看代理给了谁以及谁代理跟了我时，在Steem Engine中不是很方便。所以代理详情主要是展示代理者和被代理者的基本信息。例如，我们可以看看CN区的集资号的代理情况。 @cn-zzang 代理情况：https://tribes.rocks/lens/?account=cn-zzang&amp;page=delegation 点击 Amount，按照数量排序 screenshot from https://tribes.rocks/lens/?account=cn-zzang&amp;page=delegation @cn-sports 代理情况：https://tribes.rocks/lens/?account=cn-sports&amp;page=delegation 点击 Amount，按照数量排序 screenshot from https://tribes.rocks/lens/?account=cn-sports&amp;page=delegation 使用代理历史记录的功能，我们还可以看到用户逐步代理的记录，即每一次新代理的数量是多少。 代理给 @cn-zzang 的历史记录: https://tribes.rocks/lens/?account=cn-zzang&amp;page=delegation screenshot from https://tribes.rocks/lens/?account=cn-zzang&amp;page=delegation 以上便是代理详情和代理记录的页面。 计划 Plan本次的更新的4个功能都和历史信息有一些关系，帮助我们看清事物的变化。 Lens 的服务的页面交互、功能的完善度和友好度还存在很多缺陷，我们会继续优化。以下是更新的计划： 添加更多信息查询功能：如账户关联 Affinity、共享黑名单、排行榜等。 完善对 token 市场和项目的分析：投资价值（投资回报比例）、持有者的动态、项目动态等等，以辅助投资决策； 有趣的数据科学专题，如 steemspeak 的价格波动分析。目前我们有一个“数据科学”小组正基于兴趣进行这方面的研究和探索。如有兴趣，欢迎加入我们。 改进服务界面，添加 token 的选择、用户登录、改进整体的页面风格和交互等。 如果你对这个工具感兴趣，或者有别的想要看到的信息，不妨留言告知我们。 Lens 的地址是：https://tribes.rocks/lens/ 目前如果要查看token和账户相关信息，请修改token和account相关的参数。 This page is synchronized from the post: ‘Lens v0.1.2 新功能：市场订单记录、快速交易记录查询、转账记录、代理详情和记录 | Lens v0.1.2 new features: Order History, Improved Trade History, Transfer and Delegation Details and History’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/lens-v0-1-2-or-lens-v0-1-2-new-features-order-history-improved-trade-history-transfer-and-delegation-details-and-history/"},{"title":"Cn-Curator: 基于转发的好文推荐系统 | Cn-Curator: Reward Awesome Posts by Resteem","text":"image from: https://github.com/awesome-steem 起因大伟老师 @rivalhw 最近一直在通过好文推荐来推动社区的活力和发展，对于CN社区的写作者来说，是实实在在的认同与帮助。 但【好文推荐】目前每天手动的编辑量有些大（约0.5~1小时），大伟老师在《Steemit社区好文推荐的一点新想法》 中已经介绍了希望可以自动化部分好文推荐的工作的计划。简言之，系统将自动发布文章，汇总大伟老师已经转发的“好文”，并且根据一定的比例自动点赞。 虽然 Steem 的生态并不仅仅限于“写作”或“文章”，但文章的创作仍然是 Steem 最重要的沟通和交流方式之一，也是人类表达思想、进行交流的核心手段。 就“文章”而言，Steem的默认设置是认为 Vote（投票）是最核心的表达认同、赞赏、反对等 Curation 的方式，但由于经济利诱的影响，使得 Vote 并不那么纯粹，而夹杂了多方利益的博弈。相比之下，一般而言，Reblog / Resteem （转发）似乎更值得信服。一般而言，被转发次数较多的文章或者是确实令人惊叹，或者是与更多人的切身利益或兴趣相关；也就是说，转发也是一种实际上的 Curation 的非常有效的手段。 所以，大伟老师通过转发来表达自己对好文的赞赏，似乎也更在情理之中了。Cn-Curator 系统目前的实现方式也是通过观察 curator 的转发行为，自动汇总报告、自动进行的点赞。 实现这个系统基于 Autopilot 系统的模块构建，实现是十分简单的，大约花费了1h左右实现（包括调试、测试、部署等）。 由于 Autopilot 项目已经实现的一些用于构建自动化工具的模块（材料、食材），我们可以很快地写一些 Recipe（菜谱），用于自动发布文章、自动点赞、自动领取收益、自动转账等操作。 比如，Cn-Curator 系统最主要的代码是实现了两个 cn-reader 的 recipes： 一个是自动发文的“菜谱”，代码在 https://github.com/awesome-steem/cn-curator/blob/master/recipe/info/cn_reader.py 一个是自动点赞的“菜谱”，代码在 https://github.com/awesome-steem/cn-curator/blob/master/recipe/vote/cn_reader.py 这两个“菜谱”的核心代码也比较容易理解，这里简单贴一下。通过代码里的几个参数，大家应该能理解 recipe 想要表达的意图。 自动发文： 123456789101112131415161718192021222324252627282930313233343536373839404142434445RESTEEM_ACCOUNT = &quot;rivalhw&quot;INFO_ACCOUNT = &quot;rivalhw&quot;CURATION_CYCLE = 1.01 # daysclass CnReaderSummary(InfoRecipe): def mode(self): return &quot;query.comment.post&quot; def config(self): return { &quot;account&quot;: RESTEEM_ACCOUNT, &quot;days&quot;: CURATION_CYCLE, &quot;reblog&quot;: True } def by(self): return INFO_ACCOUNT def title(self, data): return &quot;好文天天赞{}榜上有名&quot;.format(get_zh_time_str()) def body(self, data): date = get_zh_time_str() count = len(data) head = [&quot;作者&quot;, &quot;文章&quot;] body = [] for item in data: row = [ &quot;@&quot; + item[&apos;author&apos;], &quot;&lt;a href=\\&quot;{}\\&quot;&gt;{}&lt;/a&gt;&quot;.format(self.get_url(item[&apos;authorperm&apos;]), item[&apos;title&apos;]) ] body.append(row) table = build_table(head=head, data=body) return POST_TEMPLATE.format(date=date, count=count, table=table) def tags(self, data): return [&quot;cn-reader&quot;, &quot;cn&quot;, &quot;partiko&quot;, &quot;zzan&quot;] def ready(self, data): # post only there&apos;re more than 0 resteemed posts return data and len(data) &gt; 0 def get_url(self, authorperm): return APP_URL + &quot;/&quot; + authorperm 自动点赞： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849RESTEEM_ACCOUNT = &quot;rivalhw&quot;VOTER_ACCOUNT = &quot;rivalhw&quot;CURATION_CYCLE = 1.01 # daysclass CnReaderVoter(VoteRecipe): def __init__(self): super().__init__() self.posts_num = 0 self.voted_posts = 0 def mode(self): return &quot;query.comment.post&quot; def config(self): return { &quot;account&quot;: RESTEEM_ACCOUNT, &quot;days&quot;: CURATION_CYCLE, &quot;reblog&quot;: True } def by(self): return VOTER_ACCOUNT def what_to_vote(self, ops): if not self.ops.is_upvoted_by(self.by()): logger.info(&quot;We will vote the post {}&quot;.format(self.ops.get_url())) self.posts_num += 1 return True return False def who_to_vote(self, author): return True def when_to_vote(self, ops): return VOTE_TIMING # mins def how_to_vote(self, post): self.voted_posts += 1 logger.info(&quot;voting {} / {} posts&quot;.format(self.voted_posts, self.posts_num)) weight = self.voter.estimate_vote_pct_for_n_votes(days=CURATION_CYCLE, n=self.posts_num) * VOTE_PERCENTAGE if weight &gt; 100: weight = 100 return weight def after_success(self, res): if self.voted_posts == self.posts_num: logger.info(&quot;Done with voting. Exit.&quot;) sys.exit() 我们将部署这些脚本于每天晚上8点执行，所以大伟老师当天的转发会自动生成报告并进行点赞。如大伟老师所说，随着成本的降低，类似的curation工作或许可以拓展到更多的领域。 Cn-Curator 项目在GitHub以 MIT License 开源：https://github.com/awesome-steem/cn-curator 欢迎参与贡献或提出你的建议和问题~ 未来在 Awesome Steem #0 | 你欣赏的人生感言或经验 中我提到过， 博物馆的馆长，就常常被称为 Curator。 所以Curator的工作不仅仅是用金钱去奖励别人，而更本质的是让世界上有魅力、有温度的内容可以被留存、传递和发扬出去。 Steem 的美妙之处之一，在于其中有很多精彩而值得驻足观赏（awesome）的人、物和事。Cn-Curator 的意义之一，也是让这些美妙和精彩（awesome）的瞬间可以以更低的成本，被更好的保留和发现吧。 与大伟老师的【好文推荐】的努力相对应的，SteemCN 也有计划实现一个【好文推荐】的页面，用于汇总 大伟 @rivalhw 和 @cn-curation 等推荐的文章。此功能也在开发的过程中：https://github.com/steem-driver/condenser/issues/11 欢迎提供建议或贡献你的力量。 最后，感谢大伟老师在【好文推荐】的工作上的坚持与耐心；诚然，这并非一项容易的工作，需要诚意正心，需要兴趣与毅力，也需要合适的工具。同时，也感谢所有坚持在 Steem 创作更好的作品的朋友们，世界因你们而美好 :) This page is synchronized from the post: ‘Cn-Curator: 基于转发的好文推荐系统 | Cn-Curator: Reward Awesome Posts by Resteem’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/cn-curator-or-cn-curator-reward-awesome-posts-by-resteem/"},{"title":"如何培养信息素养？ / 浅谈大众文化与精英文化（之一）| About Information Literacy","text":"问题来源本文起源于今天看到的两件小事： 第一件是，今天在微信群里看到转发的一则关于 新学期名单：刘小灵童、程门立雪、吴@&amp;&amp;、赵#@……当老师太难了！ 的笑话。新生的名单中包含了很多不常用的汉字，和比较搞笑的组合，如“刘小灵童”、“程门立雪”等。 直接印象是这个班级名单中出现非常规的姓名的频次过高了，通过搜索引擎检索后便能发现这是一则伪造的新闻（笑话），与2018年9月的一则新闻高度雷同 李锁铛然、刘小灵童…这届新生名字让人笑崩溃 第二件是，在大伟老师的文章令人失望的媒体APP(自媒体)中讨论的关于当下的新闻媒体的信息质量低下的问题。 “假新闻”与“劣质新闻”这些“问题”，展现了我们当下时代中，面对信息的迷惑与焦虑。这背后，也隐藏着精英文化与大众文化对峙与分歧的文化挑战。 Partial map of the Internet, with nodes representing IP addressesBy The Opte Project - Originally from the English Wikipedia; description page is/was here., CC BY 2.5, https://commons.wikimedia.org/w/index.php?curid=1538544 信息困境的来源信息与大众面对“假新闻”与“劣质新闻”，常见的归因是将问题的根源归结于技术的发展、信息传播方式的变迁，即“互联网”、“社交网络”、“大众媒体”的兴起，但忽视了技术对文化的影响。例如，假消息为何产生、假消息为何受到追捧，互联网“新闻”为何质量低下，等等，并非技术问题，而是社会问题。 发布假新闻的作者利用“自媒体”获得了原来所不曾拥有的传播能力，但另一方面，是由于存在大量不善于识别假新闻和热衷传播“笑话”的大众读者，才促成了消息的广泛传播。 制造低俗的新闻和文章的作者，通过互联网触及了大量的读者，但这些文章的高阅读量也反应了大众的低俗趣味。 也就是说，至少是“互联网”信息渠道和大众文化的“合谋”，造成了“假新闻”与“劣质新闻”的流行。 通过考察技术史，可以发现，信息技术对大众文化的发展有着密切的联系，例如： 北宋以后，随着活字印刷技术的出现，推动了出版业的兴起、教育的普及和市民社会的繁荣，市民的审美趣味得到了越来越多的重视，元曲、明清小说的发达是大众文化兴起的显著的例子； 19世纪之后，在欧洲与美国，随着报纸、广播、电报等的出现，都市人口的增加，社会平等得到充分的重视，以及大众消费的增加，大众文化的话语权得到了显著增强。 20世纪下半叶以来，好莱坞电影的繁荣与彩色电视的普及，以及21世纪以来的互联网与社交网络的兴起，使得大众文化出现了全球性的扩张，颠覆了过去精英文化为主导的格局。 在信息与市场的簇拥下，大众文化已经成了当前媒体传播的主流样式。所以，当我们在思考如何培养或提升“信息素养”的时候，需要面对的不仅是“信息”这一抽象的概念，更是具体的大众文化的形态。以此种对信息和文化的解释为基础，我们能更清晰地分析采用怎样的态度来应对信息的困境。 上智与下愚《论语·阳货》说：“唯上智与下愚不移”。这在现代强调平等的时代，多半是不合时宜的话，但随着科学的分科化越来越精细，工业时代大规模的分工协作的发展、尤其是流水线的出现，工作技能的要求越来越专门化，知识领域之间的隔阂越来越深，一定程度上削弱了大众锻炼自身智慧、增长本领的机会。例如，我向来觉得农民比工人更有创造力，思维更为系统全面。农民通常需要对作物栽种的整个流程有深刻而具体的了解，了解天时、熟悉市场与乡村社会的规则，而工人则长期锁定在一个狭窄的专业分工中。 再举个信息时代的案例：大型互联网企业中常常基于效率的考量，将软件工程师分工为开发工程师、测试工程师、运维工程师、项目经理，甚至更多（系统工程师、前端开发工程师、后端开发工程师、游戏开发工程师、数据库管理者、敏捷教练、大数据开发工程师、数据科学家…… 数不胜数）。其中，测试工程师认为开发工程师不应该测试自己的代码而应该由专门的人员来测试，这直接导致一些开发工程师（也就是常说的程序员）的测试水平极为低下，他们却认为这是理所当然的。实际上，测试的方法确有精深之处，但掌握基本的方法却毫不困难，因此把作为整体的软件工程划分为琐碎的诸多模块，对于工程师的思考能力与技能的健全发展却是极大的损害。分工的狭隘之处，可见一斑。“全栈工程师”（指掌握全部技能的软件工程师）虽然受工程师追捧，在实践中却远远达不到其理想状态。 这种随着工业化而产生的大众的智力和能力的衰弱，不仅仅体现在生产的方面，更体现在军事、家务、游戏等诸多领域。[1] 就家务而言，以前的家庭自己制作被褥、衣服、围巾、手套，打造家具，修理水电等等，都不在话下，和现在高度依赖网购、上门服务的城市家庭相比，不可同日而语。现在的孩子常玩各类电子游戏，尽管不乏佳作，但多以制造紧张专注的氛围为长处，以迎合炫耀和虚假的成就感为“钩子”，仅就对智力的要求与锻炼而言，与传统游戏如围棋、中国/国际象棋、桥牌等相比，差距是显而易见的。 所以，除了“大众文化”已经形成的“无需深沉思考、无需费心咀嚼”[2]的特点之外，工业化以及正在发生的智能化趋势，进一步削弱了大众的智力。认识到“大众文化”呈现“弱智化”的多方面历史与社会原因，有助于我们进一步思考培养“信息素养”的基本思路。 信息素养的基本策略“信息素养”的形成，充分叙述需要极长的篇幅，这里仅从“动机”、“来源结构”、“文化”这三个方面做简要叙述。最简单易行的方法，我认为，别无新意，不过是“主动读书”四个字而已。至于复杂而更为有效的方式，则是与富有挑战和深度的生产或生活活动相结合，有目的的运用信息与知识。本文只讲“主动读书”的部分。这里只是根据大部分面对信息困境的普遍情况而提出的策略，具体的实施应该是因人而异的。 需要注意的是，我们这里提出的方案，恐怕并不能解决我们识别某一则假新闻，或者找到某个合适的新闻客户端的问题，但可能帮助我们从整体上反思自身信息检索的行为模式与应对之策。 1. 动机相比在某些文章中可能会强调的信息筛选的技术，我觉得最有必要改善的是获取信息的“动机”。 大部分劣质信息（包括假新闻、低俗新闻、商业广告）都是被动推送给读者的（哪怕是我们主动打开的App，其本质仍然是被动“呈上”给读者的，而不是我们主动搜寻的）。信息的制造者早就洞察了读者“懒惰”的本性，他们将或无效或有效的信息（有时也把那些成为知识，即知识付费）包装成美味可口、易于“消化”（实际只是形成情绪或者表层印象）的信息大餐，等待愿者上钩；但真正有价值的信息，却常常是需要一定的“咀嚼”才能发现其中滋味的。 所以，提升信息素养的首要准则是反问自身获取信息的目的是什么，是为了消遣娱乐、猎奇追新，还是为了解决某个更为具体和长远的实际问题、或者满足某种求知欲的需要。有目的的主动的获取信息，主动辨识“被动”推送的信息的来源、真伪和意图，是提升信息素养的首要原则。但这不代表我们完全不需要“被动”的信息，要完全隔离被动的信息本身也是不可能的。 2. 来源结构互联网的现状是，越来越多的无用信息被生产出来，从中要舀出一碗清水，复杂度会越来越高（但成本随着技术完善，仍然可能是下降的趋势）。即便是受到称颂的百科全书Wikipedia，信息的可信度也值得商榷。从Google或者百度得到的信息，除了搜索浅层次的常规信息，在解决大部分问题时，返回的都只是平庸的见解。信息检索技术（包括搜索引擎）确实大幅度提高了信息查询的效率，但最有效和高密度的信息来源，依然还是书本。人类“心智的圣所”，依然还是图书馆。从技术上而言，互联网在帮助大脑处理深度信息的有效性上，还没有超出图书馆的能力。 而且，除了功利的获取知识或信息之外，书籍的阅读也是养性与修身的过程。所以，在信息的来源结构中，如果能保持一定比例（如20%信息量、或每天1个小时、或每周10个小时，等等）的信息来源为“书”，特别是那些有着长远价值的经典之作，将是提升信息素养的关键手段。 这里书籍的阅读过程也同样应当是“主动”的，而不是“被动”地听某人“说书”，或者看一些“书评”等边缘信息。当建立“主动”找书、看书、总结、应用等通道后，信息素养的提升应当会容易很多。 3. 文化大众文化并不等于粗俗或无知，大众文化也有其精深与通达之处，但绝不意味着仅仅以宣扬欲望、物质、暴力等为手法。 浸润在大众文化之中的人可能难以分辨自身文化的诸多特点。例如，对很多人来说，追求物质、鄙视崇高，是一种理所当然，且认为他人的行为无不带有“最大化自身利益”的意图。在这种假设下观察的信息，也自然局限在自身的“透明玻璃墙”中。 文化的影响是最难以破除的，或许唯有通过“主动阅读”真正拓宽自身的文化食谱，并从一定程度上突破“工业化”、“智能化”和专业分工带来的思维“窄化”与对智力的伤害，才能尽得大众文化之妙、不受大众文化之害吧。 当然，在大众文化之外，“精英文化”也有其局限之处。但更大的问题可能是今天“精英”被污名化太甚，有需要正名之处。这些我们在以后的文章中再谈。 最后本文实际上是由最近在思考的关于“精英文化与大众文化的分歧”的问题出发，所引发的一些讨论，而借“信息素养”这个问题进行阐发，但在深度上还有所欠缺。 在当今时代，所谓的“两种文化”之争（科学家与文学知识分子的相互不理解与相互看不起）已经不是文化冲突的主要形态，而是被大众与精英文化的冲突所取代。在之后的文章中，我们会进一步探讨大众文化与精英文化的对立状态，以及调和的可能性。 参考文献 郑也夫，“大众的弱智化”问题：科技发展中，我们聪明了还是傻了，2019年4月 傅守祥，世俗化的文化：中国大众文化发展的消费性取向，2006年9月 This page is synchronized from the post: ‘如何培养信息素养？ / 浅谈大众文化与精英文化（之一）| About Information Literacy’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/or-about-information-literacy/"},{"title":"何为历史？（一）|  What is History? (1)","text":"之前，我们曾讨论过 成年人需要什么样的STEM教育？ 的问题（（一）、（二）、（三）、（四）、（五）、（六）、（七）：以STEM切入点，谈了一些科学教育方面的Why, What和How等问题。） 本文的系列中，我们想谈谈关于“历史教育”的话题，但我们还是从“历史”本身谈起。 国庆与历史之前看到 @rivalhw 大伟老师关于庆祝“中华人民共和国”建国70周年的征文活动，本文打算从国庆开始谈。 图片来自豆瓣电影，《我和我的祖国》海报 今天难得有一些空闲的时间，去电影院看了在国内刚刚上映的《我和我的祖国》。作为献礼片和一定程度上的教育片，其中的内容与风格是可以想见的。 我并不擅长从艺术形式上谈论电影，但通过电影来观察历史的形态，还是有一些兴趣的。从艺术表现的手法而言，本影片中的细腻的感情值得体味和深思，但真正令人触动是对真实历史中逝去的大量同胞的生命的同情与敬意。不夸张地说，今天中国大陆、台湾、港澳、南北韩，以及欧洲、美洲、非洲、澳洲等各地的很多人的生存状态，有赖于二战中数千万人（统计而言，大部分是苏联人和中国人的抗争者和无辜受难者）的血肉之躯的付出，使得我们今天无须生存在法西斯统辖的世界之中，避免了我们生活在一个被日本民族统治的中国。要知道，那样的历史并非不可能发生的，胜负的天平并不是“决定论”的。 在电影中，通过普通人的生活展示的历史“节点”，与某些宏观或正面叙事手法相比，可以认为是从“历史的无声处”发出了自己的声音，而不仅仅是“史书”中的历史。无论是因核辐射早逝的研究者（让我想起一些在核能研究中逝去的科学家），还是在中英协商中“分秒”必争的外交官（让我想起背负卖国之名的李鸿章），都是对历史事件中社会不同侧面的“再现”。 作为一个在混乱与痛苦中重新凝聚起来的国家，其70年经历必然是丰富与复杂的。在本影片中，值得注意的是对“再现”的历史节点的选择。一定程度上来说，我们可以认为影片回避了对前30年历史的叙述，即真正纯粹的社会主义时期的论述（原子弹试验的科学事件具有一定的特殊性），也回避了文革等“无法言说”的时期的问题。从某种程度上来说，这应证了克罗齐关于“所有的历史都是当代史”的论述。正是对“改革开放”后、以及“冷战”结束后的新的社会形态的合法性的要求，使得政权有选择地诠释和“再现”历史。我不并认为“发展主义”（即社会和人类是永远进步的）这一现代资本主义与科学革命的（近似于乌托邦的）假设是永恒正确的；相似的，前30年的历史，哪怕是今天很多人讳莫如深或者称为“十年动乱”的文革时期，也不乏可取之处，包括比今天的社会更纯粹与光明之内在，但都有意无意地被隐藏在历史的叙事之中了。 从这一影片的简要讨论中，我们可以看见关于思考历史的一些线索：“历史是偶然的，而非必然的”、我们应当看到“历史的无声处”、“所有的历史都是当代史” 或者说 “历史是胜利者的清单”。从这些问题或论述出发，我们可以进一步探索历史的内涵为何。 所有的历史都是当代史 / 历史是胜利者的清单中华文明具有浓厚的“史官文化”，从司马迁开始，我们认为著史者是秉笔直书、不畏强权，我们记录和阅读的历史是真实可信的。“历史感”是我们文化的重要组成部分。 官方对过去历史的阐述，都天然的包含了对其“政权”合法性进行解释的述求，这是“所有的历史都是当代史”的根本动力。从这一点出发，今天的政府不但会重视近期历史的阐述方式（如上文对电影中历史叙事的选择），也会重视对其所继承的政权的合法性的论述，例如在最近一些时期对《清史》的修订。 从西元1840年开始，我们的历史叙事发生了一些根本性变化，最主要的体现为“天下观”的变化，中国的历史成为全球历史的一部分，中国历史的关键节点与世界历史的脉搏息息相关（如二战、冷战、思想史、科学史、技术史、金融危机、货币制度等等）。“西方中心论”的视角，则倾向于将人类历史还原为欧洲历史，这与（西）欧（北）美文明仍然主导世界息息相关，却掩盖了欧洲文明主导和启动的历史，仅仅是近500年的事实。站在欧美历史叙述的视角，中国、印度或者日本的历史，只是“东方学”或人类学的一角；更多的被殖民者抹除的美洲与非洲的古老文明，则几乎湮没无闻了。冷战之后，胜利者们对“苏联”和“东欧”历史的抹除，甚至一定程度上美化纳粹党徒来实现这一目的，并通过电影等文化传播形式来完成，也是其常用的手法。（如，电影《午夜守门人》） 这样的做法不仅限于政治。科学史中着力渲染的布鲁诺、哥白尼、伽利略、牛顿、开普勒等的科学革命的历史，一定程度上掩盖了科学“渐进”发展的历史（托马斯·库恩，《科学革命的结构》），绝对化了教会对科学的迫害，也遮掩了开普勒为第谷证明“地心说”的最初动机。毫无疑问，科学革命的历史叙事中包含了科学作为胜利者对自身和他者历史的裁剪。 更进一步说，为什么大多数历史都是“人类的视角”呢？人类中心主义（人本主义）的狂妄本身也是对这一历史命题的反应。在阅读尤瓦尔·赫拉利的《人类简史》时，我们容易发现它并非一本“史书”，而更像一本佛教“福音书”。他将人类的历史作为其中一种物种的历史来讲述，而非凌驾于别的生物之上，这毫无疑问是不同于其他以人类为“胜利者”的观察历史的视角的，因此也带来颇有价值的洞见与深思。 图片来自豆瓣读书，《人类简史》 最后本文以国庆档电影为起点，探索了几个常见的历史命题，并对其中的一些问题进行了简单展开。 有关历史的问题还有很多，例如： 21世纪以来，历史感的逐渐消失，对父辈与祖辈的记忆、历史和生存方式的传承的失败； 微观史学的泛滥，渲染伟人的污点、恶棍的优点，例如希特勒的教养、汪精卫的气节与不得已； 历史的“发展主义”、相似性与退步：逐水草而生的游牧民族，与有巨大流动性的逐资本与金钱为生的经济动物的比较。 我们在这一系列的文章中，会对更多问题进行展开论述。 参考文献 戴锦华，《隐形书写》，江苏人民出版社，1999年 托马斯·库恩，《科学革命的结构》，北京大学出版社，2012年 This page is synchronized from the post: ‘何为历史？（一）| What is History? (1)’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/or-what-is-history-1/"},{"title":"awesome-steem for Steem developers","text":"You might know the awesome projects on GitHub, such as awesome-php and awesome-vue, which summarized the coolest projects and tools built by community for a specific technology. As one tiny step of the initiatives to improve the developer experience for Steem developers, especially for those who are new to Steem, we’re creating this awesome-steem project to summarize the helpful development resources for Steem ecosystem, including SDKs, tutorials, libraries, example projects with source code, devops, community, etc. to make the learning and building process easier. repository: https://github.com/steem-driver/awesome-steem image from Wikipedia – GitHub | Public Domain We believe Steem will be more and more powerful when the dream of SMT comes true, and it’s the time now to review what we have in our toolbox and improve the developer experience and social impact of Steem, in order to eventually drive more innovation, and bring more public goods to the human and universe. If you have anything in mind want to add into the awesome-steem project, feel free to leave your comments in the post or submit pull request to the project. Below is a snapshot of the content which you can find from the awesome-steem project. Awesome SteemA curated list of awesome Steem frameworks, libraries, applications and resources Awesome Steem Introduction Infrastructure SDKs Frameworks Tutorials Tools / Utilities dApps Smart Media Token Steem Engine Services Continuous Integration App Deployment Steem DAO Resources Developer Community Conferences Projects Summary Contributing IntroductionDocuments &amp; videos about Steem Steem Whitepaper - The Steem Official Whitepaper Steem Bluepaper - The Steem Official Bluepaper SMT Whitepaper - The Smart Media Token Whitepaper Developer Portal - The developer portal of Steem Steem Glossary - Understanding the common terms used by the Steem blockchain Steem Guides | Steem 指南 - The Chinese version Steem User Manual InfrastructureThe Steem blockchain infrastructure Steem (code) - The blockchain for Smart Media Tokens (SMTs) and decentralized applications Hivemind - Developer-friendly microservice powering social networks on the Steem blockchain. SDKsSDKs for common languages JavaScript steem.js - The official JavaScript library for Steem blockchain dsteem - Steem blockchain RPC client for JavaScript Python steem-python - The official Python (3) library for the Steem Blockchain. beem - A comprehensive Python library to interact with the STEEM blockchain Ruby steem-ruby - the official Ruby library for the Steem blockchain Swift swift-steem - Steem client library for iOS, macOS and Linux written in Swift Java SteemJ - An API Wrapper for Steem written in Java Go go-steem - Golang RPC client library for Steem Rust SteemClientRS - Client library for Steem blockchain built with Rust .NET Steem.Net - .NET library and classes to communicate with STEEM steemd/cli-wallet Frameworks Web Mobile Game Data TutorialsTutorials for getting started with Steem JavaScript Developer Portal JavaScript Tutorial (code) - Javascript Tutorials for the Developer Portal Python Developer Portal Python Tutorial (code) - Python Tutorials for the Developer Portal Ruby Developer Portal Ruby Tutorial (code) - Ruby Tutorials for the Developer Portal Tools / UtilitiesUseful tools/utilities when building with Steem Block Explorer steemd - The Steem block, transaction and account explorer Steem World - A visual and powerful Steem information explorer Authentication / Wallet Steem Keychain - A wallet browser extension for the Steem blockchain and cryptocurrency steemconnect (code) - A Signer app for Steem SteemWallet.app (code) - fast, secure and open source wallet for the Steem blockchain Steemit Wallet (code) - The wallet functionality of Steemit Condenser Data Service SteemSQL - A publicly available Microsoft SQL database containing all the Steem blockchain data. eSync - Extracts Steem blockchain data and saves into Mongodb Witness Witness List - Witness List on Steemian.info dAppsSome cool dApps built with Steem Social Blogging Steemit (code) - The 1st official blog dApp for Steem， made by Steemit Inc. Busy (code) - A clean and user-friendly blog dApp for Steem Steempeak - A powerful and performant blog dApp for Steem eSteem (code) - A powerful frontend dApp for Android, iOS, Desktop and Web Partiko - An excellent mobile client for iOS and Android Steempress (code) - A WordPress plugin to power your websitewith blockchain technology. Video DTube (code) - Decentralized video sharing community that rewards creators and curators. Photography nTOPAZ - A platform for talent find, development, and respect and reward artistic endeavors that are fair and transparent. Wherein - Social media platform made for light blogs similar to Instgram Travel Steemit Worldmap - A Google map app and community for sharing travel stories TravelFeed (code) - A dApp for sharing travel experience and earn rewards Food Tasteem - A dApp for sharing recommended food and restaurants Game Splinterlands - A collectible trading card game on the Steem blockchain Science SteemSTEM (code) - A New STEM Communication Paradigm On Steem Product SteemHunt (code) - A platform for discovering cool products Funding Fundition (code) - A crowdfunding and collaboration platform on Steem Automation SteemAuto (code) - An dApp for automatic claiming payouts, automatic curation, and scheduling posts. steemrewarding (code) - A automatic upvote service for Steem Smart Media TokenA Token Protocol based on Steem Design SMT Whitepaper - The Smart Media Token Whitepaper Steem EngineA platform that empowers creating tokens and tribes on Steem Infrastructure Steem Smart Contract - Javascript blockchain/sidechain powered by Steem Clients Nitrous - Steem Engine Tokem Customized UI, based on Steemit condenser Cryptocurrency Exchange Steem Engine Exchange (code) - Steem Engine Exchange portal SDKs sscjs - Steem Smart Contract JavaScript Library steemengine python - Steem Engine Python Library Tutorial Steem Engine Handbook | Steem Engine 手册 (code) - A Chinese version Steem Engine User Manual ScotBot API - List of available REST API’s for scotbot Tools Steem Engine Block Explorer (code) - Steem Engine sidechain interpreter Tribes Steemcoinpan - A tribe for all kinds of blockchain topics SteemLeo - An investment community 3Speak - A Free Speech community on the internet AAA Reviews - A movie and TV series review community SportsTalkSocial - A Sports community CreativeCoin - A Steem Engine Tribe for the Creative Arts RoadOfRich - A online RPG game built with RORS token ServicesOnline tools and APIs to simplify development. Continuous IntegrationAlso see awesome-CIandCD. CircleCI - A CI service that can run very fast parallel testing. Travis CI - A popular CI service for your open source and private projects. (GitHub only) Vexor CI - A continuous integration tool for private apps with pay-per-minute billing model. Wercker - A Docker-based platform for building and deploying applications and microservices. App Deployment Heroku - a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud. Netlify - an all-in-one workflow that combines global deployment, continuous integration, and automatic HTTPS. Steem DAOSteem DAO is dedicated to improve the Steem platform Steem Proposal System - Propose and vote for projects that improves Steem ResourcesWhere to find more resources about Steem. Developer Community SteemDevs Chat - a Discord channel where Steem developers go to discuss Steem development, and related topics Conferences SteemFest - The annual conference and social events for Steemians Projects Summary Steem Projects (code) - A collection of cool projects built with or for Steem This page is synchronized from the post: ‘awesome-steem for Steem developers’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/awesome-steem-for-steem-developers/"},{"title":"小门童染疾失贵客，大将军横刀斩恶鬼 | 浅谈迎新与反腐","text":"受多方因素影响，最近CN区面临多方的挑战：例如加入新人较少、遭到恶人袭击等等。本文仅对最近的情形略作点评一二。 遭际不平：怠工与复苏先从一位少年说起。 话说在那Steem大陆CN县，有一位 小门童 @cn-hello，此子智计不高、武艺不强，却独有一片热心，常不知倦怠、独守村口、寻找新人。每见一新面孔，就手舞足蹈、喜不自禁，或是说：“少年我看你骨骼精奇、天赋不凡，这里有一本《Steem指南》你要还是不要？”，或是生拉硬拽，将惊慌失措的新手，邀请至新手村 @team-cn 一起玩耍。据史料记载，2019年5月以来，小门童总计接待各路新手 362名；虽然贡献不大，但总算也帮到了一些茫然若失的 Steem 新人们。 2019年5月~2020年1月 @cn-hello 接待新人数量，图片来自2020年1月20日周报 如上图所表，2020年1月加入新手甚少。经本县衙役调查，小门童 2020年1月 约有10~20天消极怠工之记录，所以大抵小门童的懈怠是接引的新人变少的主因。这确实让我们错失了一些新人，擅离职守之责确实难以旁贷。 那么，小门童为何消极怠工了呢？经本县衙役进一步深入调查发现，原来小门童在田间玩耍时腿脚意外受伤、且伤情甚重（具体来说，其实是@cn-hello 程序的服务器和数据库的网络配置出现了一些变动，没有及时更新，），于是每当小门童看到新人小哥哥小姐姐，要飞奔过去极力邀请时，却突然两腿无力瘫倒在地了。。。另一方面，由于本文作者 @robertyan 在过去几个月多次染病（所幸与新冠病毒NCP关系不密切）、力有不逮 ，没有做好监护人的工作，童子受伤了竟然都没有注意到（好在童子不是下界去作妖去也。。。） 经过一段时间的修养，@cn-hello 的病情好转，恢复了活奔乱跳四处搭讪新人的状态了。正所谓“祸兮福所伏，福兮祸所依”，虽遭逢不幸，但未必不能否极泰来；小门童重新振作，或能助力更多人也未可知。 然而，整体而言，除了小门童的职守不力之外，似乎最近 Steem 整体的士气和热情也有所下降，即便 SMT 似乎将要上线、村长也带领大家开发了 Likecoin 等新的玩法，但要让社区重新恢复生机（not merely to survive, but also to thrive），仍需要更多小伙伴的协作和努力。 难分黑白：警察与匪帮花开两朵，各表一枝。 那边厢说完童子的遭际，以及诸君努力维持社区的热情，这边却有恶霸闯入CN区为非作歹。 前段时间住院的时候，邻床的大伯说：“世上还是好人多啊”。具体的谈话背景不展开讲，但我认同此一判断。此处不谈“性善”与“性恶”的争论；仅从亚达和夏娃吃了苹果便知“羞耻”这一圣经故事，我们可知“存善去恶”至少是一种自然的倾向。可叹之处在于，我们所处的时代是一个“伦理”知识相对不发达的时代，例如，对于技术的去道德化、对于如何明智地选取恰当的手段，常常模糊不清；甚至于曾经的礼仪之邦——中国——也变得面目全非。（关于这一点，我们以后的文章还会再谈。）作为结果，尽管我认同“好人多”的判断，这个时代仍不乏“无耻”之人：弱小时，则懦弱贪婪；强悍时，则恃强凌弱。最近CN区很多人受到的无理之攻击，大抵属于此类。 韩非子说：“侠以武犯禁”。这里的“侠”不同于近代“武侠小说”中的“武侠文化”。当非政府力量的武力、武装达到相当水平，甚至接近政府的武力时，就有了“犯禁”（威胁政府）的可能性，所以彼时“侠”指在野的武力。如果他们对民众、尤其是对官府构成了威胁，在官府看来，“侠”则是“匪”、是“贼”。“侠”可以“为国为民”，也可以“烧杀抢掠”，这取决于侠的道德取向；当代“武侠小说”语境中的“侠”的内涵是高尚的道德。 来自非政府的武力是“侠”或“匪”，在现代，来自政府的武力是“军队”和“警察”。常规情况下，军队对外，警察对内。由于目前 Steem 还不存在网际战争的案例，所以我们看到的大多是社区治安的维护者——警察。得益于香港警匪类型片的熏陶，我们对于“警”“匪”沆瀣一气的桥段以及“无间道”的故事颇为熟悉，而近期闯入CN区的恶人就是正面是“警”、背面是“匪”、“警就是匪”的典型。他们在维护社区正面价值的同时，结成裙带势力，利用手中的权力和能量倾轧其他组织和个人，这便是“腐败”；在 Steem 缺少真正的政府的情况下，“腐败者”就成了事实上的难以管制的土匪、恶霸、豪强。如果我们有 Steem “四大恶人”的榜单，或许可以把此类恶霸加进去。 图片来源：“豆瓣电影” 《无间道》 毛泽东说：“治国就是治吏”。要“反腐”、要打“大老虎”，前提是官僚集团是可以治理的。对于Steem 见证人的管控与辖制，在监察和选举制度上极不完善，使得见证人之间形成牢固的利益集团，难以打破的权力层出现了。由于权力层本身难以对于“腐败者”进行惩治，一般的组织和个人通常陷入了必须依靠自身力量反对恶人的情景，按照所长的说法，我们必须依靠“大将军”领导我们共同打击入侵的土匪强盗。换言之，我们需要成为“侠”，能够“横刀立马”，才能对警匪一身的腐败者形成有效遏制和反击。对于网络社区治理来说，无疑这是一种无可奈何的成本很高的方式，但或许也是它有趣和值得观察和研究的地方。“祸兮福所倚”，借助这种反抗“暴力”与“腐败”的战斗，我们能更进一步地激发团队的力量，在表面上缓解伤害、在制度上修复错误、从根本上解决社区政治的疑难杂症。 未来的网络社会绝不会缺少腐败与恶霸，有凝聚力的组织才能不惧各种妖魔鬼怪，依靠智慧和努力“自下而上”形成良性的网络社会的制度设计与组织范式。以此，真正的“天下制度”或许才有可能。（天下制度是一种世界政治制度的设想，在之后的文章中也会讨论） This page is synchronized from the post: ‘小门童染疾失贵客，大将军横刀斩恶鬼 | 浅谈迎新与反腐’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/or/"},{"title":"失名器天下三分，拾真魂同结一心 | 在Tron收购Steemit之后","text":"上回说到 小门童染疾失贵客，大将军横刀斩恶鬼，哪知一波不平一波又起，2月14日，Steemit宣布加入Tron生态系统（也可以看O哥的介绍），引发社区有史以来最大的冲击波之一，此诚危急存亡之秋也。 今晨与瓜子 @iguazi123 讨论了目前的情形，于此解说一二。 图片来自：https://medium.com/@TronFoundation/steemit-joining-tron-ecosystem-6ad66584d0b 失名器：天下三分据公告 Steemit Joining TRON Ecosystem 所传： Steemit Inc., the largest decentralized blockchain-based social media and blogging platform, announced a strategic partnership with TRON Foundation. TRON and Steemit’s development teams will immediately begin working together to bring Steemit and other Steem blockchain based DApps to TRON blockchain and its community of over 20 million users, products, and services. … Together, TRON Foundation and Steemit Inc. will look to create further value for their users and to augment their advancements in decentralized technologies, including moving old STEEM token to a new TRON based STEEM token, giveaways to the existing TRX users with the new TRON based STEEM token, as well as a new accelerator program towards the developer community. 文中虽言strategic partnership云云，看下文之“吞并Steem token与生态系统”便知，名曰战略合作，实为收购（获取了Steemit Inc.的实际控制权）。孙某，营销之才，借情人节搞基之名，行“挟天子以令诸侯”之实。孙某收购的目标实为 Steem 的品牌与影响力，同时获取Steem token的控制权，这是 moving old STEEM token to a new TRON based STEEM token 的实际意义。从法律上界定，Steem的品牌已为Tron的囊中之物，交易所上Steem代币的控制权（这一代币的上架/下架等权力，而非定价和买卖权力）也为Tron所辖制。 此之谓“失名器”，Steem 品牌（名）和Steem 代币（财）皆归孙某所有也。Steem社区所拥有的Steem代币的价值几何、去向何处，已非Steem社区所能控制。Tron + Steem 成为一新势力，已成定局。 2月14日，本为EOS的Voice发布之日，岂料Tron + Steemit先声夺人，四野震动，此一时之奸雄也。所谓“去中心化的内容社交媒体”云云，本是黄巾之乱、群雄割据之势，然究其影响力，Steem仍为其中之祖，当仁不让。经此一役，名器失窃，天下三分，风云为之变色。 Tron + Steem：挟“天子”以令诸侯，以险诈为名，此为“曹”； 真·Steem：Steem 既然失去品牌与代币，Tron必利诱以夺民。Steem 所遗留者，乃与其共存亡、真正认同其理念者、以及基础设施与代码。Witness 们必不能见容于Tron（尚不知是否有收买之策），既无他路，必求图存；信仰Steem之愿景者，感怀Steem之友谊者，不愿其亡。非此辈不能延续Steem之衣钵，此之谓“真·Steem”。此为“刘”，然而“益州疲弊”也。 EOS之Voice：EOS 国险而民附，本乃豪强，欲借Voice以收天下人心，岂知 Tron 出人意表，局势大变。Steem旧主 Dan 奔逃此地，不可不察，勉强可以为“孙”。 以此观之： Tron 与 EOS，本是醉翁之意不在酒，借社交媒体之名，以图生态系统之强。其谋事者 Dan 与 Ned，对于Steem社区的本来愿景，已无期望，以 Steem 之名图其他。此辈皆“假·Steem”。然而“以假乱真”之事，未必不可为也。 Steem的真精神如欲图存，保存Steem与SMT的本来面貌，以求区块链社区模式的独立发展，必不能与 Tron+Steem 与 EOS+Voice 苟合。唯有分叉求存一路，此绝险之路，非大毅力不能至。 此之谓“天下三分”，真假Steem之争，势不可免。利益、情义、技术、理想的纷争，必将芜杂。无论大鲸、小鱼，于此乱世之中，何以图存，尚未可知。但若要保存Steem的愿景与遗产，则必须先求共识以谋生存，下文继续分解。 拾真魂：同结一心如SMT Testnet is LIVE中所说： We have long said that our mission is to onboard the masses to the blockchain by tokenizing the web. 从表面看 tokenzing the web 和 onboard the masses 固然是Steem的重要使命，更重要的是，Steem的真正意义（此处或许值得辩论）不仅仅在于将社交媒体的内容和行为货币化，更在于以Steem和SMT等为媒介和机制，形成有凝聚力和正面价值的社区（社交性），而Steem在这个领域的探索远远没有完成。需要说明的是，对于Steem的愿景和价值，个人有个人的理解，在此时机，我们不得不对Steem的愿景、价值、意义、优势进行反思、达成共识，由此Steem的真精神可以显露出来。 随着 Steem 品牌和代币被剥夺，其所遗留的主要是社区和代码。Tron治下的Steem社区必然不是旧有Steem社区的主要成员，Tron治下Steem社区的运行也必然不在依靠Steem的代码与技术，所以Tron只吸收了Steem的商业价值与品牌效应，但对于宝贵的社区组织与技术遗产，则弃之不顾。 Steem的真灵魂，在于其共同认可的使命与愿景、社区的友情与组织、技术的理想与价值，褪去了商业的外衣，Steem的真灵魂终能更进一步显露出来。 尤其是，在真·Steem精神的引领下，社区能够团结和凝聚，共同协作、宠辱不惊，在我看来，这正是Steem最大的价值（所谓community over code, community over chain）。即便这些组织可能也会迁移到别的地方落地生根，但其精神的根源在于此。 此之谓“拾真魂”，社区的核心在于其成员的共同信念以及Steem链的基础设施。 但同时我们需要清醒地认识到，Tron对Steem的商业吞并必将携带着宣传和利诱，而只有反身自省，看到Steem的使命与价值，才能明确Steem社区本身的出路，否则只有灭亡（或者名存实亡）一条道路。Steem社区中会有一部分执着于现有的Steem的使命、利益、友情与技术的人，他们必须保存和发展原来的Steem模式才能实现自身的目标；更重要的是，与ETH的分叉不同，Steem的分叉的目的是保存自身，以避免收购后的改旗易帜、天崩地裂，于是分叉不可避免。但分叉后的真·Steem社区将立刻面临生存与发展两大难题。 生存之道 区块链社区生存之道，基础在于经济，而核心在于人心（共识）。 第一，是重新树立品牌与货币。真·Steem生存的关键在于新Steem币何以可能、新的品牌（旗帜）如何树立。随着Steem币迁移到Tron上，现有的Steem Witness机制必然难以运作，所以一个新的货币（如Steem Classic）必须被快速创建和发布出来，并被应用于社区，同时，社区的Witness的选举或许也很可能重新开展，于是真·Steem的经济和组织基础都将发生全面的变化，虽然脱胎于原有的Steem生态，但实际的运行情况也必然发生巨大变化。 第二，是激活经济系统。在真·Steem的品牌和代币得以确立后，一方面，需要选举witness以保证区块链系统的正常运行，其中witness的边际收益为正，是必须满足的条件；另一方面，从浮游生物到大鲸的利益，也必须依托Steem的机制得到支持，但大鲸是否还是原来的大鲸，或许会有截然不同的答案。但是，更根本的，谁会为这些新的Steem Classic代币买单，经济系统是否正常的运作，将面临极大的挑战。 第三，也是最重要的，是凝聚人心。为了实现以上两个经济系统的实际目标，前提是社区需要立即聚集愿景和利益一致的社区成员，让领导者脱颖而出，展开讨论，达成共识和行动指南。但舆论上必然面对来自 Tron + Steem 支持者的重重挑战、威胁与利诱。 发展之机 当下最紧要的问题是解决真·Steem社区的生存危机，但同时只有立即形成长远的发展目标，社区才有可能更长期的生存下去。 其一，发展的首要问题仍然是在Steem原有的“名”“财”皆去之后，如何辨析其首要的使命和价值，重新凝结社区珍贵的凝聚力。而为了实现Steem的使命，SMT的发布与推进是必须兑现的承诺。 其二，在SMT发布的基础上，进一步发展SMT的内涵和价值，改善其在社群组织协作上的效用，在技术上实现跨链等场景，或许能带来更多的想象空间。 其三，在真·Steem（Steem Classic）社区形成后，有目标、有计划地行动，快速寻找适合的合作伙伴，拓展实力和价值。 此之谓“同结一心”，在Steem存亡之际，我们自然可以垂手等闲，但我们不愿意真正的Steem就此消失的话，唯有凝聚智力，共同协作，或许才有更多生机。 最后，话说天下大势，分久必合，合久必分。欲知后事如何，且思且行而已。 This page is synchronized from the post: ‘失名器天下三分，拾真魂同结一心 | 在Tron收购Steemit之后’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/or-tron-steemit/"},{"title":"HF Proposal: Remove \"Free Downvote\" and Stop the \"Wars\"","text":"from pixabay.com: image source While we think “downvote” is a necessary mechanism in a Proof of Brain community, “daily free downvote” in long term could be a social problem that needs to reviewed and fixed. Vote this proposal if you support “Remove Daily Free Downvote”Proposal Voting platforms: https://steemproposals.com/proposal/73 https://steempeak.com/proposals https://steemitwallet.com/proposals or you can vote the proposal directly with steemconnect: https://beta.steemconnect.com/sign/update-proposal-votes?proposal_ids=%5B73%5D&amp;approve=true Please read the reasoning in the post in order to make an informed decision and feel free to contribute to the discussion. 中文用户可以按以下方法投票 墙内用户请使用：https://steemconnect.cocozl.cn/sign/update-proposal-votes?proposal_ids=%5B73%5D&amp;approve=true 墙外用户请使用：https://beta.steemconnect.com/sign/update-proposal-votes?proposal_ids=%5B73%5D&amp;approve=true 或者到 SPS 平台投票： https://steemproposals.com/proposal/73 https://steempeak.com/proposals https://steemitwallet.com/proposals 한국 사용자는 다음과 같이 투표 할 수 있습니다 방문 https://steemproposals.com/proposal/73또는 https://beta.steemconnect.com/sign/update-proposal-votes?proposal_ids=%5B73%5D&amp;approve=true투표하기 또는 다음 플랫폼에서 투표하십시오. https://steempeak.com/proposals https://steemitwallet.com/proposals The Mission of “Free Downvote”Most of the systems in the world have “bugs” or “vulnabilities”, which can be exploited by speculators or attackers, and then the system itself gets hurt. The proposal of “free downvote” in HF21, as one of the three measures in Steemit’s Economic Improvement Proposal (EIP) [1], is to fix several financial “vulnabilities” in the Steem system: The problems that we believe should be solved are that of self-voting, passive delegation to bidbots (instead of participation in content discovery), spam (especially microspam), and abuse. These problems undermine one of the core unique value propositions of the platform; proof-of-brain. People generally gravitate towards what is the most profitable thing for them to do when there is monetary incentive. The goal of these economic changes would be to move Steem closer to delivering on the promises stated in the whitepaper of unearthing high quality content by making it more profitable for people to actively curate, and less profitable to self-vote and delegate one’s Steem Power to bid bots. In short, the major problems can be categorized into two: self-vote, bid bots / vote selling, and other kind of abuse of power plagiarism, spamming, and other misbehaviors The 1st category is mainly targeted at the whales, whose big amount of Steem Power could be misused for self-vote or delegating to bid bots. The 2nd category is easier to be violated by newbies, who often don’t know yet the rules of the community. Less Self-Vote and Bidbot TodayIndeed, with the EIP deployed in HF21, we could see the bid bot like @tipu has effectively changed their strategy to support content curation, and self voters may give more attention to content curation than before. Also, self-vote to comments and posts also become less today. Though self-vote and vote selling cannot be eliminated completely, we think the EIP worked well generally, and the “free downvote” has played an important role in the process. The remaining question is whether the self-vote and vote selling will rise again if “free downvote” is cancelled?? I believe that in certain degree, these behaviors will rise again without “free downvote” as a threat, but will be much less than original after the economic model has been improved in HF21 EIP to motivate content curation. Less Plagiarism and Spamming ???For the issues of plagiarism and spam, so far we have no apparent evidence these behaviors are de-motiavted or not after the “free downvote”. AFAIK, we can still see these misbehaviors often around the community, and we should not ignore the fact that the number of new comers and active users are decreasing in the past months (according to the Steem Statistics – 2020.03.03). So we cannot give all the credit to “free downvote” only, even if the situation is getting better. visualization from Steem Statistics – 2020.03.03 But It’s Now the Time to Stop the “Wars”While recoginizing the acheivements of the “free downvote” strategy, we should never overlook its downside. Free Downvote Abuse and WarsDownvote always happens on Steem. There’s no need to emphasize more about how frequent that happens on the platform and how many troubles it brings before HF21. However, as predictable when the EIP was proposed, with the arrival of “free downvote”, we’re seeing more and more downvote abuse, retaliation and battles within and among communities. Quite some users will downvote because they don’t want to WASTE their daily “free downvotes”. These fights split the communities and enforce more users to leave Steem. From the graph below, it’s obvious the number of downvotes have increased hugely by 50% to 100% after HF21. You can see that the total downvote have DOUBLED: from 100K before Sep 2019 (before HF21) , to over 200K in Jan 2020. And please don’t forget the number of active users have dropped by 25%~50% after Aug 2019 (HF21) in the same period of time, if you have looked at the visualization of active user count in the above section. This means the frequency of downvote have increased by 2~3 times on average to each active user after HF21. If you used to receive 1 downvote on average each day before HF21, now you’re receiving 3 ~ 4 downvotes every day. This is a bit crazy and ridiculous. Isn’t it? Graph: monthly downvote count, with data queried from SteemSQL Then why did everyone got more downvotes on average??? Does it mean there’re 2~3 times more self-vote, vote-selling, plagiarism or spam which need to be downvoted now, if we compare to the situation before HF21? The answer is apparently NO. We already have less self-vote and vote selling as we observed. We didn’t see much more new comers who may not know the rules. We didn’t see more naive users who are increasing the misbehaviors of plagiarism or spam than what it is before HF21. So what are the guys downvoting for today?? Nothing else, but more battles and abuse, therefore more victims and more people who leave Steem. We love collaboration and competition on Steem, but we never need “wars” in the community. Remove “free downvote” definitely reduce the occurence of fights. From a survey by @proxy.token, we see more witnesses want to remove “free downvote” / “downvote pool”, than those who want to keep it. (Survey: Do you agree to remove downvote pool in Hardfork23 as a witness? – by @proxy.token ==&gt; Vote Result) from dpoll Do you agree to remove downvote pool in Hardfork23 as a witness?Asked by proxy.token The same request was proposed in @proxy.token ‘s recent post, and a lot of witnesses have got involved the discussion. [공지] @proxy.token 증인 투표 운영 방침(@proxy.token witness voting policy). Eventually I don’t believe remove “free downvote” will stop all the retaliation and battles, but the existence of such a tool definitely encourages more hate and fighting, and make more people leave STEEM. The “Hidden” Downvote MarketWhen most people don’t like a “vote selling market”, they actually were not aware the existence of a hidden downvote market there, and we’ll show you how it looks like. For the 1st case, in the home page of the delegation and curation service @curangel https://curangel.com/, they stated clearly they are providing 3 times of downvote every 12 hours for their delegators. screenshot from https://curangel.com/ As delegators “pay” (send) their delegation to @curangel, and they get some extra downvote rights as return, @curangel is a de facto downvote seller in this case. For the 2nd case, SP leasers such as https://dlease.io/ are kind of hidden enabler for a downvote market. When they are leasing SP to their customers for voting, they are actually not only selling upvotes for curation, but also selling free downvotes with strong power. The annual cost of leasing SP are around 12~13%. But after the curation reward ratio increases to 50% after HF21, it’s possible now to acheive 15~18% annual revenue with the same amount of SP. This means, after lending a huge amount of SP from https://dlease.io/ , a hacker can not only earn some STEEM, but also downvote freely every day with the same among of SP. There will be a lot of victims in this case. This is indeed a financial and social vulnability that can be exploited: with the help of SP delegation service, you can earn benefits and also downvote freely with huge amount of SP. And all of us should notice: Downvote Market is never better than Bid Bot. Unfriendly Environment for NewbiesThe last but not least, hates and wars always make a worse and unfriendly environment for everyone, and scare away newbies, not to mention how a downvote war could impact the loyality of all the victims. While you see a lot of fights and hates on Facebook or Twitter, it doesn’t mean we should tolerate the same or an even worse atmosphere here in Steem. You could learn from the below two surveys about how community members think about downvote. Survey: What keeps you from using your daily free downvotes? – by @shaka ==&gt; Vote Result screenshot from Survey: What keeps you from using your daily free downvotes? – by @shaka Survey: Is separate downvote pool helping mischievous people on Steem platform? – by @akdx ==&gt; Vote Result screenshot from Survey: Is separate downvote pool helping mischievous people on Steem platform? – by @akdx Finally, everyone who support this change please kindly vote this proposal.Proposal Recipient Disclaimer: The proposal recipient will be @steem.dao, funds will be returned to the SPS pool, the purpose of the proposal is to achieve voting consensus either IN FAVOUR or AGAINST the “daily free downvote”.Reference Improving the Economics of Steem: A Community Proposal by @steemit - The Economic Improvement Proposal (EIP) which is implemented in HF21 HF21 Release Note on GitHub - The HF21 Release Note that explains what downvote pool is The Steem downvote pool explained - A more details explanation about what “free downvote” means HF21’s free downvotes are having some positive impacts on the Steem ecosystem! - The postivie impacts of “free downvote” Why free downvotes are a good and necessary part of STEEM - Another post about the postive impacts of “free downvotes” Why Downvotes Won’t Always be FREE - Explain that the “free downvote” will form a “downvote market” STEEM Warfare of Downvotes - A short introduction about downvote war and its new weapons HF21/HF22: Back in the Game — Starting Downvote War or Making community Stable - A detailed review about how downvote looks like after HF21 Survey: What keeps you from using your daily free downvotes? – by @shaka ==&gt; Vote Result Survey: Do you agree to remove downvote pool in Hardfork23 as a witness? – by @proxy.token ==&gt; Vote Result Survey: Is separate downvote pool helping mischievous people on Steem platform? – by @akdx ==&gt; Vote Result Steem Statistics – 2020.03.03 - Checkout the active users monthly data here [공지] @proxy.token 증인 투표 운영 방침(@proxy.token witness voting policy) This page is synchronized from the post: ‘HF Proposal: Remove “Free Downvote” and Stop the “Wars”‘ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/hf-proposal-remove-free-downvote-and-stop-the-wars/"},{"title":"steemconnect 国内版 v0.1.3","text":"介绍之前实现 WhereIN 微信小程序的登录功能时，出于用户秘钥安全的考虑，希望可以通过授权而不是存储 posting key 的方式来实现用户对 Steem blockchain 的操作。但由于 steemconnect 使用的 api.steemit.com 节点在国内不能使用，所以不得不对 steemconnect 做了一些简单的更改，实现了一个国内版，并加上了一些对小程序的支持，在这里做一些简单的分享。 所作的修改主要是两点： 修改 api.steemit.com 节点为其他国内可用的节点，例如 anyx.io 支持微信小程序登录：登录完成时，向小程序返回登录成功或失败的信息，以便小程序继续完成登录 fork 的 steemconnect 的项目代码在：https://github.com/steem-driver/steemconnect ，以MIT协议开源，如有需要可以进一步修改。 v0.1.3 的 release note 也可以看这里：https://github.com/steem-driver/steemconnect/releases/tag/v0.1.3 根据上面的修改，我们部署了一些国内可用的 steemconnect 版本： https://steemconnect.netlify.com/ 部署在 Netlify 静态网站服务，国内访问速度较慢 https://steemconnect.cocozl.cn/ 部署在 @iguazi123 瓜子的服务器，国内访问速度较快 大家也可以根据需要使用。 screenshot from https://steemconnect.netlify.com 下面简要介绍一些修改的经过。 1. 修改默认的 API 节点这一步是最重要的，但也是最简单的。在 steemconnect 项目中搜索 api.steemit.com，然后修改成希望使用的节点即可。 具体可以参见这个commit screenshot from this commit 2. 添加 Netlify 部署支持完成上面的改动后，我一开始使用 gh-pages 将 steemconnect 直接部署到 GitHub pages (https://steemconnect.tribes.rocks/)，但访问一些路径就会失败，比如：https://steemconnect.tribes.rocks/settings 返回 404 。这是由于 GitHub pages 不支持伪静态的路径。 screenshot from https://steemconnect.tribes.rocks/settings 因此，根据 Vue CLI 里的建议我们将 steemconnect 重新部署到了 Netlify。只需要添加一个 _redirects 文件即可。 12# Netlify settings for single-page application/* /index.html 200 然后，在 Netlify 里，访问 https://steemconnect.netlify.com/settings 路径是成功的： screenshot from https://steemconnect.netlify.com/settings 就此，我们已经可以用 https://steemconnect.netlify.com/ 来更方便的支持国内的用户了。 3. 添加微信小程序通讯不过，我们的初始目的是为了在微信小程序里可以登录和授权，只部署一个国内版是还不够的。 为此，我们需要在 steemconnect 中判断此时是在微信小程序的 webview 中运行，并且在登录完成后，将登录的Steem用户名等信息返回给小程序。 判断是否在微信小程序的webview中： src/helpers/utils.js 12345678910111213141516export function isWeixinMiniProgram() { const ua = window.navigator.userAgent.toLowerCase(); return new Promise(resolve =&gt; { if (ua.indexOf(&apos;micromessenger&apos;) === -1) { resolve(false); } else { wx.miniProgram.getEnv(res =&gt; { if (res.miniprogram) { resolve(true); } else { resolve(false); } }); } });} 成功时，发送Steem用户名等信息（而不是使用默认的通过 redirect_uri 重定向的方法）： src/views/LoginRequest.vue 12345678910111213if (isWeixin) { weixinNavigateBack(); weixinSendMessage({ context: &apos;login&apos;, ok: true, err: null, username: this.username, token, expired_in: 604800, });} else { // ...} 此后，我们在微信小程序的 web-view 里使用 steemconnect 登录成功时，就会成功获得用户、access_token 等信息用户进一步的处理。 另外，由于以上代码中会判断所处的环境，针对小程序所作的修改，并不会影响非小程序环境的 steemconnect 的使用，所以需要对 web 应用进行登录的情况，也可以使用这个版本。 4. 本地部署，提高访问速度现在，我们基本可以使用修改后的 steemconnect 进行微信小程序登录了（当然，小程序本身还需要做很多修改）。但实际部署后，我们发现 https://steemconnect.netlify.com 速度还是太慢了，登录页面完整加载经常需要 60 ~ 100s 的时间。 于是，我们将 steemconnect 部署到了 https://cocozl.cn 的国内服务器，地址为：https://steemconnect.cocozl.cn/ ，访问速度有了明显的提高，大概 5s 左右可以加载完成，至少在用户还可以忍受的范围内了。 就此 WhereIN 小程序或其他小程序，都可以加入 Steem 的登录方式了。当然，之后 WhereIN 小程序会进一步优化，新用户可能只需要使用微信登录就可以了，这是后话。 在与 @iguazi123 瓜子讨论后，同意把 https://steemconnect.cocozl.cn/ 服务也开放给更多人使用，希望对其他面向国内用户的应用部署会有帮助。感谢瓜子和 WhereIN。 如果对于基于 Steem 的小程序的开发有兴趣，也欢迎加入我们一起来玩耍。 下一个版本v0.1.3 版本还存在一些问题，大多数是 steemconnect 自身的问题：比如不支持中文，steemconnect 的UI流程冗余难用，API node 修改不便等。 为此，在下一个版本 steemconnect 国内版 v0.1.4 中，我们计划进行如下改进： 简化 steemconnect 登录和授权的流程 增强 节点配置的灵活性和可控性 加强 steemconnect 的多语言支持（中文） 其他最后，其实之前 村长 @ericet 也部署了一个旧版的 steemconnect http://steemconnectcn.herokuapp.com/ ，我之前研究时忘了这回事。。。而且 heroku app 的启动时间和访问速度可能也存在一些挑战，所以最后还是基于最新版的 steemconnect 修改了。大家需要使用旧版时也可以尝试用这个版本测试。 This page is synchronized from the post: ‘steemconnect 国内版 v0.1.3’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steemconnect-v0-1-3/"},{"title":"何为历史（二）| What is History (2)","text":"本系列旨在谈谈“历史教育”的问题，从“历史”本身谈起。 我们之前在 何为历史？（一） 中谈过几个基本的历史命题，如历史的偶然性、克罗齐的“一切历史都是当代史”等等。在探索更重要的历史的根本问题前，本文中我们先对历史的形态做一些分析。 二十四史 | source: https://auction.artron.net/paimai-art0013620485/ 基于时间，始于语言“历史”一词，大概是来源于西学东渐时，由日本学者将 history 译为汉语词汇，又由康梁等人引入中国。清末以前称“史”（《说文解字》：“史，记事者也；从又持中，中，正也。”）。History 一词则原为希腊语中 historia，为“调查、探究”之意，出自希罗多德同名著作。 这两种语言中对“历史”的理解是较为接近的，即对已经发生的事情，进行探查，并作公正的记录。所以，必须有“事”发生在前，若只有时间，而无人、无事，则无所探查、更无所记录。记录则必须由“人”完成，没有语言则无法描述、更难以记录，所以“有史以来”，必是在语言、文字成熟之后。 再者，“史”既然由人记录，一则不可能不加选择、将一切事件加以记录，必然选择最重要、有价值的，二则虽然“史官”以秉笔直书为根本，但实难摆脱主观偏差、乃至有意篡改。随着后世的不断讲述，以语言为媒介的“书写历史”，自成一个精神世界而存在，但其中有多少与与已经消逝于时间中的“过往世界”中的“真实历史”所一致，则有待考证。 另一方面，历史必然发生在时间之中，历史将时间中的现实化为语言，成为宇宙年轮之一种。历史为今天窥探过去的时空，提供了一个通道；同时，为今天的世界延续到未来，提供了一种媒介。随着时空流转，对同一段历史的解读，也会发生变化。 在《对偶与春秋》中，我们提到过不同文明的时间观念的异同，如线性的、循环的、单向的、量化的，等等。例如： 在希腊和印度文明那里，占主导是循环的时间观。循环的时间观认为宇宙是循环往复的，今天发生的事情，还会再度重演，如印度人对“劫”（尘世的43亿2千万年，是梵天神的一日）的轮回周期的表述，如希腊对圆周运动的偏好。相对应的，希腊和印度的历史感也都很薄弱。‌ 由于认为时间是循环往复的，自然不重视历史。印度本国的“史书”很少，以至于在某些考古挖掘时，需要参考玄奘口述的《大唐西域记》才能找到确切的遗迹所在。 历史的真实存在于时空中真实的历史过往，与对历史的言传说教，分别构成一种历史的真实。前者为历史在时间中的真实存在，依赖于人们通过现有资料、考古发现等探求其真实情貌；后者为历史在语言文化中的精神实在，将发生在过往的故事、神话、史书通过言说、阅读、辨析成为集体性的精神共识。 前一种真实由英雄、伟人以及那个时代的众人通过“作”（或者“行动”）所创造；后一种真实由史官、学者以及能传播文字的团体通过“述”（或者“言说”）所构建。对前一种真实的探查，是为了获取知识；对后一种真实的延续，是为了传承精神。我们或许会质疑《后出师表》的真实性，但仍然会感佩“鞠躬尽瘁，死而后已”的精神境界。 需要注意的是，对后一种真实而言，这里强调的并非史书的不可信（虽然问题确实存在），而是对于由历史构成的精神世界，本身构成了一种文化与心理存在。 信息时代谁著史 大江东去，浪淘尽，千古风流人物。 历史本身具有悲剧性，大多数人终为历史所遗忘，“留取丹心照汗青”的只有少数真正对历史有重大影响的人和事。这是因为“著史”的能力有限，“读史”的能力也有限。一部事无巨细的“账本”是无从阅读的。 著史者必须做出取舍和裁剪，而事实上真实的世界也由少数人和事所左右。读史者也必然有所偏好，对有益于当下或情境的历史加以审视。事实上，那些攸关“文明存亡、兴替、变革”的历史最令人注意，历史记载的并不只是政权更替、你先唱罢我登场，更是整个文明的命运变迁。这就是“究天人之际、通古今之变”。现代版的《清史》历时多年仍未面世，一方面的原因正在于其见证的是“古今之变”，从一个延续了两千年的文明形态（秦至清），变革至一种全新的尚无定论的文明形态。 《二十四史》帙卷浩繁，通读者不能算很多，将有限的生命中的一部分时光，用于交换对过去时间中的往事的了解，必须要有充分的理由才会去尝试。而阅读困境，在信息时代，则更为突出。 信息时代的序幕拉开，迄今也有数十年矣。著史者先不论，记录者实繁：前有 Internet Archive，号称为互联网的博物馆；后有大数据盛行，政府、企业广收天下数据，竟为 Permanent Records)；又有区块链/比特币登场，为天下记账，自称不可篡改，《Steem指南》开篇便说：区块链是凝固的时间 。但，这些可以称得上是历史吗？ 不择其要而记录的“数据”，脱离了对文明的关切，恐怕并非历史。只要文明仍是“人”的文明，那么著史者首先关心的便是对文明而言重要的人和事，文明的存在与延续，仍是历史的主要命题，数据和机器智能可以作为历史的注脚，却不能成为历史的载体。就此而言，著史者仍然是今日的史官、学者或者其他历史写作者。 但，长远来看，信息时代的著史者和读史者，还会是人类吗？如果人类文明被颠覆，那么继承者（以机器人、半机械人、基因改造的人类、或者赫拉利的“智神”等等），又会如何为自己著史、如何阅读自己和人类的历史？为了人类的历史可以“延续”，现代伦理如何把控现代技术的未来，正是我们面对的紧迫命题。 最后在后续的文章中，我们希望探讨更多问题： 历史的根本问题是什么； 以历史为本的精神世界在中国何以可能； 历史目的论的来源：谈“历史的终结”； … 另外，需要说明的是，本系列的文章原本旨在探讨“历史教育”的问题，包括基础教育中历史学科对思维的训练的不足、中国历史教育对精神塑造的特殊价值、大学各专业学科中的历史的整体的把握的缺乏、思想史在教育中的作用、教育和历史的关联等，但为了具体的谈那些“历史教育”中的问题，从历史本身出发，是我们叙述的基本策略。 参考文献 赵汀阳，《历史、山水及渔樵》，生活·读书·新知三联书店，2019年 吴国盛，《时间的观念》，北京大学出版社，2006年 阿诺德·汤因比，《历史研究》，上海人民出版社，2005年 李泽厚 刘悦笛，《历史、伦理与形而上学》，探索与争鸣，2020年 This page is synchronized from the post: ‘何为历史（二）| What is History (2)’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/or-what-is-history-2/"},{"title":"《Steem指南》特刊： Fork Cheatsheet | 分叉清单","text":"本图由 @maiyude 设计 Fork Cheatsheet / 《分叉清单》 ：https://cheatsheet.steemh.org/zh/fork 以下为初始版本，如有更多信息或建议，欢迎在本文留言汇总，我们将不时更新，或 请到GitHub 修改。 由于 Hive 分叉的临近，不可避免地，社区必将迎来骚乱。为了缓解混乱带来的信息查询的困难，《Steem指南》推出特刊《分叉清单》（Fork Cheatsheet），帮助大家快速查询关于 Steem/Hive 的 DApp、工具 、API节点等信息，澄清疑惑。本清单将不时更新。 Hive分叉始末 2020年3月17日，宣布准备分叉：Why I won’t be compromising with Justin Sun (中文版，来自 @oflyhigh), 2020年3月18日，介绍分叉的细节：Announcing the Launch of Hive Blockchain (中文版，来自 @oflyhigh) DApp和工具 Steem名称 Hive名称 是否在Steem 是否在Hive Steem 网站/App Hive 网站/App 相关文章 备注 SteemPeak 否 是 Steem Engine 是 未知 SteemAuto Hive.vote 是（待定） 是 http://steemauto.com/ https://hive.vote Hive.vote: Steemauto on the new chain 2020/03/18 Splinterlands 是 是 Splinterlands’ Plans for the Upcoming Hive Fork 2020/03/19 Actifit 否 是 Dpoll 未知 是 steem.chat openhive.chat 否 是 SteemSTEM 否 是 Steemitworldmap 未知 是 Haveyoubeenhere 未知 是 curiesteem.com 未知 是 OCD 未知 是 thegoodwhales.com 未知 是 C-Squared 未知 是 Global Blacklist API 未知 是 Curangel 未知 是 信息来源 HIVE NEWS @ 18 March 2020 - A new News Service for a new Chain API节点 节点 是否在Steem 是否在Hive 相关文章 备注 https://api.steemit.com 是 否 https://anyx.io 否 是 It’s Time to Decentralize https://steem.61bts.com 是 否 https://techcoderx.com 否 是 https://steemd.minnowsupportproject.org 未知 未知 https://rpc.usesteem.com 未知 未知 https://api.steem.house 未知 未知 https://rpc.steemviz.com 未知 未知 https://steemd.pevo.science 未知 未知 https://steemd.privex.io 未知 未知 https://steemd.steemitdev.com 未知 未知 https://rpc.curiesteem.com 未知 未知 https://appbasetest.timcliff.com 未知 未知 https://api.mahdiyari.info 未知 未知 https://api.steemitdev.com 未知 未知 https://gtg.steem.house:8090 未知 未知 https://rpc.buildteam.io 未知 未知 https://gtg.steem.house 未知 未知 https://rpc.esteem.app 未知 未知 FAQ 欢迎提供常见问题和疑问 This page is synchronized from the post: ‘《Steem指南》特刊： Fork Cheatsheet | 分叉清单’ document.querySelectorAll('.not-gallery-item') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/@robertyan/steem-fork-cheatsheet-or/"}],"tags":[{"name":"cn","slug":"cn","link":"/@robertyan/tags/cn/"},{"name":"introduceyourself","slug":"introduceyourself","link":"/@robertyan/tags/introduceyourself/"},{"name":"blog","slug":"blog","link":"/@robertyan/tags/blog/"},{"name":"busy","slug":"busy","link":"/@robertyan/tags/busy/"},{"name":"life","slug":"life","link":"/@robertyan/tags/life/"},{"name":"mindset","slug":"mindset","link":"/@robertyan/tags/mindset/"},{"name":"cn-stem","slug":"cn-stem","link":"/@robertyan/tags/cn-stem/"},{"name":"steemstem","slug":"steemstem","link":"/@robertyan/tags/steemstem/"},{"name":"cn-curation","slug":"cn-curation","link":"/@robertyan/tags/cn-curation/"},{"name":"great-people","slug":"great-people","link":"/@robertyan/tags/great-people/"},{"name":"steempress","slug":"steempress","link":"/@robertyan/tags/steempress/"},{"name":"steem-explorer","slug":"steem-explorer","link":"/@robertyan/tags/steem-explorer/"},{"name":"teamcn-homework","slug":"teamcn-homework","link":"/@robertyan/tags/teamcn-homework/"},{"name":"cn-reader","slug":"cn-reader","link":"/@robertyan/tags/cn-reader/"},{"name":"cnstm","slug":"cnstm","link":"/@robertyan/tags/cnstm/"},{"name":"cn-crossculture","slug":"cn-crossculture","link":"/@robertyan/tags/cn-crossculture/"},{"name":"esteem-cn","slug":"esteem-cn","link":"/@robertyan/tags/esteem-cn/"},{"name":"team-cn","slug":"team-cn","link":"/@robertyan/tags/team-cn/"},{"name":"utopian-io","slug":"utopian-io","link":"/@robertyan/tags/utopian-io/"},{"name":"anti-abuse","slug":"anti-abuse","link":"/@robertyan/tags/anti-abuse/"},{"name":"steemcleaners","slug":"steemcleaners","link":"/@robertyan/tags/steemcleaners/"},{"name":"phishing","slug":"phishing","link":"/@robertyan/tags/phishing/"},{"name":"steem-guides","slug":"steem-guides","link":"/@robertyan/tags/steem-guides/"},{"name":"wherein","slug":"wherein","link":"/@robertyan/tags/wherein/"},{"name":"cn-activity","slug":"cn-activity","link":"/@robertyan/tags/cn-activity/"},{"name":"cn-couplet","slug":"cn-couplet","link":"/@robertyan/tags/cn-couplet/"},{"name":"free-snaxaccount","slug":"free-snaxaccount","link":"/@robertyan/tags/free-snaxaccount/"},{"name":"cn-hello","slug":"cn-hello","link":"/@robertyan/tags/cn-hello/"},{"name":"sct","slug":"sct","link":"/@robertyan/tags/sct/"},{"name":"sct-cn","slug":"sct-cn","link":"/@robertyan/tags/sct-cn/"},{"name":"development","slug":"development","link":"/@robertyan/tags/development/"},{"name":"steem","slug":"steem","link":"/@robertyan/tags/steem/"},{"name":"hexo","slug":"hexo","link":"/@robertyan/tags/hexo/"},{"name":"awesome","slug":"awesome","link":"/@robertyan/tags/awesome/"},{"name":"steem-engine","slug":"steem-engine","link":"/@robertyan/tags/steem-engine/"},{"name":"partiko","slug":"partiko","link":"/@robertyan/tags/partiko/"},{"name":"palnet","slug":"palnet","link":"/@robertyan/tags/palnet/"},{"name":"zzan","slug":"zzan","link":"/@robertyan/tags/zzan/"},{"name":"data","slug":"data","link":"/@robertyan/tags/data/"},{"name":"mediaofficials","slug":"mediaofficials","link":"/@robertyan/tags/mediaofficials/"},{"name":"actnearn","slug":"actnearn","link":"/@robertyan/tags/actnearn/"},{"name":"marlians","slug":"marlians","link":"/@robertyan/tags/marlians/"},{"name":"neoxian","slug":"neoxian","link":"/@robertyan/tags/neoxian/"},{"name":"lassecash","slug":"lassecash","link":"/@robertyan/tags/lassecash/"},{"name":"steemleo","slug":"steemleo","link":"/@robertyan/tags/steemleo/"},{"name":"cn-programming","slug":"cn-programming","link":"/@robertyan/tags/cn-programming/"},{"name":"sct-freeboard","slug":"sct-freeboard","link":"/@robertyan/tags/sct-freeboard/"},{"name":"tunes","slug":"tunes","link":"/@robertyan/tags/tunes/"},{"name":"upfundme","slug":"upfundme","link":"/@robertyan/tags/upfundme/"},{"name":"lifestyle","slug":"lifestyle","link":"/@robertyan/tags/lifestyle/"},{"name":"stem","slug":"stem","link":"/@robertyan/tags/stem/"},{"name":"whalepower","slug":"whalepower","link":"/@robertyan/tags/whalepower/"},{"name":"ocd-resteem","slug":"ocd-resteem","link":"/@robertyan/tags/ocd-resteem/"},{"name":"dblog","slug":"dblog","link":"/@robertyan/tags/dblog/"},{"name":"hive-180932","slug":"hive-180932","link":"/@robertyan/tags/hive-180932/"},{"name":"tron","slug":"tron","link":"/@robertyan/tags/tron/"},{"name":"steemit","slug":"steemit","link":"/@robertyan/tags/steemit/"},{"name":"esteem","slug":"esteem","link":"/@robertyan/tags/esteem/"},{"name":"proposal","slug":"proposal","link":"/@robertyan/tags/proposal/"},{"name":"downvote","slug":"downvote","link":"/@robertyan/tags/downvote/"},{"name":"diamondtoken","slug":"diamondtoken","link":"/@robertyan/tags/diamondtoken/"},{"name":"sct-userguide","slug":"sct-userguide","link":"/@robertyan/tags/sct-userguide/"}],"categories":[{"name":"cn","slug":"cn","link":"/@robertyan/categories/cn/"},{"name":"life","slug":"life","link":"/@robertyan/categories/life/"},{"name":"cn-stem","slug":"cn-stem","link":"/@robertyan/categories/cn-stem/"},{"name":"steempress","slug":"steempress","link":"/@robertyan/categories/steempress/"},{"name":"busy","slug":"busy","link":"/@robertyan/categories/busy/"},{"name":"esteem-cn","slug":"esteem-cn","link":"/@robertyan/categories/esteem-cn/"},{"name":"free-snaxaccount","slug":"free-snaxaccount","link":"/@robertyan/categories/free-snaxaccount/"},{"name":"sct","slug":"sct","link":"/@robertyan/categories/sct/"},{"name":"utopian-io","slug":"utopian-io","link":"/@robertyan/categories/utopian-io/"},{"name":"awesome","slug":"awesome","link":"/@robertyan/categories/awesome/"},{"name":"steem-engine","slug":"steem-engine","link":"/@robertyan/categories/steem-engine/"},{"name":"steem-guides","slug":"steem-guides","link":"/@robertyan/categories/steem-guides/"},{"name":"cn-reader","slug":"cn-reader","link":"/@robertyan/categories/cn-reader/"},{"name":"hive-180932","slug":"hive-180932","link":"/@robertyan/categories/hive-180932/"}]}